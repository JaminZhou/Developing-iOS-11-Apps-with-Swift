1
00:00:00,401 --> 00:00:04,937
[音乐]

2
00:00:05,005 --> 00:00:08,940
斯坦福大学。 >>好的，好吧，

3
00:00:09,009 --> 00:00:12,444
欢迎来到斯坦福CS193P第9讲，2017年秋季。

4
00:00:12,512 --> 00:00:15,080
所以我们今天有两个主要话题。

5
00:00:15,149 --> 00:00:18,249
我们将讨论视图控制器的生命周期，

6
00:00:18,318 --> 00:00:20,285
这是你的MVC活着的时候

7
00:00:20,354 --> 00:00:23,655
做所有的事情，然后最终死去。

8
00:00:23,724 --> 00:00:27,525
然后我们也会讨论一个名为scroll的UIView

9
00:00:27,594 --> 00:00:31,163
它允许你通过平移查看大UIViews

10
00:00:31,232 --> 00:00:34,899
放在他们身上，等等，好吧。

11
00:00:34,968 --> 00:00:35,500
查看控制器生命周期。

12
00:00:35,569 --> 00:00:38,604
所以视图控制器有一个生命周期。

13
00:00:38,672 --> 00:00:41,640
它基本上由一系列消息标记。

14
00:00:41,708 --> 00:00:44,543
在UIView控制器上调用的方法。

15
00:00:44,611 --> 00:00:48,246
为什么我们关心这个呢？因为在各种

16
00:00:48,315 --> 00:00:50,849
视图控制器的生命周期阶段，我们可能会

17
00:00:50,918 --> 00:00:54,319
想参与，对，并做某些事情。所以

18
00:00:54,388 --> 00:00:57,488
这个生命周期从创建你的UIView开始

19
00:00:57,557 --> 00:01:00,993
控制器。对于您编写的视图控制器，

20
00:01:01,061 --> 00:01:03,161
这几乎总是出自故事板，

21
00:01:03,230 --> 00:01:05,731
对？你把东西拖入故事板，你把你的视图

22
00:01:05,799 --> 00:01:08,433
在那里。这就是你如何知道如何创建一个MVC。

23
00:01:08,502 --> 00:01:11,203
所以你的生命周期将会在你的应用程序运行时发生

24
00:01:11,271 --> 00:01:13,805
你已经接触到某种东西，或者这是你的第一个视图

25
00:01:13,873 --> 00:01:17,876
控制器在你的故事板或什么。现在iOS

26
00:01:17,945 --> 00:01:19,911
也有一些我们还没有了解的API

27
00:01:19,980 --> 00:01:23,781
可以给你一个视图控制器，你可以

28
00:01:23,850 --> 00:01:27,686
然后继续等等。例如，有一种视图

29
00:01:27,754 --> 00:01:30,588
控制器，可让您用相机拍摄照片。

30
00:01:30,657 --> 00:01:33,424
所以，它也可以来自代码，它不仅仅是

31
00:01:33,493 --> 00:01:35,827
故事板。但一旦创建，

32
00:01:35,896 --> 00:01:38,396
它发生了什么？你已经学到了很多

33
00:01:38,465 --> 00:01:40,598
关于视图控制器的生命周期。

34
00:01:40,667 --> 00:01:41,866
当然，第一件事

35
00:01:41,935 --> 00:01:44,903
在它被创建之后发生的是它准备好了

36
00:01:44,972 --> 00:01:48,840
被困在，对吗？所以如果它因为屏幕而放在屏幕上

37
00:01:48,909 --> 00:01:51,109
继续，准备部分发生。

38
00:01:51,178 --> 00:01:54,846
然后，重要的是outlet设置，或

39
00:01:54,914 --> 00:01:58,383
你的用户界面按钮和任何这些连接。

40
00:01:58,452 --> 00:02:00,752
然后你的视图控制器出现

41
00:02:00,821 --> 00:02:04,922
可能会在屏幕上消失，对吧？想象一下在一个分割视图

42
00:02:04,991 --> 00:02:08,493
肖像模式，主人消失。然后你可以

43
00:02:08,562 --> 00:02:10,929
将其滑出，然后将其滑开，以显示和

44
00:02:10,997 --> 00:02:14,700
例如，消失。另外，一路走来，像所有的一样

45
00:02:14,768 --> 00:02:17,435
这正在发生，你可能会有几何变化。

46
00:02:17,504 --> 00:02:19,537
最值得注意的是，你旋转你的设备，并

47
00:02:19,606 --> 00:02:22,340
你从这个高而薄的矩形变成更短，

48
00:02:22,409 --> 00:02:25,777
更宽的矩形。所以几何变化可能会发生。

49
00:02:25,845 --> 00:02:27,846
它们也可能因其他原因而发生。

50
00:02:27,915 --> 00:02:30,148
再次，在分裂的视图中，你知道，你的主人，

51
00:02:30,217 --> 00:02:32,751
有时它在左边的小高点上。

52
00:02:32,819 --> 00:02:34,786
有时在左边有一个较短的东西

53
00:02:34,855 --> 00:02:35,954
在右边的一件事，

54
00:02:36,023 --> 00:02:37,556
它有时会填满整个屏幕。

55
00:02:37,625 --> 00:02:38,790
或者，当它在风景中时，

56
00:02:38,858 --> 00:02:39,958
它只填充屏幕的一部分。

57
00:02:40,027 --> 00:02:42,728
所以几何形状正在改变，

58
00:02:42,796 --> 00:02:44,963
取决于你的视图控制器的情况。

59
00:02:45,032 --> 00:02:47,465
最后，最重要的是，

60
00:02:47,534 --> 00:02:49,067
在低内存的情况下，

61
00:02:49,136 --> 00:02:51,669
你可能会要求你的视图控制器释放

62
00:02:51,738 --> 00:02:54,238
一些记忆，我们会在第二时间谈论这个。

63
00:02:54,307 --> 00:02:57,075
好吧，让我们来谈谈所有发送的方法

64
00:02:57,144 --> 00:02:59,644
当所有这些事情发生时，向你的视图控制器

65
00:02:59,713 --> 00:03:02,414
现在，你已经知道了第一个，viewDidLoad，I

66
00:03:02,483 --> 00:03:06,918
在你的作业中提到它。这是一个非常强大的地方

67
00:03:06,987 --> 00:03:10,555
做初始化，因为你已经准备好了

68
00:03:10,624 --> 00:03:14,226
你的所有outlet都已设好，现在你真的可以去城里了。

69
00:03:14,295 --> 00:03:16,528
所以这对我们来说很好，而且我们通常会投入最多

70
00:03:16,596 --> 00:03:19,097
我们在viewDidLoad中初始化一个巨大的

71
00:03:19,166 --> 00:03:24,302
例外。它是红色的，所以不要错过它的几何形状。

72
00:03:24,371 --> 00:03:28,606
当viewDidLoad运行时，您的边界尚未设置，

73
00:03:28,675 --> 00:03:32,510
所以不要把这些东西放在这里与尺寸有关

74
00:03:32,579 --> 00:03:35,880
你在屏幕上。因为你不适合

75
00:03:35,949 --> 00:03:39,751
无论你在哪个设备上，好吧，这非常重要。

76
00:03:39,820 --> 00:03:42,453
把东西放在这里然后你就是很常见的错误

77
00:03:42,522 --> 00:03:45,023
只是想知道为什么，当你在不同的设备上运行它时，你的

78
00:03:45,091 --> 00:03:47,893
代码不起作用了。所以不要放几何。

79
00:03:47,961 --> 00:03:49,661
我会告诉你在哪里放几何

80
00:03:49,730 --> 00:03:52,664
在这一刻的变化。那是viewDidLoad，

81
00:03:52,732 --> 00:03:57,769
一个伟大的。下一个是viewWillAppear。

82
00:03:57,837 --> 00:04:00,739
顺便提一句，请注意所有这些我调用super

83
00:04:00,808 --> 00:04:03,775
viewWillAppear或者superviewDidLoad在它们中，

84
00:04:03,844 --> 00:04:06,344
你总是这样做，不要忘记这样做。

85
00:04:06,413 --> 00:04:09,247
事实上，在前一天的演示中，我注意到我忘了这么做

86
00:04:09,316 --> 00:04:11,616
它，所以我们将在今天的演示中解决这个问题。

87
00:04:11,685 --> 00:04:13,485
但是，我注意到你的作业，

88
00:04:13,554 --> 00:04:16,087
你们中许多人没有叫超级viewDidLoad。当然，

89
00:04:16,156 --> 00:04:17,689
我们没有谈论视图控制生命周期

90
00:04:17,758 --> 00:04:18,890
我不会为此责怪你。

91
00:04:18,959 --> 00:04:21,425
但从现在开始，别忘了做super，

92
00:04:21,494 --> 00:04:24,863
让你的父类有机会发现它出现或

93
00:04:24,931 --> 00:04:28,333
它得到了加载或其他。所以viewWillAppear，

94
00:04:28,401 --> 00:04:30,135
你有什么看法？

95
00:04:30,204 --> 00:04:32,537
viewWillAppear正是它听起来像，

96
00:04:32,606 --> 00:04:35,707
你的视图控制器的视图即将出现在屏幕上。

97
00:04:35,776 --> 00:04:38,743
所以这是你可以跟上的东西

98
00:04:38,812 --> 00:04:42,980
当你不在屏幕上时，在世界上消失了。要么

99
00:04:43,049 --> 00:04:44,983
如果这是您第一次来到屏幕上，

100
00:04:45,052 --> 00:04:47,084
赶上世界的状态。所以

101
00:04:47,153 --> 00:04:49,988
这真的是一个加载你所有视图的地方

102
00:04:50,057 --> 00:04:52,123
来自你的模型的信息，特别是如果你的

103
00:04:52,191 --> 00:04:54,626
模型可以改变，比如说你的模型是一个网络

104
00:04:54,694 --> 00:04:57,628
数据库。其他人正在编辑它，所以它可以改变。

105
00:04:57,697 --> 00:05:00,465
所以这里是你想要了解最新的地方，因为当你的时候

106
00:05:00,534 --> 00:05:02,501
视图不在屏幕上，你不想要你的视图

107
00:05:02,569 --> 00:05:05,804
控制器要做很多工作。它只是想有点

108
00:05:05,872 --> 00:05:08,005
静静地坐在那里，然后当它回来的时候，

109
00:05:08,074 --> 00:05:10,809
那么它在这里做一些小设置。

110
00:05:10,878 --> 00:05:12,811
有一点需要注意，关于viewWill当然会出现，

111
00:05:12,880 --> 00:05:14,011
它可以被重复调用，

112
00:05:14,080 --> 00:05:15,880
因为你的视图控制器可以消失并回来，

113
00:05:15,949 --> 00:05:18,716
然后走开回来。但是viewDidLoad是唯一的

114
00:05:18,785 --> 00:05:22,187
在视图控制器的生命周期中调用一次。它的

115
00:05:22,255 --> 00:05:24,790
在你准备好和你的outlets之后只需要一次调用

116
00:05:24,858 --> 00:05:26,858
被设置，它被调用一次，就是这样。但

117
00:05:26,926 --> 00:05:29,427
viewWill显然每次都可以调用

118
00:05:29,496 --> 00:05:34,232
会在屏幕上回来。现在还有一个viewDidAppear。

119
00:05:34,301 --> 00:05:37,002
这是在您进入屏幕后调用给您的。

120
00:05:37,070 --> 00:05:39,137
现在，你想在这里做什么？

121
00:05:39,205 --> 00:05:41,205
做更新等事情有点晚

122
00:05:41,274 --> 00:05:43,975
因为这些东西已经打开，所以你在这里看到你的模型

123
00:05:44,044 --> 00:05:46,577
屏幕。你不希望事情出现在屏幕错误和

124
00:05:46,646 --> 00:05:49,414
然后视图确实出现了，现在你已经清理了它们。但

125
00:05:49,483 --> 00:05:52,050
这是做开始动画等事情的好地方

126
00:05:52,119 --> 00:05:54,085
因为你无法做到这一点viewWillAppear。

127
00:05:54,153 --> 00:05:55,086
你不在屏幕上，

128
00:05:55,154 --> 00:05:58,623
是的，对。启动一个计时器，在屏幕上执行某些操作

129
00:05:58,692 --> 00:06:02,494
开始观察世界上像GPS位置一样的东西

130
00:06:02,563 --> 00:06:06,531
或者您的手机的陀螺仪位置。好的，那些

131
00:06:06,599 --> 00:06:10,368
是在屏幕上时你可以做的所有事情。可以，然后呢

132
00:06:10,437 --> 00:06:12,770
这是viewDidAppear真的很好。

133
00:06:12,839 --> 00:06:15,640
也许还有一件事你可以做viewDidAppear

134
00:06:15,709 --> 00:06:19,744
开始一个非常昂贵的事情。你的东西

135
00:06:19,813 --> 00:06:22,079
不想在viewDidLoad中启动，因为，

136
00:06:22,148 --> 00:06:24,782
当viewDidLoad发生时，你的视图控制器可能不会

137
00:06:24,851 --> 00:06:27,519
实际上出现在屏幕上。好的，没有保证

138
00:06:27,588 --> 00:06:30,021
任何人都会真的把你放在屏幕上。

139
00:06:30,089 --> 00:06:32,824
所以viewDidLoad不是一个伟大的，甚至veiwWillAppear，

140
00:06:32,893 --> 00:06:35,493
令人惊讶的是，可能会接到你的调用，然后，

141
00:06:35,562 --> 00:06:38,763
你实际上并没有出现在屏幕上。所以viewDidAppear，

142
00:06:38,832 --> 00:06:41,466
你知道你在屏幕上。所以值得做一些事情

143
00:06:41,534 --> 00:06:44,336
昂贵。现在会是什么昂贵的东西？

144
00:06:44,404 --> 00:06:47,539
假设你想从网络上获取一个巨大的图像，

145
00:06:47,607 --> 00:06:49,407
好吧，几乎每次你要做点什么

146
00:06:49,476 --> 00:06:52,377
网络，这是非常昂贵的。因为在电话上，

147
00:06:52,446 --> 00:06:54,913
也许你只有一个蜂窝连接，这是一个糟糕的

148
00:06:54,982 --> 00:06:57,515
连接，你在某个地方的乡间小路上，

149
00:06:57,584 --> 00:06:59,917
它几乎没有得到任何。所以它可能非常完美

150
00:06:59,986 --> 00:07:02,921
昂贵。出于同样的原因，这些昂贵的

151
00:07:02,989 --> 00:07:06,491
事情，我们几乎总是在后台做它们。和

152
00:07:06,560 --> 00:07:08,292
星期三，我要谈谈如何把事情放进去

153
00:07:08,361 --> 00:07:12,664
的背景。那是因为它绝对是主要目标，

154
00:07:12,732 --> 00:07:15,300
主要的事情你必须做的任何

155
00:07:15,368 --> 00:07:20,438
iOS应用程序永远不会阻止用户界面体验。

156
00:07:20,507 --> 00:07:23,308
用户总是必须能够触及事物，

157
00:07:23,377 --> 00:07:26,944
轻扫周围的东西。如果他们轻扫或触摸和

158
00:07:27,013 --> 00:07:30,348
你的应用程序被冻结，他们不会使用你的应用程序，相信我。

159
00:07:30,417 --> 00:07:32,983
好的，所以这是最重要的。我们的方式

160
00:07:33,052 --> 00:07:35,653
那就是通过放置会阻塞的东西，比如等待

161
00:07:35,722 --> 00:07:38,723
网络上的某些东西，主队列，我们​​称之为，

162
00:07:38,792 --> 00:07:41,459
将主线程关闭到这些后台进程中。

163
00:07:41,528 --> 00:07:43,294
所以我们会在周三讨论所有这些，但是

164
00:07:43,362 --> 00:07:47,298
viewDidAppear是一个踢出这些东西的好地方。

165
00:07:47,366 --> 00:07:50,334
因为你不想浪费他们的蜂窝数据使用

166
00:07:50,403 --> 00:07:53,137
如果你实际上不会出现的话，会获取一张图片。

167
00:07:53,206 --> 00:07:55,673
现在这意味着什么，因为你是在踢这个

168
00:07:55,742 --> 00:07:58,943
在背景中，当你已经出现在屏幕上时，

169
00:07:59,012 --> 00:08:03,614
你必须设计你的用户界面，以便他们始终能够工作

170
00:08:03,683 --> 00:08:07,652
昂贵的东西还没有回来。你明白为什么

171
00:08:07,720 --> 00:08:10,488
那是？这件昂贵的东西可能需要十分钟或

172
00:08:10,557 --> 00:08:13,524
例如，可能永远不会回来，因为网络不好。

173
00:08:13,593 --> 00:08:16,627
所以你必须放置地方持有人或纺车轮或

174
00:08:16,696 --> 00:08:18,362
加载，点，点，点或

175
00:08:18,431 --> 00:08:21,999
一些动画显示用户，是的，我正在抓你的

176
00:08:22,068 --> 00:08:25,403
事情。我在做这个工作。但是你的用户界面仍然需要充分

177
00:08:25,472 --> 00:08:27,938
响应。如果他们在导航控制中，

178
00:08:28,007 --> 00:08:31,309
他们必须能够回击并放弃。好，或者

179
00:08:31,378 --> 00:08:34,545
他们必须击中底部的选项卡并转到另一个选项卡

180
00:08:34,614 --> 00:08:37,849
标签或任何他们想要做的事情。所以设计用户界面，

181
00:08:37,918 --> 00:08:40,518
他们就是这样，稍微调整一下。

182
00:08:40,587 --> 00:08:43,154
到目前为止，你可能不需要这么做。所以

183
00:08:43,223 --> 00:08:44,822
你大多是线性思维。

184
00:08:44,891 --> 00:08:47,958
好的，我将把这个图像放在屏幕上，所以

185
00:08:48,027 --> 00:08:50,161
我会去获取图像。然后我会把它放在屏幕上。

186
00:08:50,229 --> 00:08:51,929
那么，你不能这样想。你必须思考，

187
00:08:51,998 --> 00:08:54,932
我想把它放在屏幕上，所以我会放一个图像显示

188
00:08:55,001 --> 00:08:58,503
没有加载的屏幕上的东西，有一个微调。

189
00:08:58,571 --> 00:09:00,772
然后，以后，用户可以做他们想做的任何事情。

190
00:09:00,841 --> 00:09:02,707
然后当图片到达时，

191
00:09:02,776 --> 00:09:06,411
现在我将更新我的用户界面以显示该图像。可以，然后呢

192
00:09:06,479 --> 00:09:08,947
这是一种有点思考

193
00:09:09,016 --> 00:09:11,849
其他维度，时间维度。

194
00:09:11,918 --> 00:09:16,053
好的，好的，所以还有视图会消失。

195
00:09:16,122 --> 00:09:18,523
你在离开之前就已经明白了。

196
00:09:18,592 --> 00:09:21,893
这是撤销你所做的一切的好地方

197
00:09:21,961 --> 00:09:25,329
当视图出现时。所以如果你启动了一个计时器或者

198
00:09:25,398 --> 00:09:28,833
开始一些动画或开始观看GPS，或者

199
00:09:28,902 --> 00:09:33,037
像这样的事情，这是停止这样做的好地方。

200
00:09:33,105 --> 00:09:36,875
因为你现在知道你会消失。和

201
00:09:36,943 --> 00:09:39,143
那么当你重新出现时，你会重新打开它

202
00:09:39,212 --> 00:09:42,346
视图确实出现。所以他们有点合作，这两个。和

203
00:09:42,415 --> 00:09:45,083
然后有viewDidDisappear。好吧，这个被发送到

204
00:09:45,152 --> 00:09:47,318
你在完全消失之后。

205
00:09:47,387 --> 00:09:49,153
通常，我们在这里做的不多。

206
00:09:49,222 --> 00:09:51,890
但你可以想象也许在这里清理你的MVC，

207
00:09:51,958 --> 00:09:55,960
可能会挽救某些国家或某些东西但是这是一个

208
00:09:56,029 --> 00:10:01,065
几乎没有使用过。好吧，我说在viewDidLoad中，

209
00:10:01,134 --> 00:10:04,202
你不能做几何。那么你在哪里做几何？

210
00:10:04,271 --> 00:10:07,438
那么，你可能会想，我可以在视图中做到这一点。

211
00:10:07,507 --> 00:10:10,908
因为我即将出现，所以我的几何将会

212
00:10:10,977 --> 00:10:14,179
是的，没有。你会这么想，但那是错误的。

213
00:10:14,247 --> 00:10:16,147
你显然无法做到这一点，

214
00:10:16,216 --> 00:10:17,449
因为现在你已经在屏幕上了。

215
00:10:17,517 --> 00:10:20,218
现在为时已晚，对几何做任何事情。

216
00:10:20,287 --> 00:10:22,687
所以你做几何的地方在于这两种方法，

217
00:10:22,756 --> 00:10:26,190
viewWillLayoutSubviews（）和viewDidLayoutSubviews（）。

218
00:10:26,259 --> 00:10:30,428
这两种方法发送到您的控制器时，它的视图，

219
00:10:30,497 --> 00:10:33,631
self.view，控制器的顶层视图，

220
00:10:33,700 --> 00:10:37,702
那个吧，查看。当时那个视图，就在之前

221
00:10:37,771 --> 00:10:42,273
之后，该视图发送，layoutSubviews。

222
00:10:42,341 --> 00:10:46,144
那么，为什么顶级视图会发送layoutSubviews呢？

223
00:10:46,213 --> 00:10:49,280
同样的原因任何其他视图。也许子视图来了

224
00:10:49,349 --> 00:10:51,448
走了出去。这是常见的。

225
00:10:51,517 --> 00:10:55,587
或者其界限发生了变化。所以这就是为什么这是一个好地方

226
00:10:55,655 --> 00:11:00,357
把几何变化。因为在这里，这总是会发生的

227
00:11:00,426 --> 00:11:04,428
当顶级视图的边界发生变化时发生。

228
00:11:04,497 --> 00:11:07,698
现在通常，你不需要实现这些方法，为什么？

229
00:11:07,767 --> 00:11:10,301
因为你使用自动布局，对吧？所有那些Ctrl

230
00:11:10,370 --> 00:11:12,837
+拖动，将事物固定到边缘，保留东西

231
00:11:12,906 --> 00:11:16,540
在中心，确定纵横比，所有这些业务，

232
00:11:16,609 --> 00:11:19,944
你正在这样做。那会自动被唤醒

233
00:11:20,013 --> 00:11:22,713
顶级视图的layoutSubviews。所以

234
00:11:22,782 --> 00:11:25,349
你实际上不需要在你的控制器中做任何事情。

235
00:11:25,418 --> 00:11:28,586
好的，但是如果你觉得你需要做点什么

236
00:11:28,655 --> 00:11:32,123
你的控制器，这绝对是做这件事的地方。

237
00:11:32,192 --> 00:11:35,092
现在关于这两种方法你必须注意一件事

238
00:11:35,161 --> 00:11:37,729
的，他们可能经常被调用。和

239
00:11:37,797 --> 00:11:40,265
有时你可能会感到惊讶，哇，

240
00:11:40,333 --> 00:11:42,801
没有改变。界限没有改变，什么都没有改变

241
00:11:42,869 --> 00:11:45,169
随着子视图改变，为什么这会被调用？

242
00:11:45,238 --> 00:11:48,572
那么，系统允许布置子视图，确保

243
00:11:48,641 --> 00:11:51,976
任何视图的子视图布局。也许吧

244
00:11:52,045 --> 00:11:54,645
想要做一个动画，它正在铺设开始

245
00:11:54,714 --> 00:11:56,981
以及它将在或之间做翻转的最后阶段

246
00:11:57,049 --> 00:11:59,683
一些东西。而界限并没有改变，但它想要的

247
00:11:59,752 --> 00:12:01,586
以确保意见是布局。要么

248
00:12:01,655 --> 00:12:04,121
它把它们放在目的地，结束了

249
00:12:04,190 --> 00:12:07,391
动画等。所以，它为什么并不重要，

250
00:12:07,460 --> 00:12:10,094
但系统可以随时调用它。

251
00:12:10,163 --> 00:12:12,497
因为它可以随时调用layoutSubviews，

252
00:12:12,565 --> 00:12:14,232
这些也可以随时调用。

253
00:12:14,300 --> 00:12:16,834
所以你要确保这一点，如果你做了一些事情

254
00:12:16,902 --> 00:12:19,703
对你的反弹变化的反应，你想确定

255
00:12:19,772 --> 00:12:22,306
这些方法正确有效地工作

256
00:12:22,375 --> 00:12:25,409
如果他们一再被呼叫。他们可能会被召回两次

257
00:12:25,478 --> 00:12:27,678
例如，具有完全相同边界的行。

258
00:12:27,747 --> 00:12:30,280
所以你不想要，如果你必须做一些事情

259
00:12:30,349 --> 00:12:31,682
复杂而昂贵，

260
00:12:31,751 --> 00:12:36,153
你当然不会连续做两次。可以，然后呢

261
00:12:36,222 --> 00:12:39,424
那是几何。现在有几何的特殊情况

262
00:12:39,492 --> 00:12:41,459
改变，这是自动旋转。所以

263
00:12:41,528 --> 00:12:44,095
这是你将你的设备从风景变成肖像或者

264
00:12:44,164 --> 00:12:47,565
来来回回。当发生这种情况，当然，你会得到

265
00:12:47,634 --> 00:12:50,167
layoutSubviews的东西，因为你的视图的边界

266
00:12:50,236 --> 00:12:53,037
直到你得到viewWill / DidLayoutSubviews。

267
00:12:53,105 --> 00:12:56,774
但你也有这个免费的动画

268
00:12:56,842 --> 00:13:01,312
继续。所以iOS会自动动画所有的移动

269
00:13:01,381 --> 00:13:04,849
您的肖像layoutSubviews的子视图

270
00:13:04,918 --> 00:13:07,752
到景观布局的综合位置。

271
00:13:07,820 --> 00:13:08,886
它为你做到了。

272
00:13:08,955 --> 00:13:12,223
现在，这很好，可以为你节省很多工作。但如果是

273
00:13:12,292 --> 00:13:15,493
某种原因你想参加那个动画。

274
00:13:15,562 --> 00:13:18,228
现在为什么会这样？我不知道你是否有你

275
00:13:18,297 --> 00:13:21,132
大家有没有看过iPhone上的计算器应用程序？

276
00:13:21,201 --> 00:13:23,501
当它是肖像时，这些按钮非常大，并且

277
00:13:23,570 --> 00:13:26,304
没有很多计算按钮

278
00:13:26,372 --> 00:13:29,774
次，加，减，等于。就是这样，对吧？但

279
00:13:29,843 --> 00:13:32,476
当你切换到风景时，按钮会变得很小

280
00:13:32,545 --> 00:13:33,511
有一大堆。

281
00:13:33,579 --> 00:13:36,814
平方根，算法，各种各样的东西。

282
00:13:36,883 --> 00:13:39,250
好吧，当这种旋转发生时，

283
00:13:39,319 --> 00:13:42,353
计算器应用程序想要参与，因为它想

284
00:13:42,421 --> 00:13:45,622
也许会在屏幕上出现额外的按钮。

285
00:13:45,691 --> 00:13:48,492
好吧，布局也从相当大的变化

286
00:13:48,561 --> 00:13:51,562
中间的按钮位于侧面和侧面的按钮上

287
00:13:51,630 --> 00:13:53,063
出现新按钮。

288
00:13:53,132 --> 00:13:55,599
这就是你可能想参加的地方。所以

289
00:13:55,668 --> 00:13:59,070
你如何使用这种方法？那么，视图将转换到

290
00:13:59,138 --> 00:14:01,739
与协调员的大小来做到这一点。那么，协调员

291
00:14:01,808 --> 00:14:04,241
这是通过你是动画协调员。

292
00:14:04,310 --> 00:14:08,513
它有一个方法在过渡时称为动画。

293
00:14:08,581 --> 00:14:11,615
在那里，你可以提供一个动画块，

294
00:14:11,684 --> 00:14:14,952
封闭并做你的动画。那动画

295
00:14:15,021 --> 00:14:18,489
将与该系统的动画一起执行

296
00:14:18,558 --> 00:14:21,525
当它旋转时。好吧，我不会再说话了

297
00:14:21,594 --> 00:14:23,928
关于它比那。这只是让你知道它在那里。

298
00:14:23,997 --> 00:14:26,697
90％的时间，你不需要那样做。现在，

299
00:14:26,766 --> 00:14:29,032
在你目前的任务，任务三，或

300
00:14:29,101 --> 00:14:32,503
指派四，你可能，如果你远离它，或者

301
00:14:32,572 --> 00:14:34,605
如果你不是，最终你会注意到，

302
00:14:34,674 --> 00:14:37,541
你有动画，就像发牌一样。

303
00:14:37,610 --> 00:14:39,877
那么，如果你开始交易一张卡片会发生什么，

304
00:14:39,945 --> 00:14:41,378
它开始飞过屏幕，

305
00:14:41,447 --> 00:14:46,483
然后旋转。旋转您的设备。那么，是什么

306
00:14:46,552 --> 00:14:50,254
会发生的是这是要尝试做一些动画。

307
00:14:50,323 --> 00:14:53,857
现在，我专门投入了这个任务，不用担心

308
00:14:53,926 --> 00:14:58,062
那。本周你不必担心这种情况。但

309
00:14:58,130 --> 00:15:00,798
你可能会问，我在那里做什么？

310
00:15:00,867 --> 00:15:04,068
那么，你必须明白，这可能会发生

311
00:15:04,137 --> 00:15:07,738
处理它。因为当你扔出一张牌时

312
00:15:07,806 --> 00:15:11,809
穿过屏幕，这件事开始动画

313
00:15:11,878 --> 00:15:14,645
相同观点的相同属性，

314
00:15:14,714 --> 00:15:18,749
它会把它放在错误的地方。

315
00:15:18,818 --> 00:15:20,518
因为它会把它搬到一个新的地方。

316
00:15:20,586 --> 00:15:24,121
它可能会从当前状态开始动画。和

317
00:15:24,190 --> 00:15:28,693
所以你最终可能会在完全错误的地方看到意见。所以

318
00:15:28,762 --> 00:15:31,829
你需要能够设置你的动画

319
00:15:31,897 --> 00:15:35,532
如果他们被别人接管，好吧，

320
00:15:35,601 --> 00:15:40,337
他们终于在正确的地方结束了。好吧，等等

321
00:15:40,406 --> 00:15:42,406
这可能需要一点调整，就像我说的那样，

322
00:15:42,475 --> 00:15:44,809
这个动画调整业务。

323
00:15:44,878 --> 00:15:47,411
这可能需要一些。但不是必需的

324
00:15:47,480 --> 00:15:50,648
任务四。这是一个高级动画的一点点，

325
00:15:50,717 --> 00:15:53,785
所以你必须解决这个问题。好的，这是最后一个和

326
00:15:53,853 --> 00:15:55,719
绝对最少的是低内存。

327
00:15:55,788 --> 00:16:00,424
这只会是，你只会对此感兴趣

328
00:16:00,493 --> 00:16:05,663
如果你的应用有像视频这样的大内存项目。图片，

329
00:16:05,732 --> 00:16:09,767
巨大的声音文件。非常高分辨率的大声音文件

330
00:16:09,835 --> 00:16:13,871
例。你知道这可能是一个iOS设备

331
00:16:13,940 --> 00:16:16,507
有许多应用程序正在做很多大照片

332
00:16:16,576 --> 00:16:19,343
操纵什么的。它可能

333
00:16:19,412 --> 00:16:22,280
内存不足。大多数新的都有

334
00:16:22,349 --> 00:16:24,815
这从来没有发生过。但

335
00:16:24,884 --> 00:16:27,417
也许如果你有一个内存泄漏的应用程序

336
00:16:27,486 --> 00:16:32,256
在内存泄漏大的图像，然后可能发生。但

337
00:16:32,325 --> 00:16:34,458
无论如何，当这种情况发生时你会被发送。

338
00:16:34,527 --> 00:16:37,161
而这一切都是要求你的视图控制器在这里

339
00:16:37,230 --> 00:16:40,931
请释放您可以重新创建的堆中的任何内容

340
00:16:41,000 --> 00:16:45,370
以后相当容易，或者当你需要时。所以

341
00:16:45,438 --> 00:16:48,172
这是一种内存清理类的事情。

342
00:16:48,241 --> 00:16:51,441
我要说的一件事是，如果你的应用程序泄漏

343
00:16:51,510 --> 00:16:53,944
在堆中，你越来越大，而且

344
00:16:54,013 --> 00:16:56,780
它发送给你，并且你有不好的代码和

345
00:16:56,849 --> 00:16:59,483
你不知道如何清理它并继续泄漏，

346
00:16:59,552 --> 00:17:04,422
iOS可以杀死你。好吧，如果你是一个记忆力强大的人

347
00:17:04,490 --> 00:17:09,327
你不断泄漏，你可能会被杀死。所以就。真好

348
00:17:09,395 --> 00:17:12,163
作为一个糟糕的程序员的危险我猜。

349
00:17:12,231 --> 00:17:16,833
我可以被杀死。但几乎从未发生。好吧。

350
00:17:16,902 --> 00:17:20,204
最后一件事实际上回到了开始，这是

351
00:17:20,273 --> 00:17:23,174
正在从故事板醒来。这不是严格的

352
00:17:23,242 --> 00:17:25,743
视图控制器生命周期的一部分。但我把它放进去了

353
00:17:25,811 --> 00:17:28,546
这里是因为任何来自故事板的物体，

354
00:17:28,614 --> 00:17:31,482
所有的用户界面视图和你的视图控制器，

355
00:17:31,551 --> 00:17:36,353
得到发送awakeFromNib。这是发送很早，

356
00:17:36,422 --> 00:17:39,356
在初始化之后，在准备之前，

357
00:17:39,425 --> 00:17:43,928
在您的outlets设置之前。我倾向于远离尝试

358
00:17:43,996 --> 00:17:46,430
除非我真的需要早点设定，否则使用它。

359
00:17:46,499 --> 00:17:50,100
那天我们在演示中使用了这个，因为我想要我的

360
00:17:50,169 --> 00:17:52,903
我的分割视图的主人是分割视图的代表

361
00:17:52,972 --> 00:17:55,539
在拆分视图开始崩溃之前，真的很早

362
00:17:55,608 --> 00:17:56,573
在其他事情之上。

363
00:17:56,642 --> 00:18:00,644
作为代表，我想让自己在那里。

364
00:18:00,713 --> 00:18:02,813
但通常你不会把事情从NIB唤醒。

365
00:18:02,882 --> 00:18:06,383
我想说的是先尝试将其中一个放在其他位置，

366
00:18:06,452 --> 00:18:09,720
如果你真的需要这么早，那么你可以去

367
00:18:09,789 --> 00:18:12,489
以笔尖的方式做到这一点。当然，这只是会

368
00:18:12,558 --> 00:18:14,725
为故事板中出现的MVC工作，但再次，

369
00:18:14,793 --> 00:18:17,894
这几乎总是你的。你的人总是出来

370
00:18:17,963 --> 00:18:19,396
故事板。这只是系统的，

371
00:18:19,465 --> 00:18:24,068
就像相机一样，你从代码中获得，所以

372
00:18:24,137 --> 00:18:25,836
这里是View Controller生命周期的总结，

373
00:18:25,905 --> 00:18:28,039
你通常从一个故事板实例化，

374
00:18:28,107 --> 00:18:30,040
但有时你可以问IOS

375
00:18:30,109 --> 00:18:32,176
一个视图控制器。然后你从Nib醒来，

376
00:18:32,245 --> 00:18:34,278
如果你是从故事板出来的话。

377
00:18:34,346 --> 00:18:37,181
然后赛恩准备发生，以防其他情况

378
00:18:37,250 --> 00:18:41,485
MVC为您做好准备，请注意您的outlets尚未设置。

379
00:18:41,554 --> 00:18:45,722
然后你的outlets就定了。通过iOS连线。然后，

380
00:18:45,791 --> 00:18:49,793
viewDidLoad被调用，好吗？然后你出现和

381
00:18:49,862 --> 00:18:52,296
消失在屏幕上，你会得到那些viewWill和

382
00:18:52,365 --> 00:18:55,132
消失，出现，消失，来回。

383
00:18:55,201 --> 00:18:58,369
在这里的任何时候，你的几何图形都可能会改变，

384
00:18:58,438 --> 00:19:01,705
导致vewWillLayoutSubviews和viewDidLayoutSubviews来

385
00:19:01,774 --> 00:19:04,641
打电话。自动布局可能发生在两者之间

386
00:19:04,710 --> 00:19:07,611
这两个调用是因为LayoutSubViews会导致auto

387
00:19:07,680 --> 00:19:10,881
layout发生，如果在任何时候你开始

388
00:19:10,950 --> 00:19:13,317
使用大量内存甚至整个设备。

389
00:19:13,386 --> 00:19:16,153
使用大量的内存，你可能会得到didReceiveMemoryWarning

390
00:19:16,221 --> 00:19:18,789
你可以希望清理一些东西但是

391
00:19:18,858 --> 00:19:20,658
通常你不能，因为你没有什么大的东西。

392
00:19:22,028 --> 00:19:24,094
好，那就是View Controller生命周期。

393
00:19:24,163 --> 00:19:26,731
现在我在这里做一个小演示，我不会花太多钱

394
00:19:26,799 --> 00:19:31,135
因为我们在这里演示了scrollView来演示，

395
00:19:31,204 --> 00:19:34,071
但是，我要做的是向你展示一小段代码，

396
00:19:34,140 --> 00:19:37,875
你可以放入你的应用程序。

397
00:19:37,944 --> 00:19:39,610
它是UIViewController的子类。

398
00:19:39,678 --> 00:19:42,179
你可以把你所有的视图控制器改成

399
00:19:42,248 --> 00:19:44,915
继承而不是UI视图控制器，和

400
00:19:44,983 --> 00:19:47,885
它基本上只是把所有的打印声明

401
00:19:47,954 --> 00:19:49,553
视图控制器生命周期方法。

402
00:19:49,621 --> 00:19:50,788
所以你可以看你的控制台和

403
00:19:50,856 --> 00:19:53,323
看看视图控制器生命周期中发生了什么。

404
00:19:53,392 --> 00:19:56,126
我今天会做一点，只是为了向你展示一下

405
00:19:56,195 --> 00:19:57,929
一些有趣的事情。

406
00:19:57,997 --> 00:20:02,332
所以我会去做这个专注，好吧，

407
00:20:02,401 --> 00:20:04,101
顺便说一句，这里是我们的专注，

408
00:20:04,169 --> 00:20:08,572
这是我们上次离开的地方。这里是awakeFromNib，

409
00:20:08,641 --> 00:20:10,908
oops，super.awakeFromNib。

410
00:20:10,977 --> 00:20:13,443
AwakeFromNib你也想调用超级，即使再次，

411
00:20:13,512 --> 00:20:15,912
如果你控制生命周期方法，这并不是严格的。

412
00:20:15,981 --> 00:20:19,483
你仍然想给你超级班的机会去做。所以

413
00:20:19,551 --> 00:20:23,254
我写的代码如何工作？好的，

414
00:20:23,322 --> 00:20:28,091
这里就在这里。它在哪里？某处在这里。

415
00:20:28,160 --> 00:20:29,160
我会把这些东西排除在外。

416
00:20:29,229 --> 00:20:30,727
它是！好的，这里就在这里。

417
00:20:30,796 --> 00:20:32,930
让我们拖动它并观察它。

418
00:20:32,999 --> 00:20:38,068
我要复制它，所以

419
00:20:38,137 --> 00:20:40,470
这件事看起来是什么，你会想到。

420
00:20:40,539 --> 00:20:43,507
它是UI视图控制器的一个子类。和

421
00:20:43,576 --> 00:20:47,945
它只是打印所有你没有加载视图加载出现的

422
00:20:48,014 --> 00:20:51,581
接收那个早晨布局子视图将会过渡。

423
00:20:51,650 --> 00:20:54,785
它只是在屏幕上打印出来。

424
00:20:54,853 --> 00:20:57,454
它也有一种很酷的小变种，这个东西，

425
00:20:57,523 --> 00:21:01,125
vclLoggingName。当它在控制台上记录时，它会

426
00:21:01,194 --> 00:21:04,828
使用这个字符串来识别你的viewController。要么

427
00:21:04,897 --> 00:21:07,998
如果你没有子类，它只会使用这个名字

428
00:21:08,067 --> 00:21:10,067
的类。

429
00:21:10,135 --> 00:21:11,868
这是结构体的名称或

430
00:21:11,937 --> 00:21:16,073
你所在的类。描述自我类型的字符串。

431
00:21:16,142 --> 00:21:18,141
这就是你如何做到的。所以，

432
00:21:18,210 --> 00:21:21,545
我要让我的两个视图控制器集中注意力，

433
00:21:21,614 --> 00:21:24,515
对？我有一个主题和一个游戏。

434
00:21:24,584 --> 00:21:27,150
所以这里是游戏之一。而不是让它继承

435
00:21:27,219 --> 00:21:30,487
从UI视图控制器，我会让它继承

436
00:21:30,556 --> 00:21:34,491
VCL日志记录视图控制器。所以现在它继承的能力

437
00:21:34,560 --> 00:21:39,696
打印出所有这些视图控制器生命周期方法。

438
00:21:39,765 --> 00:21:41,164
我要重写这个，

439
00:21:41,233 --> 00:21:42,933
我称之为VCL日志名称。

440
00:21:43,002 --> 00:21:47,204
而且我要回到游戏，只是因为它会让我们的游戏变得更好

441
00:21:47,273 --> 00:21:49,206
控制台输出更清晰一点，

442
00:21:49,274 --> 00:21:52,843
哪个视图控制器是哪个。当它被记录

443
00:21:52,911 --> 00:21:55,312
因此这将被称为游戏而不是称之为游戏

444
00:21:55,381 --> 00:21:57,315
ConcentrationViewController，这是相当长的

445
00:21:57,383 --> 00:22:00,283
非常类似于ConcentrationThemeChooser或

446
00:22:00,352 --> 00:22:02,787
无论它是什么，视图控制器。我会去做的

447
00:22:02,855 --> 00:22:04,722
在这里我的主题视图控制器也是这样，

448
00:22:04,790 --> 00:22:08,825
我会从VCLLoginViewController继承它

449
00:22:08,894 --> 00:22:14,365
我会改变它的名字你会看到一个名字是log

450
00:22:14,433 --> 00:22:19,736
TeamChooser。所以，那只是你需要做的，

451
00:22:19,805 --> 00:22:23,173
事实上，如果你只是制造，你甚至不需要做这个部分

452
00:22:23,242 --> 00:22:25,976
你的，你的控制器在这里从这个cell log在细节，

453
00:22:26,045 --> 00:22:30,013
它会记录。让我们开始运行吧，让我们在iPad上运行它，

454
00:22:30,082 --> 00:22:33,583
走着瞧吧。让我们把我们的控制台带到这里

455
00:22:33,652 --> 00:22:38,021
我们可以看到发生了什么，好吗？

456
00:22:38,090 --> 00:22:43,026
所以这里是我们的集中游戏，呈现在风景中。

457
00:22:43,095 --> 00:22:45,729
你可以马上看看这个init

458
00:22:45,798 --> 00:22:48,999
编码器，编码器的这个init是什么时候出来的

459
00:22:49,068 --> 00:22:51,268
一个故事板。所以这两个都被初始化了。

460
00:22:51,337 --> 00:22:53,704
他们两个都从Nib醒来，你明白吗？

461
00:22:53,773 --> 00:22:56,173
他们都有自己的网点和一切设置。

462
00:22:56,241 --> 00:22:59,343
然后viewDidLoad发生在他们两个上。

463
00:22:59,412 --> 00:23:02,078
他们都被告知他们会出现。

464
00:23:02,147 --> 00:23:04,915
他们得到了他们的次要视图几次。看这个，

465
00:23:04,983 --> 00:23:08,852
viewDidLayoutSubviews。这个被布置两次

466
00:23:08,921 --> 00:23:10,988
即使他们的界限没有改变。

467
00:23:11,057 --> 00:23:13,423
然后主题选择器获取viewDidAppear和

468
00:23:13,492 --> 00:23:17,060
游戏获取viewDidAppear并且它们出现在屏幕上

469
00:23:17,129 --> 00:23:21,465
如果我将其旋转到纵向会发生什么情况。现在，当我去

470
00:23:21,533 --> 00:23:25,469
肖像，我得到主题选择器，主人将消失，

471
00:23:25,537 --> 00:23:28,105
因为它消失了，对吧？它不再在这里，

472
00:23:28,174 --> 00:23:31,208
它不再显示。而且我也完成了整个过渡

473
00:23:31,277 --> 00:23:34,244
与协调员，因为这是一个轮换，

474
00:23:34,312 --> 00:23:36,813
所以我们有机会参与动画

475
00:23:36,882 --> 00:23:40,984
如果我们想要。游戏当然有了新的规模。

476
00:23:41,053 --> 00:23:46,290
看，它是768乘1024，所以我们得到了LayoutSubviews发送给它。

477
00:23:46,358 --> 00:23:50,894
然后ThemeChooser的尺寸也被设置好了

478
00:23:50,963 --> 00:23:54,431
一些原因。然后它消失了。现在，

479
00:23:54,500 --> 00:23:57,568
如果我将它拖出来，让我们看看会发生什么。

480
00:23:57,636 --> 00:24:01,371
现在我得到了子视图，视图将会出现

481
00:24:01,440 --> 00:24:03,873
视图确实出现在主题选择器中。

482
00:24:03,942 --> 00:24:06,043
你看到这里发生了什么？所以，当这发生时，

483
00:24:06,112 --> 00:24:08,812
它告诉我们究竟发生了什么。现在我要表演

484
00:24:08,881 --> 00:24:12,583
你对此的另一件事很有趣。

485
00:24:12,651 --> 00:24:17,287
让我们来看看我们的浓度主题选择。

486
00:24:17,356 --> 00:24:19,423
我们已经在那里，主题选择器视图控制器。

487
00:24:19,491 --> 00:24:22,292
我会做的，我们在这里放了很多代码

488
00:24:22,361 --> 00:24:25,863
如果可能的话，它不会延续。所以我会这样做的

489
00:24:25,931 --> 00:24:28,632
它总是通过评论这一点而继续下去。

490
00:24:28,701 --> 00:24:31,201
所以通过这样做，我做到每一次都是如此

491
00:24:31,270 --> 00:24:34,805
我们选择一个游戏主题，它总是会延续。和

492
00:24:34,874 --> 00:24:37,374
我这样做是因为我想告诉你，让我们一起去看看吧

493
00:24:37,443 --> 00:24:41,010
在iPhone上做这个只是为了看看那里发生了什么。

494
00:24:41,079 --> 00:24:44,415
我将在视图控制器生命周期中显示发生了什么

495
00:24:44,483 --> 00:24:48,351
你正在继续，因为理解这一点很重要。

496
00:24:48,420 --> 00:24:51,722
好吧，让我们把这个提起来，然后，

497
00:24:51,791 --> 00:24:56,693
抱歉。从一开始就看到这发生在这里吗？可以，然后呢

498
00:24:56,762 --> 00:25:01,731
这是一个有趣的，非常有趣的开始

499
00:25:01,800 --> 00:25:05,235
因为我们看到我们创造了它们，所以我们等待

500
00:25:05,304 --> 00:25:09,239
一个viewDidLoad他们，我们在这里得到了游戏视图，

501
00:25:09,308 --> 00:25:12,509
但它从来没有出现过，是吗？因为

502
00:25:12,578 --> 00:25:15,111
记住，我们在那里停止了崩溃

503
00:25:15,180 --> 00:25:17,247
停止崩溃和swiving控制器，

504
00:25:17,316 --> 00:25:19,516
它永远不会出现。所以它的视图会在这里，但

505
00:25:19,584 --> 00:25:22,252
从来没有viewDidAppear因为它并没有真正出现。

506
00:25:22,321 --> 00:25:25,055
我们想等待的另一个原因是，直到viewDidAppear，

507
00:25:25,124 --> 00:25:27,224
有时要开启一些昂贵的东西，

508
00:25:27,293 --> 00:25:29,626
好吧？当他们都摆平了，并且

509
00:25:29,695 --> 00:25:33,563
选择器确实出现了。现在当我点击一个，

510
00:25:33,632 --> 00:25:38,402
在这里它创建了第二个新的游戏MVC，

511
00:25:38,470 --> 00:25:41,872
你看到了吗？这是新的，这意味着这是一个新的例子。

512
00:25:41,940 --> 00:25:44,074
所以这是它的实例编号。并注意，

513
00:25:44,143 --> 00:25:45,909
看看第一个发生了什么事，

514
00:25:45,977 --> 00:25:48,445
从未出现过的那个，它离开了堆。和

515
00:25:48,514 --> 00:25:49,946
当你继续时，会发生什么。

516
00:25:50,015 --> 00:25:52,549
你得到一个新的，旧的离开堆。所以

517
00:25:52,618 --> 00:25:56,119
新的获取viewDidLoad，viewWillAppear，viewDidAppear。

518
00:25:56,188 --> 00:26:00,190
如果我回去，我会看到一些想法

519
00:26:00,258 --> 00:26:01,591
消失因为这个出现了

520
00:26:01,660 --> 00:26:03,960
另一个消失了。如果我再次继续，

521
00:26:04,029 --> 00:26:09,065
现在我得到第三个MVC，第二个离开堆。

522
00:26:09,134 --> 00:26:11,568
所以这就是我所说的，当你们继续前行的时候，

523
00:26:11,637 --> 00:26:13,036
一个新的总是创造，并且

524
00:26:13,105 --> 00:26:15,772
旧的被扔出导航控制器，

525
00:26:15,841 --> 00:26:21,077
离开堆。大家都知道了吗？好的，就是这样

526
00:26:21,146 --> 00:26:24,013
我只想告诉你。这更像是你可以的代码

527
00:26:24,082 --> 00:26:26,817
用来弄清楚你自己发生了什么

528
00:26:26,885 --> 00:26:31,655
应用程序，如果事情没有按照你期望的方式工作。好的，

529
00:26:31,723 --> 00:26:36,459
让我们回到这里，继续我们的幻灯片和

530
00:26:36,528 --> 00:26:41,397
谈论ScrollView。好的，ScrollView，

531
00:26:41,466 --> 00:26:44,134
你知道什么是ScrollView，对吗？你有一个小区域

532
00:26:44,202 --> 00:26:46,103
在屏幕上，你想看看什么大的东西，

533
00:26:46,171 --> 00:26:48,605
所以你得到ScrollView。你可以滚动你的

534
00:26:48,674 --> 00:26:51,074
手指并捏合以放大它。

535
00:26:51,143 --> 00:26:54,077
我只是想确保你理解ScrollView

536
00:26:54,146 --> 00:26:57,213
一个非常强大的UIView。好吧，它的工作

537
00:26:57,282 --> 00:27:00,651
在几乎所有情况下都非常喜欢UIView。

538
00:27:00,720 --> 00:27:02,619
这是我最喜欢的小演示，

539
00:27:02,688 --> 00:27:04,921
你在这堂课里叫什么来录制这个节目。

540
00:27:04,990 --> 00:27:08,358
因为我相信这是你看到的iPhone

541
00:27:08,427 --> 00:27:09,093
在这里，但是

542
00:27:09,161 --> 00:27:12,095
即使从iPhone回来一个ScrollView做到了这一点。

543
00:27:12,164 --> 00:27:15,065
现在看看当我开始这件事情时发生的事情。

544
00:27:15,134 --> 00:27:18,601
你可以看到我有一个ScrollView，一个水平的，

545
00:27:18,670 --> 00:27:20,436
我可以滚动，和

546
00:27:20,505 --> 00:27:23,507
里面是垂直的。所以它完全没问题

547
00:27:23,576 --> 00:27:25,341
ScrollViews中有ScrollViews。

548
00:27:25,410 --> 00:27:27,878
还有一个，好的，我们在滚动

549
00:27:27,946 --> 00:27:30,747
在这些股票报价视图或任何其他水平之间。

550
00:27:30,816 --> 00:27:35,652
然后我们到达那里，我们可以上下滚动。可以，然后呢

551
00:27:35,721 --> 00:27:38,321
ScrollView知道如何生活在自己和

552
00:27:38,390 --> 00:27:41,291
知道如何生活在几乎每个环境中，

553
00:27:41,359 --> 00:27:44,594
ScrollView真的很棒。所以

554
00:27:44,663 --> 00:27:46,263
让我们来谈谈ScrollView的工作原理，

555
00:27:46,332 --> 00:27:49,299
它的使用也非常简单。

556
00:27:49,368 --> 00:27:52,803
您已经知道如何将子视图添加到常规UIView，

557
00:27:52,872 --> 00:27:56,439
所以我在这里定期使用UIView。我只是创建一个视图，

558
00:27:56,508 --> 00:28:01,444
设置其框架，并将其添加为子视图，它显示，正确。

559
00:28:01,513 --> 00:28:05,214
当然，同样的三个人，你非常熟悉这样做

560
00:28:05,283 --> 00:28:08,651
这个。那么它是如何不同的，如果它是一个ScrollView？好吧，好吧

561
00:28:08,720 --> 00:28:13,156
在ScrollView中，有一种巨大的差异，

562
00:28:13,225 --> 00:28:16,994
这就是我们创建的所谓的contentSize。

563
00:28:17,062 --> 00:28:20,063
当我们指定这个contentSize时，我们正在指定

564
00:28:20,131 --> 00:28:23,166
ScrollView要滚动的区域的大小

565
00:28:23,235 --> 00:28:27,370
周围。好的，所以这是ScrollView的重要组成部分，

566
00:28:27,439 --> 00:28:30,040
这很少，会环顾四周。而且

567
00:28:30,108 --> 00:28:33,009
它只是一个尺寸，它的起源始终是00，这一点

568
00:28:33,078 --> 00:28:36,480
内容区域在这里，所以我们总是只指定大小。

569
00:28:36,548 --> 00:28:38,982
所以你看到的这个var，contentSize

570
00:28:39,051 --> 00:28:41,852
在ScrollView中是至关重要的。这是最重要的变种

571
00:28:41,920 --> 00:28:45,222
可能在任何地方，任何地方。这是事

572
00:28:45,291 --> 00:28:47,724
它告诉ScrollView空间有多大。但

573
00:28:47,793 --> 00:28:52,162
之后，添加子视图就像另一种视图。

574
00:28:52,231 --> 00:28:55,232
现在我可以创建一个框架，为ScrollView添加一个子视图，

575
00:28:55,300 --> 00:28:58,301
而不是把它放在黑色的广场上

576
00:28:58,370 --> 00:29:01,871
在左边，它将它放在该内容区域中。

577
00:29:01,940 --> 00:29:04,641
相同的框架，但它说，你知道，

578
00:29:04,710 --> 00:29:07,210
仍然使用框架来放置它。但它正在进行

579
00:29:07,279 --> 00:29:10,781
内容区域。我可以在其中放置其他东西，

580
00:29:10,849 --> 00:29:12,782
你知道，我想要多个子视图，所以

581
00:29:12,851 --> 00:29:16,586
这里有两个。现在ScrollView，它的功能，

582
00:29:16,655 --> 00:29:20,223
它只是让你有一个滚动的小窗口

583
00:29:20,292 --> 00:29:24,160
当用户在这里四处移动时，他们当然可以

584
00:29:24,229 --> 00:29:28,097
放大以及。现在您可以重新定位子视图

585
00:29:28,166 --> 00:29:30,633
该内容区域就像您可以定期进行

586
00:29:30,702 --> 00:29:31,935
查看子视图，对不对？

587
00:29:32,003 --> 00:29:34,905
所以我只是新的框架，设置这个东西有一个新的框架，

588
00:29:34,973 --> 00:29:37,407
它重新定位。我将徽标设置为具有不同的框架，

589
00:29:37,476 --> 00:29:40,610
它重新定位。现在我在边缘都有这个白色空间，

590
00:29:40,679 --> 00:29:42,112
我不想要它了，所以

591
00:29:42,181 --> 00:29:46,983
我可以重置我的内容大小以适应空中帧，

592
00:29:47,052 --> 00:29:51,254
对？现在当我滚动时，我只是在看

593
00:29:51,322 --> 00:29:56,793
这个新的内容区域。得到它了？就这样，就这样

594
00:29:56,861 --> 00:30:01,565
内容大小是关键。现在，由于这个魔术，

595
00:30:01,634 --> 00:30:03,433
还有一些其他有趣的事情

596
00:30:03,502 --> 00:30:07,003
滚动视图像它有一个叫做内容偏移的var。

597
00:30:07,072 --> 00:30:10,006
内容偏移量只是x和y的位置

598
00:30:10,075 --> 00:30:13,376
的左上角，什么是ScrollView

599
00:30:13,445 --> 00:30:17,347
目前正在显示该内容区域的坐标

600
00:30:17,415 --> 00:30:20,817
系统。所以它只是一种听起来像的东西，

601
00:30:20,886 --> 00:30:24,587
正在显示的内容的偏移量。

602
00:30:24,656 --> 00:30:28,725
而且你也可以放大。如果你放大了，

603
00:30:28,794 --> 00:30:31,027
你可能更感兴趣，

604
00:30:31,096 --> 00:30:34,097
内容区域坐标系中的矩形是什么

605
00:30:34,166 --> 00:30:36,566
我在看？因为我可能会放大

606
00:30:36,635 --> 00:30:39,669
在方块中的一个窗口中，以及

607
00:30:39,738 --> 00:30:42,505
我想知道那个窗口。那么这将是一个非常小的

608
00:30:42,574 --> 00:30:44,674
矩形，那个窗口，因为我放大了它的方式。

609
00:30:44,743 --> 00:30:47,410
我们这样做的方式是使用相同的方法

610
00:30:47,479 --> 00:30:50,714
你可能会使用或者你可能已经在你的任务中使用过。

611
00:30:50,783 --> 00:30:55,551
哪些是UIViews方法转换和转换

612
00:30:55,620 --> 00:30:59,322
点和矩形，这些都在UIScrollView中工作。

613
00:30:59,390 --> 00:31:03,694
所以如果你说从ScrollView转换到这个天线

614
00:31:03,762 --> 00:31:07,196
视图，你会得到ScrollView的界限

615
00:31:07,265 --> 00:31:08,965
该视图的坐标系。

616
00:31:09,034 --> 00:31:12,201
所以这就是你如何能够在鸟瞰图中找到那个rec

617
00:31:12,270 --> 00:31:15,605
坐标系。只是普通的转换，没什么特别的

618
00:31:15,674 --> 00:31:20,844
那里。好的，那么你如何创建一个ScrollView？

619
00:31:20,912 --> 00:31:24,781
那么，你可以拖出一个，当然，从小

620
00:31:24,849 --> 00:31:28,185
对象调色板。你也可以选择你的视图

621
00:31:28,253 --> 00:31:31,788
故事板并像你说的那样简单地进入嵌入式菜单，

622
00:31:31,857 --> 00:31:34,491
嵌入导航控制器。并且说，

623
00:31:34,559 --> 00:31:37,460
嵌入在ScrollView中，它将围绕一个ScrollView。

624
00:31:37,529 --> 00:31:40,263
不幸的是，它提供了20像素20点

625
00:31:40,332 --> 00:31:43,166
我不太喜欢它的边框，但它确实如此。

626
00:31:43,235 --> 00:31:45,101
我会在今天的演示中告诉你

627
00:31:45,170 --> 00:31:48,038
我们如何摆脱这一点。所以你应该这样做，或者

628
00:31:48,106 --> 00:31:51,274
你显然可以在代码中创建它们，对吧？只是

629
00:31:51,342 --> 00:31:56,245
一个UIView，所以它具有帧初始化器的init

630
00:31:56,314 --> 00:31:59,982
也是如此。所以一旦你创建了你的ScrollView或者

631
00:32:00,051 --> 00:32:02,819
把它放在你的故事板上，并创建一个outlet，

632
00:32:02,887 --> 00:32:06,056
那么你只需要说addSubview就可以将你的子视图添加到它。

633
00:32:06,125 --> 00:32:09,793
但这无能为力，什么都不会出现

634
00:32:09,861 --> 00:32:14,030
直到你设置你的contentSize。如果你没有设置

635
00:32:14,099 --> 00:32:15,631
即contentSize，然后是ScrollView

636
00:32:15,700 --> 00:32:19,602
将滚动一个零宽度的零高度

637
00:32:19,671 --> 00:32:22,872
矩形在角落里。而你，如果你把一个子视图

638
00:32:22,941 --> 00:32:26,176
那里，它可能会溢出并显示，但会有

639
00:32:26,245 --> 00:32:29,980
不滚动。所以如果你使用ScrollView和你的图片

640
00:32:30,048 --> 00:32:33,116
出现，或您的意见出现，但你不能平移或

641
00:32:33,185 --> 00:32:35,985
捏，这可能是因为你的contentSize是零。

642
00:32:36,054 --> 00:32:40,023
平移和捏缩只发生在内容中

643
00:32:40,092 --> 00:32:44,260
地区，好吗？您可以以编程方式滚动，

644
00:32:44,329 --> 00:32:46,329
当然用户可以用他们的手指滚动。

645
00:32:46,398 --> 00:32:49,732
但是你可以在代码中使用scrollRecToVisible来实现，

646
00:32:49,801 --> 00:32:52,902
你只需在内容区域中指定一个矩形

647
00:32:52,971 --> 00:32:56,306
它会滑过来显示那个矩形。

648
00:32:56,374 --> 00:32:58,241
你可以控制许多其他我不知道的事情

649
00:32:58,309 --> 00:32:59,643
有时间在滚动视图中覆盖。

650
00:32:59,711 --> 00:33:02,913
例如，当滚动视图首先出现在屏幕上时，

651
00:33:02,982 --> 00:33:05,548
它可以刷新它的ScrollIndicators。好的，

652
00:33:05,617 --> 00:33:08,084
这两件事有点让你看到你在哪里滚动

653
00:33:08,152 --> 00:33:11,888
在边缘。事实上，他们可以闪现这是默认的。

654
00:33:11,957 --> 00:33:14,190
但是，您可以使用此条闪光灯滚动指示

655
00:33:14,259 --> 00:33:17,394
如果你不想让它这样做，那么将它变成false。另外，

656
00:33:17,462 --> 00:33:21,898
滚动视图对安全区域是超级智能的。

657
00:33:21,967 --> 00:33:24,267
好的，请记住我们谈过安全区域，比如在那里

658
00:33:24,336 --> 00:33:27,471
iPhone 10的顶部？或者你正在导航控件中

659
00:33:27,539 --> 00:33:29,372
在标题中，或在底部的标签栏，或

660
00:33:29,440 --> 00:33:32,241
它就像在那里画不安全？好滚动视图，

661
00:33:32,310 --> 00:33:35,345
即使您将滚动视图放置在这些安全下面

662
00:33:35,413 --> 00:33:38,581
地区，它会让你滚动你的内容到安全

663
00:33:38,650 --> 00:33:41,284
区域。但是如果你一直向下滚动，

664
00:33:41,353 --> 00:33:44,387
或者一路结束，那么它会确保你的内容是

665
00:33:44,456 --> 00:33:48,158
不被安全区遮挡。你会在演示中看到这个。

666
00:33:48,227 --> 00:33:51,861
因此，滚动视图，对于安全区域来说非常聪明。

667
00:33:51,930 --> 00:33:54,330
因为通常情况下，当我们有滚动视图时，

668
00:33:54,399 --> 00:33:57,500
我们可能想要全屏显示我们的图像

669
00:33:57,569 --> 00:34:00,003
尽我们所能。但是，你知道，如果我们有一些像素

670
00:34:00,072 --> 00:34:02,405
在左上角，我们不希望他们成为，

671
00:34:02,474 --> 00:34:05,241
你知道，在顶部的小黑条之下

672
00:34:05,310 --> 00:34:08,511
的iPhone 10.所以我们希望能够确保我们

673
00:34:08,580 --> 00:34:11,982
向下滚动到那么远。现在放大怎么办？

674
00:34:12,051 --> 00:34:13,616
到目前为止，我们只谈到了平移，

675
00:34:13,685 --> 00:34:14,884
移动滚动视图。

676
00:34:14,953 --> 00:34:17,754
如果我们想放大我们正在查看的内容，那该怎么办？

677
00:34:17,823 --> 00:34:21,724
看到它更大？现在，当你顺便放大时，

678
00:34:21,793 --> 00:34:25,328
小心。这显然会影响你的contentSize。

679
00:34:25,397 --> 00:34:28,331
如果我放大以使我看起来更大，

680
00:34:28,400 --> 00:34:31,334
内容区域也必须变得更大。所以

681
00:34:31,403 --> 00:34:33,670
有时会发生，然后人们期待

682
00:34:33,738 --> 00:34:36,405
他们的内容区域是相同的旧尺寸，而不是。

683
00:34:36,474 --> 00:34:38,208
好的，现在滚动视图自动调整大小

684
00:34:38,277 --> 00:34:40,009
你所以你不必担心它。

685
00:34:40,078 --> 00:34:42,211
但是，只是你看过你的contentSize，

686
00:34:42,280 --> 00:34:45,181
当你放大时，它会变得更大或更小

687
00:34:45,250 --> 00:34:48,718
如果你缩小。并注意contentOffset，

688
00:34:48,787 --> 00:34:52,388
明显。好的，那么你如何进行缩放工作？

689
00:34:52,457 --> 00:34:55,124
那么，你必须做两件事。不要忘记这些

690
00:34:55,193 --> 00:34:57,727
两件事情。没有这两件事情，它就无法工作。

691
00:34:57,796 --> 00:35:01,697
第一个是设置缩放比例最小值和最大值。好的，

692
00:35:01,766 --> 00:35:04,367
所以这只是说你允许放大多少

693
00:35:04,435 --> 00:35:07,536
以及您允许缩小多少。默认情况下，这些

694
00:35:07,605 --> 00:35:12,141
都是1.0，这意味着你不能放大或缩小。

695
00:35:12,210 --> 00:35:16,646
它必须是那里的身份尺寸。现在，缩放和

696
00:35:16,715 --> 00:35:20,149
scrollView通过修改变换工作，对吧？

697
00:35:20,218 --> 00:35:21,551
我们知道转换是正确的吗？

698
00:35:21,620 --> 00:35:23,520
你可以旋转，缩放或翻译的东西。

699
00:35:23,588 --> 00:35:27,324
那么，它正在使用变换的缩放部分进行缩放

700
00:35:27,392 --> 00:35:31,394
其中一个子视图，我们将讨论哪一个是，

701
00:35:31,462 --> 00:35:33,963
上和下。好的，这是一个scrollView的工作原理。

702
00:35:34,032 --> 00:35:36,499
顺便说一句就是这样。好吧，当你

703
00:35:36,567 --> 00:35:39,168
放大和缩小，除了以外，它没有做任何其他的事情

704
00:35:39,237 --> 00:35:42,205
转换您指定的视图。所以

705
00:35:42,273 --> 00:35:45,174
这告诉它它可以修改那个变换多少。所以

706
00:35:45,243 --> 00:35:48,511
如果它是1.0，转换总是单位矩阵和

707
00:35:48,580 --> 00:35:51,715
所以它永远不会放大或缩小。所以你必须设置这些，

708
00:35:51,783 --> 00:35:54,818
至少其中一个，或者你将无法缩放。

709
00:35:54,887 --> 00:35:57,753
第二件事是指定该视图

710
00:35:57,822 --> 00:36:01,123
那会得到改变。因为请记住，滚动视图，

711
00:36:01,192 --> 00:36:03,459
该内容区域可以有多个子视图。

712
00:36:03,528 --> 00:36:07,663
就像我们有这个标志一样，我们有了鸟瞰图。可以，然后呢

713
00:36:07,732 --> 00:36:11,734
当我捏的时候，哪些变焦了。

714
00:36:11,803 --> 00:36:14,738
所以，你必须实际实现一个委托方法

715
00:36:14,806 --> 00:36:15,605
在滚动视图中。

716
00:36:15,673 --> 00:36:17,640
是的，没错，如果你想放大滚动视图，

717
00:36:17,709 --> 00:36:19,708
你必须实现这个委托方法。和

718
00:36:19,777 --> 00:36:22,311
该委托方法在scrollView中称为viewForZooming，

719
00:36:22,380 --> 00:36:25,948
它只是返回哪个子视图进行缩放。现在，

720
00:36:26,017 --> 00:36:28,984
说实话，通常，如果我们有多个子视图，

721
00:36:29,053 --> 00:36:31,855
我们会将它们放入视图，顶层视图和

722
00:36:31,924 --> 00:36:34,090
这是我们放大的视角。

723
00:36:34,159 --> 00:36:36,459
当然，当我们改变这种视图时，

724
00:36:36,528 --> 00:36:38,794
所有的子视图也会被放大。

725
00:36:38,863 --> 00:36:42,399
我们通常不会有两种不同的视图

726
00:36:42,467 --> 00:36:45,267
是滚动视图的内容区域中的子视图

727
00:36:45,336 --> 00:36:49,806
他们不是一些共同视图的子视图。但这是可能的

728
00:36:49,874 --> 00:36:54,644
要做，但我们通常不这样做。好的，你也可以放大

729
00:36:54,713 --> 00:36:56,913
编程。除了捏缩放之外，

730
00:36:56,981 --> 00:36:59,716
您可以设置缩放比例并缩放到矩形。

731
00:36:59,784 --> 00:37:02,352
这就是这个样子。所以在这里，我的缩放比例

732
00:37:02,420 --> 00:37:05,989
设置为1.2。这比身份大20％

733
00:37:06,057 --> 00:37:08,958
矩阵。在这里，我回到了身份矩阵。怎么看

734
00:37:09,027 --> 00:37:11,561
那缩小了一点？现在我们回到1.2。

735
00:37:11,629 --> 00:37:15,265
看，它大20％，对吧？即使这样也不行

736
00:37:15,333 --> 00:37:18,000
如果我不设置我的最小和最大缩放比例的方式

737
00:37:18,069 --> 00:37:21,704
允许这个。现在，矩形更冷，所以如果我有这个

738
00:37:21,773 --> 00:37:24,374
黄色的矩形，我说缩放直接它会放大

739
00:37:24,442 --> 00:37:28,110
整个事情，以便正义刚刚适合。要么

740
00:37:28,179 --> 00:37:31,481
如果我有一个更大的矩形，那么它会缩放它

741
00:37:31,549 --> 00:37:36,018
缩小到适合，所以放大矩形是一种很酷的放大和缩小方式

742
00:37:36,087 --> 00:37:41,524
出。好的，ScrollView有很多委托方法，

743
00:37:41,592 --> 00:37:45,128
像12或15，在那里的某个地方。我不会说话

744
00:37:45,196 --> 00:37:47,264
你对他们所有人。你已经遇到了其中一个。

745
00:37:47,332 --> 00:37:49,299
这是缩放和ScrollView的视图，但是

746
00:37:49,367 --> 00:37:52,235
这里是另一个，只是给你一个例子。这个是

747
00:37:52,304 --> 00:37:56,939
称为ScrollViewDidEndZooming with atScale。和

748
00:37:57,008 --> 00:38:00,009
这会在用户捏和时发送给你

749
00:38:00,078 --> 00:38:03,846
然后抬起手指。现在请记住，当他们捏，

750
00:38:03,915 --> 00:38:06,816
所有这些正在改变的就是对“视图”的转变

751
00:38:06,885 --> 00:38:08,017
缩放，就是这样，

752
00:38:08,086 --> 00:38:10,319
那里没有别的事情发生。和

753
00:38:10,388 --> 00:38:14,090
当你放手的时候，如果你的观点如果你有能力的话

754
00:38:14,159 --> 00:38:15,124
绘制您的视图，

755
00:38:15,193 --> 00:38:18,294
放大时的分辨率要高得多。例如，

756
00:38:18,363 --> 00:38:21,998
假设您的视图绘制了核心图形的弧线。绘制

757
00:38:22,066 --> 00:38:24,701
一个弧线，你知道弧线只是一堆小像素，

758
00:38:24,770 --> 00:38:27,270
对，来到这里。如果你放大，

759
00:38:27,339 --> 00:38:30,339
它会看起来像小块。有点贪婪，

760
00:38:30,408 --> 00:38:34,410
对？那么，在这里，当你得到这个DidEndZooming atScale时，

761
00:38:34,478 --> 00:38:39,115
你可以将你的变换设置回单位矩阵。

762
00:38:39,184 --> 00:38:43,085
画出你的画，画一个更大的画。所以

763
00:38:43,154 --> 00:38:45,855
你正在使用这个弧线，现在你得到了一个很好的平滑弧线。

764
00:38:45,924 --> 00:38:48,090
你看这将如何工作？

765
00:38:48,159 --> 00:38:52,228
所以这是以后用更高分辨率绘制的好方法

766
00:38:52,297 --> 00:38:55,064
你捏着。你仍然在做转变

767
00:38:55,133 --> 00:38:57,733
虽然它捏，这是很好的。高性能和

768
00:38:57,802 --> 00:39:00,537
所有这些，但是当你放手的时候，它会重新绘制，

769
00:39:00,605 --> 00:39:05,374
有点尖锐。好的，我会在这里做一个演示

770
00:39:05,443 --> 00:39:08,777
滚动型。希望我有时间去做，

771
00:39:08,846 --> 00:39:12,414
向你展示我刚才谈到的所有这些东西。和

772
00:39:12,483 --> 00:39:15,785
那么在周三，我们将学习多线程，

773
00:39:15,854 --> 00:39:17,553
好吧，把东西放在后台。和

774
00:39:17,622 --> 00:39:20,222
我们会更新我今天写的应用程序

775
00:39:20,291 --> 00:39:21,524
做它的图像加载和

776
00:39:21,592 --> 00:39:23,159
所有的东西在后台。

777
00:39:23,228 --> 00:39:26,228
现在我打算这么做

778
00:39:26,297 --> 00:39:28,464
通过在网络上完成一些背景资料。

779
00:39:28,532 --> 00:39:30,433
我今天会告诉你一点点但是

780
00:39:30,502 --> 00:39:34,470
我的网络不适用于我的新笔记本电脑。所以，

781
00:39:34,539 --> 00:39:38,374
今天我只是使用本地映像文件，这很好，但是

782
00:39:38,443 --> 00:39:41,510
周三，我会让我的笔记本电脑工作。我们会的

783
00:39:41,579 --> 00:39:44,046
能够做网络，因为当我们加载图像

784
00:39:44,115 --> 00:39:46,782
网络，他们很慢。你可以看到它叫卡西尼，

785
00:39:46,851 --> 00:39:49,519
那是因为我们要加载的图像来自于

786
00:39:49,587 --> 00:39:50,586
卡西尼探针说

787
00:39:50,655 --> 00:39:53,522
被送到土星，他们很大。大而且非常，

788
00:39:53,591 --> 00:39:56,192
非常高的分辨率。然后甚至在斯坦福的斋戒

789
00:39:56,261 --> 00:39:58,594
网络，他们需要几秒钟来加载。

790
00:39:58,663 --> 00:40:02,832
而且，我们不能让我们的UI被阻止。星期三，

791
00:40:02,901 --> 00:40:04,967
我还会谈论文本领域，并且

792
00:40:05,036 --> 00:40:07,670
也许我会适应另一个小UI元素，

793
00:40:07,738 --> 00:40:11,641
时间允许。本周我们有一个星期五的部分，

794
00:40:11,709 --> 00:40:14,410
它在这个名为Instruments的应用程序上使用

795
00:40:14,479 --> 00:40:17,680
分析您的应用程序的性能。所以不要错过。

796
00:40:17,749 --> 00:40:20,682
然后下周我们会进入可能的桌面视图和

797
00:40:20,751 --> 00:40:22,084
集合视图，拖动和

798
00:40:22,153 --> 00:40:25,187
放弃那种更强大，更复杂的东西

799
00:40:25,256 --> 00:40:27,156
我还没能教你，

800
00:40:27,225 --> 00:40:30,025
因为你确实需要了解授权和

801
00:40:30,094 --> 00:40:34,697
在我们深入研究这些之前，这样的事情。好吧，

802
00:40:34,766 --> 00:40:40,803
让我们在这里做卡西尼。哎呀，我放弃了，

803
00:40:40,872 --> 00:40:45,675
我不想退出它。好吧，我会开始回来。所以

804
00:40:45,744 --> 00:40:49,579
我们将为卡西尼和卡西尼创造一个新项目

805
00:40:49,647 --> 00:40:54,317
这将是单一视图的应用程序。我会调用给卡西尼。

806
00:40:54,385 --> 00:40:57,787
不会在这里做任何特别的事情。我们不会这样做，

807
00:40:57,856 --> 00:41:00,256
你们现在都了解了源代码控制，但是

808
00:41:00,325 --> 00:41:01,758
我们不会在这里做。

809
00:41:04,262 --> 00:41:05,294
好的，这是我们的卡西尼。

810
00:41:05,363 --> 00:41:08,431
我会做我通常在这里做的事情，但要拿出资产和

811
00:41:08,500 --> 00:41:10,499
应用程序委托和启动屏幕，以及

812
00:41:10,568 --> 00:41:15,237
有点将它们移动到支持文件的方式

813
00:41:15,306 --> 00:41:20,242
我们不会因为多次看到它们而感到困惑。和

814
00:41:20,311 --> 00:41:22,412
我也会在这里做一些有趣的事情。

815
00:41:22,480 --> 00:41:25,281
当我们创建单一视图应用时，

816
00:41:25,350 --> 00:41:28,217
我们免费获得这个小视图控制器

817
00:41:28,286 --> 00:41:31,654
这是它的控制视图。很多时候，或者

818
00:41:31,722 --> 00:41:34,223
我们迄今为止所做的只是将其重命名为

819
00:41:34,292 --> 00:41:36,191
浓度视图控制器，或

820
00:41:36,260 --> 00:41:39,062
你可能已经在你的设置视图控制器。

821
00:41:39,130 --> 00:41:41,431
但还有另一种方法可以做到这一点，

822
00:41:41,499 --> 00:41:43,733
这是我可以采取这一点，并删除它。

823
00:41:43,801 --> 00:41:45,968
所以现在我有一个完全空的故事板。

824
00:41:46,037 --> 00:41:48,471
这里没有任何东西。我也可以删除它。

825
00:41:48,540 --> 00:41:50,440
让我们删除它，从这里开始，

826
00:41:50,508 --> 00:41:53,743
将其移至垃圾箱。所以现在我的应用程序完全是空的。

827
00:41:53,811 --> 00:41:56,779
我唯一拥有的是这里的支持文件，但是

828
00:41:56,848 --> 00:41:59,615
基本上什么都没有。所以，这里没有任何事情发生。

829
00:41:59,684 --> 00:42:00,950
所以，这是完全允许的。

830
00:42:01,018 --> 00:42:03,719
现在，如果我们这样做，我该如何建立它？

831
00:42:03,788 --> 00:42:07,256
那么，我要在这里建立一个应用程序，卡西尼。原来，

832
00:42:07,325 --> 00:42:09,892
这对卡西尼来说不会有什么可做的，

833
00:42:09,960 --> 00:42:12,428
它只是在滚动视图中显示图像。

834
00:42:12,497 --> 00:42:16,231
这将允许你选择一个图像和

835
00:42:16,300 --> 00:42:19,535
把它放在滚动视图中。所以我想创造我自己的视图

836
00:42:19,604 --> 00:42:22,505
显示图像的控制器，我将创建一个新的

837
00:42:22,573 --> 00:42:25,474
视图控制器来执行所谓的图像视图控制器。

838
00:42:25,543 --> 00:42:27,576
所以我要去这里。是的，这是一个视图控制器。

839
00:42:27,645 --> 00:42:29,345
我打算称它为图像视图控制器，

840
00:42:29,414 --> 00:42:30,379
因为它是这样做的，

841
00:42:30,448 --> 00:42:32,048
它显示一个图像。我要创造它，

842
00:42:32,116 --> 00:42:35,718
我要确保我把它放在正确的地方。和

843
00:42:35,787 --> 00:42:36,852
这里是我们的图像视图控制器。

844
00:42:36,921 --> 00:42:39,422
我将删除所有的代码，就这样

845
00:42:39,491 --> 00:42:42,257
很明显我添加了什么代码。我要回去了

846
00:42:42,326 --> 00:42:45,294
我的故事板完全是空的，然后拖出来

847
00:42:45,363 --> 00:42:48,764
一个新的视图控制器，然后去身份检查员

848
00:42:48,833 --> 00:42:52,668
在这里，并将其更改为图像视图控制器。

849
00:42:52,737 --> 00:42:57,173
现在，我还没有做过一件非常重要的事情

850
00:42:57,242 --> 00:42:59,676
导致此警告。你在这里看到这个警告？

851
00:42:59,744 --> 00:43:02,345
它说ImageViewController是无法访问的。

852
00:43:02,413 --> 00:43:05,381
那是因为没有箭头，你看？记得

853
00:43:05,450 --> 00:43:08,351
我在拆分视图控制器演示中移动的箭头？

854
00:43:08,419 --> 00:43:10,753
没有箭头。那么我该如何放箭？

855
00:43:10,822 --> 00:43:13,823
没有箭头。我如何得到它？那么你可以这样做

856
00:43:13,891 --> 00:43:17,059
检查正常检查员中的视图控制器，以及

857
00:43:17,128 --> 00:43:18,127
在这里看这个按钮，

858
00:43:18,195 --> 00:43:21,864
是初始视图控制器，繁荣。好吧，现在会

859
00:43:21,933 --> 00:43:26,135
进来，这将是我们的视图控制器。可以，然后呢

860
00:43:26,204 --> 00:43:29,805
让我们从这里开始只是没有滚动视图和

861
00:43:29,874 --> 00:43:31,073
只是有一个图像视图。

862
00:43:31,142 --> 00:43:34,877
我只是要从这里拍摄图像。

863
00:43:34,945 --> 00:43:37,579
这里有一个，我们放入图像。这是一个图像视图。

864
00:43:37,648 --> 00:43:40,583
所以，像我所说的，图像视图就像UI标签一样，除了

865
00:43:40,652 --> 00:43:43,019
它是为图像。我会把它放在这里，

866
00:43:43,087 --> 00:43:47,590
并且走到边缘，在那里。让我们看看是什么

867
00:43:47,659 --> 00:43:51,794
这看起来像在iPhone 10上，因为我们当然有

868
00:43:51,863 --> 00:43:56,265
那里有安全区域问题。放大一点。所以我会移动

869
00:43:56,334 --> 00:44:01,437
这实际上是为了覆盖安全区域的大小。

870
00:44:01,505 --> 00:44:04,107
看看那里的安全区域如何？

871
00:44:04,175 --> 00:44:06,942
现在，我想要做的，让我们继续前进

872
00:44:07,011 --> 00:44:12,114
而我们在这里让我们去看看我们的视图控制器和

873
00:44:12,183 --> 00:44:14,350
创建这个图像视图的outlet，

874
00:44:14,419 --> 00:44:15,451
因为我们要谈谈这个。

875
00:44:15,520 --> 00:44:17,687
所以我只是要控制拖入我的课堂。

876
00:44:17,755 --> 00:44:22,324
我打算称这个图像视图。所以我没有点燃。

877
00:44:22,393 --> 00:44:26,929
现在，我希望这个大图像视图能够在这里全部展开

878
00:44:26,997 --> 00:44:30,633
通往边缘的道路。我真的不希望它尊重

879
00:44:30,702 --> 00:44:34,403
现在的安全区域。我们将有滚动视图和

880
00:44:34,472 --> 00:44:36,039
它会在稍后帮助我们。

881
00:44:36,107 --> 00:44:38,374
但我希望它完全出来。它看起来很酷。

882
00:44:38,442 --> 00:44:41,410
我不介意如果有一点被这个和覆盖

883
00:44:41,478 --> 00:44:43,479
有一点被覆盖了。我很好，

884
00:44:43,547 --> 00:44:47,550
我认为这是我的形象看起来更酷。

885
00:44:47,618 --> 00:44:52,821
现在我该如何控制拖动到边缘？好的，

886
00:44:52,890 --> 00:44:56,058
我无法进入任何边缘，对吧？

887
00:44:56,127 --> 00:44:59,061
因为它的边缘是正确的，所以我不能选择它。

888
00:44:59,130 --> 00:45:01,898
那么，我们会再次使用，我试图向你展示汽车

889
00:45:01,966 --> 00:45:05,234
一次布置一下，一次滴一滴。

890
00:45:05,303 --> 00:45:07,670
所以我们要开始使用这些小东西

891
00:45:07,738 --> 00:45:11,173
这里的角落。你在右下角看到？

892
00:45:11,242 --> 00:45:12,842
我们已经在这里知道这个，

893
00:45:12,911 --> 00:45:15,177
嵌入堆栈视图。我们不会使用它。和

894
00:45:15,246 --> 00:45:16,378
我们其实已经看到了这个，

895
00:45:16,447 --> 00:45:19,649
我想，这只是让你清除所有的限制，或者

896
00:45:19,717 --> 00:45:22,818
重置为蓝线建议的约束条件等。

897
00:45:22,887 --> 00:45:24,953
但是我们实际上会使用一个不同的，

898
00:45:25,022 --> 00:45:28,390
这一个就在这里。它只是说增加新的约束。

899
00:45:28,459 --> 00:45:31,994
看看如果我选择图像视图会发生什么，然后单击它。

900
00:45:32,063 --> 00:45:34,663
它允许我设置一些限制条件。

901
00:45:34,732 --> 00:45:37,432
现在，其中一些像宽度和高度以及宽高比，

902
00:45:37,501 --> 00:45:41,003
我们知道我们可以通过控制拖到自己。但

903
00:45:41,072 --> 00:45:43,873
在这里看看这些。这实质上是销，

904
00:45:43,942 --> 00:45:47,576
销到边缘。所以，这是我的小梁，

905
00:45:47,645 --> 00:45:50,646
如果你打开它们，会增加约束。

906
00:45:50,715 --> 00:45:54,183
你看，添加四个约束。添加三个约束。它会

907
00:45:54,252 --> 00:45:58,120
添加将它们固定到所谓的最近的约束

908
00:45:58,189 --> 00:46:01,090
邻居。你看到最近的邻居？所以它会看起来

909
00:46:01,158 --> 00:46:04,226
在那边，说那里最近的邻居是什么？

910
00:46:04,295 --> 00:46:07,463
也许这是附近景色的另一边，也许是

911
00:46:07,531 --> 00:46:11,833
你的超级观点的边缘，也许这是安全区域。所以

912
00:46:11,902 --> 00:46:14,303
让我们看看当我们添加这四个约束时会发生什么

913
00:46:14,372 --> 00:46:16,939
我们的图像视图。我们会找出最接近的四个

914
00:46:17,007 --> 00:46:20,843
邻居们的四条边。所以，我们走了。加四

915
00:46:20,912 --> 00:46:24,247
限制。现在我要调出检查员，

916
00:46:24,315 --> 00:46:27,316
去尺寸检查员看看我的约束。

917
00:46:27,384 --> 00:46:28,918
记住，这就是你看待约束的方式

918
00:46:28,986 --> 00:46:30,819
当你选择一个视图和一个视图

919
00:46:30,888 --> 00:46:33,655
去这里找尺寸检查员。你会看到它。

920
00:46:33,724 --> 00:46:35,958
看，底部和顶部，

921
00:46:36,027 --> 00:46:39,895
它被认为是最近的邻居是父视图，

922
00:46:39,964 --> 00:46:42,465
self.view。我的视图控制器的顶层视图，

923
00:46:42,533 --> 00:46:46,001
对？但看起来，它认为这是安全的

924
00:46:46,070 --> 00:46:49,472
区。这是因为这款iPhone 10的安全区域，

925
00:46:49,540 --> 00:46:52,441
穿过这里。它不包括那件事，所以

926
00:46:52,510 --> 00:46:56,478
它沿着这条边走过来。然后在这里，

927
00:46:56,547 --> 00:46:58,280
不包括那里的小东西

928
00:46:58,349 --> 00:47:01,283
备份这个边缘。这是安全的地方。很明显，

929
00:47:01,352 --> 00:47:04,653
双方都离安全区很近

930
00:47:04,722 --> 00:47:07,056
因为他们是在父视图的边缘。

931
00:47:07,124 --> 00:47:11,126
总而言之，界面构建者会更喜欢安全区域

932
00:47:11,195 --> 00:47:15,530
在父视图的边缘，如果他们是相同的。但

933
00:47:15,599 --> 00:47:18,967
在这里，这是远不及安全区域这是正确的

934
00:47:19,036 --> 00:47:21,370
超级观点的优势，但它不在安全区附近。所以

935
00:47:21,438 --> 00:47:26,075
这就是为什么它显示superview。看看它为什么这样做？好的，

936
00:47:26,143 --> 00:47:28,511
现在，我不想在这里安全区域。

937
00:47:28,579 --> 00:47:32,647
我总是希望在边缘。那么我该如何解决这个问题

938
00:47:32,716 --> 00:47:35,884
不是做安全区？我想要说superview。

939
00:47:35,953 --> 00:47:39,021
那我该怎么做？好吧，我需要编辑这个约束。

940
00:47:39,090 --> 00:47:42,591
但是，不，我如何选择这个约束？我甚至不能，

941
00:47:42,659 --> 00:47:45,628
我看不到它，它在哪里？那么，我要介绍

942
00:47:45,696 --> 00:47:50,098
你是我们几乎总是实际访问约束的方式，

943
00:47:50,167 --> 00:47:53,535
这是与文档大纲。好的，记住这一点

944
00:47:53,604 --> 00:47:57,974
这里有一点点按钮，我在之前的讲座中说过

945
00:47:58,042 --> 00:48:01,477
演示，嘿，现在不用担心这个问题？

946
00:48:01,546 --> 00:48:04,746
那么，我们会开始担心这个问题

947
00:48:04,815 --> 00:48:08,717
正在展示我认为的一切。

948
00:48:08,786 --> 00:48:13,555
概要形式，包括约束。

949
00:48:13,624 --> 00:48:17,125
看到那些限制，他们看起来很熟悉？和

950
00:48:17,194 --> 00:48:19,394
这是这个之间的约束

951
00:48:19,463 --> 00:48:23,031
视图和它的父视图。所以

952
00:48:23,100 --> 00:48:25,067
这里是挂钩到安全区域的两个。

953
00:48:25,135 --> 00:48:29,105
这是直接连接到父视图的两个。

954
00:48:29,173 --> 00:48:32,407
所以让我们点击一​​个，然后去正常的检查员或者

955
00:48:32,476 --> 00:48:36,579
尺寸检查员，要么是一个约束，我们可以

956
00:48:36,647 --> 00:48:39,681
编辑这个东西。我们已经在之前的演示中看到过

957
00:48:39,750 --> 00:48:43,552
我们如何在这里编辑常数，或者乘数等等。

958
00:48:43,620 --> 00:48:46,655
现在我们将看到我们如何编辑实际的连接。

959
00:48:46,724 --> 00:48:51,594
所以这个约束来自图像，图像视图的领先

960
00:48:51,662 --> 00:48:56,632
边缘设置等于安全区域的前沿。

961
00:48:56,701 --> 00:48:58,400
那么，我只是想要这是相同的，但是

962
00:48:58,469 --> 00:49:00,269
我不想成为安全区的领先优势，

963
00:49:00,337 --> 00:49:03,939
我希望它是Superviews。所以你可以改变

964
00:49:04,008 --> 00:49:07,042
从安全区域到父视图，只需编辑约束

965
00:49:07,111 --> 00:49:09,745
并更改发送，连接到的项目。

966
00:49:09,813 --> 00:49:13,482
同样的事情，我要改变安全区域拖尾

967
00:49:13,550 --> 00:49:17,386
成为Superview Trailing。现在，如果我选择这个和

968
00:49:17,454 --> 00:49:20,156
在尺寸检查员看来，你看到我的全部

969
00:49:20,224 --> 00:49:23,592
限制是Superview。所以现在我的视图

970
00:49:23,660 --> 00:49:27,095
会填补我的整个空间，忘记任何空间。

971
00:49:27,164 --> 00:49:29,965
我不在乎是否有导航控制的标题栏，或者

972
00:49:30,034 --> 00:49:33,602
标签栏。这一切都会填满整个屏幕

973
00:49:33,671 --> 00:49:36,438
这些事情背后。或者如果是这样的话

974
00:49:36,507 --> 00:49:39,341
一个物理的东西，这是不会能够画在那里。

975
00:49:39,410 --> 00:49:42,411
但在这种情况下，这就是我想要的。好吧，我们会

976
00:49:42,480 --> 00:49:44,846
请在此处查看本文概述的更多内容。但

977
00:49:44,915 --> 00:49:49,084
这是访问您视图中所有内容的好方法。

978
00:49:49,153 --> 00:49:53,622
这很容易得到的东西。好，那我们走吧

979
00:49:53,691 --> 00:49:57,292
回到我们的代码在这里。我们想写一些

980
00:49:57,361 --> 00:50:00,428
代码，使这个视图控制器做它做的。

981
00:50:00,497 --> 00:50:03,765
那么，这是一个MVC的控制器。

982
00:50:03,834 --> 00:50:07,068
这个MVC的模型是什么？

983
00:50:07,137 --> 00:50:10,139
那么我会让这个模型成为一个imageURL。

984
00:50:10,208 --> 00:50:14,243
这将是iOS中的这个类，称为URL。

985
00:50:14,312 --> 00:50:17,813
一个URL只是一个URL。它可能是一个本地文件的URL，

986
00:50:17,882 --> 00:50:22,951
或者它可能是一个互联网URL。这是我的模型。

987
00:50:23,020 --> 00:50:25,654
所以我的工作就是采取这种模式，

988
00:50:25,723 --> 00:50:29,224
把它变成一幅图像并呈现在我看来，

989
00:50:29,293 --> 00:50:32,127
我现在的看法就是这个ImageView

990
00:50:32,196 --> 00:50:36,231
就在这儿。所以我马上就会这么说，

991
00:50:36,300 --> 00:50:39,268
如果有人把我的模型设置在这里，我会设置我的

992
00:50:39,337 --> 00:50:43,305
ImageView的图像为零。好吧，因为我在改变

993
00:50:43,374 --> 00:50:47,108
它到了一个新的东西。然后我会去取那个图像。

994
00:50:47,177 --> 00:50:50,145
现在我在这里做了另一个小功能的原因，

995
00:50:50,214 --> 00:50:55,016
一些私人的func取图片，是因为这件事

996
00:50:55,085 --> 00:50:57,686
可能会通过网络。最终在周三，

997
00:50:57,755 --> 00:51:00,555
我们要让图像在后台任务中工作，

998
00:51:00,624 --> 00:51:03,392
显然，因为你可能被网络阻止。所以

999
00:51:03,461 --> 00:51:05,093
我有点思考未来

1000
00:51:05,162 --> 00:51:07,763
把它放在一个单独的函数中，而不仅仅是

1001
00:51:07,832 --> 00:51:11,600
把它放在这里。所以有人设置了一个新的图片网址。

1002
00:51:11,668 --> 00:51:15,004
我们会清除我们所拥有的任何图像，如果有的话。

1003
00:51:15,072 --> 00:51:17,406
图像只是我们图像视图中的一个条，表示图像。

1004
00:51:17,475 --> 00:51:21,109
然后我们要在这里获取一个新的图像。

1005
00:51:21,178 --> 00:51:24,746
现在有一件事，因为我们刚刚了解了View控制器

1006
00:51:24,815 --> 00:51:28,116
生命周期。我告诉过你，你真的不想这样做

1007
00:51:28,185 --> 00:51:32,488
除非必须，否则像这样获取图像。所以

1008
00:51:32,557 --> 00:51:33,422
我会在这里做点什么，

1009
00:51:33,491 --> 00:51:36,458
这是我只会去取这个图像，如果有人

1010
00:51:36,526 --> 00:51:41,297
设置我的模型，我在屏幕上。如果有人设置我的

1011
00:51:41,365 --> 00:51:44,066
模型，我不在屏幕上，我不会去取

1012
00:51:44,135 --> 00:51:47,602
那图像呢。我要等到我知道我在屏幕上。

1013
00:51:47,671 --> 00:51:51,039
现在你怎么知道你是否在屏幕上？你怎么知道如果

1014
00:51:51,108 --> 00:51:53,508
你的MVC在屏幕上？那么这是一个很酷的方式来做到这一点。

1015
00:51:53,577 --> 00:51:57,579
我只是要检查我的观点是否有一个窗口

1016
00:51:57,647 --> 00:52:01,182
那不是零。所以我们没有真正谈论窗口和

1017
00:52:01,251 --> 00:52:03,319
我有点让你在课堂开始时忽略它，而且

1018
00:52:03,387 --> 00:52:04,553
你大多可以，

1019
00:52:04,622 --> 00:52:07,789
除了那个视图，如果它在屏幕上，

1020
00:52:07,858 --> 00:52:10,492
我们将有一个窗口栏，它是它的窗口，

1021
00:52:10,561 --> 00:52:14,129
通常只是这一个窗口。所以这是一种

1022
00:52:14,197 --> 00:52:17,332
一个很酷，简单的小方法来检查我在屏幕上，如果

1023
00:52:17,401 --> 00:52:19,935
我在屏幕上，然后我会继续前进并获取此图像。

1024
00:52:20,003 --> 00:52:23,572
但如果我不在屏幕上呢？最终我需要取

1025
00:52:23,640 --> 00:52:27,943
图片。那么，什么时候该做这件事？任何人都有

1026
00:52:28,012 --> 00:52:31,146
关于这个的想法？是的，观点确实出现了。究竟，

1027
00:52:31,215 --> 00:52:35,550
让我们来做，viewDidAppear。好的，super.viewDidAppear。

1028
00:52:35,619 --> 00:52:40,922
在这一点上，我知道我现在在屏幕上

1029
00:52:40,991 --> 00:52:44,727
在我的viewDidAppear里面，我可以检查一下，看看我的

1030
00:52:44,795 --> 00:52:49,764
图像视图图像。糟糕，图像仍然是零，

1031
00:52:49,833 --> 00:52:54,837
然后让我们取回它。看看我如何使用视图

1032
00:52:54,905 --> 00:52:58,207
控制器生命周期，以防止自己做任何事情

1033
00:52:58,275 --> 00:53:02,811
多余的工作？现在，当然，如果我的fetchImage真的

1034
00:53:02,879 --> 00:53:05,547
在后台工作，我在这里做更多的工作，

1035
00:53:05,616 --> 00:53:08,150
这是我必须给用户一些指示

1036
00:53:08,218 --> 00:53:11,220
我在做这个工作。好的，因为他们会说，

1037
00:53:11,288 --> 00:53:13,422
我的形象在哪里？去了这个视图控件，

1038
00:53:13,491 --> 00:53:15,924
我在这里看不到任何图像。所以我必须付出一些

1039
00:53:15,993 --> 00:53:18,627
反馈。但是因为现在它会阻止

1040
00:53:18,695 --> 00:53:21,196
用户界面，直到它得到图像cuz我们不是

1041
00:53:21,265 --> 00:53:23,532
做多线程，

1042
00:53:23,600 --> 00:53:25,834
我们会保持原样。但我们会看到它，

1043
00:53:25,903 --> 00:53:29,405
当我们这样做时，我们会在那里放置一些东西来做到这一点。

1044
00:53:29,473 --> 00:53:32,073
好的，所以fetchImage，我们如何实现fetchImage

1045
00:53:32,142 --> 00:53:34,409
就在这儿？那么，这其实很简单。

1046
00:53:34,478 --> 00:53:37,412
我们只是要看看我们的URL，我们的模型在这里，

1047
00:53:37,481 --> 00:53:41,483
是非零，因为如果它是零，我们不需要做任何事情。

1048
00:53:41,552 --> 00:53:44,252
因为每当有人设置新图像时，我们将其设置为零

1049
00:53:44,321 --> 00:53:46,788
以及我们是在这里还是在这里取，如果没有，

1050
00:53:46,857 --> 00:53:49,658
如果该图片网址为零，我们只是将其留空

1051
00:53:49,727 --> 00:53:53,561
我们的图像视图中没有任但如果我有它，那么我需要

1052
00:53:53,630 --> 00:53:58,600
在互联网上出去并获取该URL和数据

1053
00:53:58,669 --> 00:54:02,237
把它变成一个图像。那么我们如何在互联网上出去，

1054
00:54:02,305 --> 00:54:06,041
并从URL获取数据？我们用数据对象来做到这一点。

1055
00:54:06,110 --> 00:54:07,976
记住我提到的数据对象，

1056
00:54:08,045 --> 00:54:10,178
它只是一点点东西。

1057
00:54:10,247 --> 00:54:13,348
那么，它有一个初始化程序，它是

1058
00:54:13,417 --> 00:54:16,985
给我一个网址，然后我会从这个网址获取一些位。

1059
00:54:17,054 --> 00:54:19,621
所以我们可以设置一个小的局部变量，

1060
00:54:19,690 --> 00:54:24,459
我将调用我的URL内容，等于数据。

1061
00:54:24,528 --> 00:54:28,363
现在，让我们来看看数据的各种初始化器，以及

1062
00:54:28,432 --> 00:54:30,933
它有很多，因为它是一袋子。

1063
00:54:31,001 --> 00:54:33,435
所以我们可以转换成很多不同的数据类型，

1064
00:54:33,504 --> 00:54:37,072
对，包里的字节和各种东西。但

1065
00:54:37,140 --> 00:54:41,209
其中之一，这里就是这个URL的内容。

1066
00:54:41,278 --> 00:54:46,048
contentOf：URL之后是什么字？抛出。

1067
00:54:48,051 --> 00:54:51,153
那为什么会这样扔？那么，它会继续

1068
00:54:51,221 --> 00:54:54,356
网络上可能有很多原因可以抛出。

1069
00:54:54,425 --> 00:54:59,194
网络连接不好，服务器拒绝了请求。

1070
00:54:59,263 --> 00:55:03,531
大概有20种不同的东西可以扔到这里。

1071
00:55:03,600 --> 00:55:07,102
现在事实证明，我们不关心他们中的任何一个。如果我们这样做，

1072
00:55:07,170 --> 00:55:09,805
让我们继续并在这里放入contentsOf：URL。和

1073
00:55:09,874 --> 00:55:14,309
该网址是网址。如果我们这样做了，因为这抛出了，

1074
00:55:14,377 --> 00:55:17,045
在它面前我们有什么话要说？试试吧，是的，

1075
00:55:17,114 --> 00:55:19,280
我们必须尝试它，因为它可能会失败。

1076
00:55:19,349 --> 00:55:25,921
并且我们可以在这里包装一下，让catch错误

1077
00:55:25,990 --> 00:55:29,992
做这件事，赶上错误，然后处理错误。

1078
00:55:30,060 --> 00:55:32,894
这是一个服务器超时，网络不可用所有这些

1079
00:55:32,963 --> 00:55:35,029
的东西。但我们并不关心这些东西。

1080
00:55:35,098 --> 00:55:37,699
我们只是一个低级图像视图控制器，我们只是想放

1081
00:55:37,767 --> 00:55:41,069
我们的形象是否升起。所以我们不关心这个错误

1082
00:55:41,137 --> 00:55:45,507
我们不会试着做，试试看。

1083
00:55:45,575 --> 00:55:47,876
相反，我们现在要使用这个版本，好吧，

1084
00:55:47,945 --> 00:55:51,713
这个urlContents在这里就是一个类型数据。

1085
00:55:51,781 --> 00:55:54,482
但我会改变这个尝试？

1086
00:55:54,551 --> 00:55:58,253
其中说试试这个东西，如果失败了，就返回零。

1087
00:55:58,322 --> 00:56:03,124
所以现在我们有了Data？类型，对吧？可选的

1088
00:56:03,193 --> 00:56:07,528
数据，因为尝试可能会失败。所以我有这个内容

1089
00:56:07,597 --> 00:56:11,299
就在这儿。现在我只是想说如果我可以让我的图像数据

1090
00:56:11,368 --> 00:56:15,270
我从该网址获得的网址等于urlContents。

1091
00:56:15,338 --> 00:56:18,406
然后我可以从这些数据创建我的图像。这样的形象

1092
00:56:18,475 --> 00:56:21,243
数据可能是JPEG数据或类似的东西。所以

1093
00:56:21,311 --> 00:56:26,381
我要在这里说我的图像视图图像等于

1094
00:56:26,450 --> 00:56:31,219
UIImage的。现在UIImage，我们已经看到了UIImage的命名，对吧？

1095
00:56:31,288 --> 00:56:32,287
这是我们使用过的。

1096
00:56:32,356 --> 00:56:36,325
还有另外一个叫UIImage的数据。和

1097
00:56:36,393 --> 00:56:39,060
你给它的图像数据是数据对象。

1098
00:56:39,129 --> 00:56:41,163
它会看到那里，那袋包装，和

1099
00:56:41,231 --> 00:56:43,632
看看它是否承认任何看起来像一个图像，

1100
00:56:43,700 --> 00:56:46,401
像一个JPEG文件或类似的东西。所以

1101
00:56:46,470 --> 00:56:50,205
这有点酷，好吗？就是这样了。

1102
00:56:50,274 --> 00:56:52,874
这就是我们在这里展示图片所需要做的。我会去的

1103
00:56:52,943 --> 00:56:56,177
为了演示的目的，另外做一件事情，

1104
00:56:56,246 --> 00:57:00,982
在我看过的负载中，我只会在这里做超级。我会说，

1105
00:57:01,051 --> 00:57:05,687
如果当我加载我的图片网址为零时，

1106
00:57:05,756 --> 00:57:08,723
然后我们加载一种样本图像，然后

1107
00:57:08,792 --> 00:57:11,660
我在这里有一个文件的示例图像，一个URL

1108
00:57:11,729 --> 00:57:16,798
样本图像。我们走吧，我要把它拖进去，

1109
00:57:16,867 --> 00:57:22,637
演示网址就在这里。再次，让我告诉你这个演示URL，

1110
00:57:22,706 --> 00:57:26,408
这看起来像什么。所以我有的演示网址，

1111
00:57:26,477 --> 00:57:30,178
我在这里有这个斯坦福一个。这是一个大局

1112
00:57:30,247 --> 00:57:33,381
的椭圆形，然后我有这些NASA的人在这里

1113
00:57:33,450 --> 00:57:36,751
周三的演示。现在我再次没有任何网络，

1114
00:57:36,820 --> 00:57:38,853
所以我实际上无法通过网络做这个

1115
00:57:38,922 --> 00:57:43,224
我会做一个本地的。使用这个捆绑main.url。

1116
00:57:43,293 --> 00:57:45,861
所以这给了我一个本地的。所以我有一个本地版本

1117
00:57:45,929 --> 00:57:49,431
这里的椭圆形。我会把它拖进去，复制进去。

1118
00:57:49,500 --> 00:57:53,034
我可以告诉你这是什么样子，对吧。

1119
00:57:53,103 --> 00:57:56,437
所以这只是那个椭圆形的一件大事，

1120
00:57:56,506 --> 00:57:59,741
非常高的分辨率。注意我点击这个按钮

1121
00:57:59,809 --> 00:58:02,477
在这里目标会员，以确保这个椭圆形

1122
00:58:02,545 --> 00:58:05,914
当我在设备上安装我的应用程序时包括在内。

1123
00:58:05,983 --> 00:58:08,349
因为我在本地看，但是

1124
00:58:08,418 --> 00:58:11,219
我只是想得到一个URL。它恰好是

1125
00:58:11,288 --> 00:58:13,488
与网络的URL相对的本地文件的URL，

1126
00:58:13,557 --> 00:58:16,524
这并不重要，因为我们还没有进行多线程，

1127
00:58:16,593 --> 00:58:18,493
所以它非常好。可以，然后呢

1128
00:58:18,562 --> 00:58:23,632
在这里，我只是将我的模型设置为与我的模型相同

1129
00:58:23,700 --> 00:58:28,369
DemoURLs.Stanford。所以这就是本地的URL

1130
00:58:28,438 --> 00:58:32,140
的家伙。好吧，让我们来看看它的作用

1131
00:58:32,209 --> 00:58:38,113
我们。其实我会去的，我们会重新运行这个和

1132
00:58:38,181 --> 00:58:41,049
用iPhone 10做到这一点。但在这里。现在它

1133
00:58:41,117 --> 00:58:45,153
显示图像，但真正长的图像被砸碎。

1134
00:58:45,222 --> 00:58:48,156
如果我这样做，它坚持做得很好

1135
00:58:48,224 --> 00:58:52,160
到边缘。但当然，这是一种粉碎

1136
00:58:52,229 --> 00:58:54,696
这里并不是斯坦福的光荣。

1137
00:58:54,765 --> 00:58:58,166
所以我们需要解决这个问题，我们如何解决这个问题？当然，

1138
00:58:58,234 --> 00:59:01,136
用ScrollView，对吗？如果我们把ScrollView放在那里，

1139
00:59:01,205 --> 00:59:03,572
它可以是它的正常尺寸，我们可以在它上面滚动。

1140
00:59:03,640 --> 00:59:06,074
放大和缩小，看看它。所以这很完美

1141
00:59:06,142 --> 00:59:09,244
这里有机会，用ScrollView修复我们的小应用。

1142
00:59:09,313 --> 00:59:13,281
现在，我要告诉你两种做ScrollView的方法。

1143
00:59:13,350 --> 00:59:16,851
从故事板完成滚动视图并完成ScrollView

1144
00:59:16,920 --> 00:59:19,888
在代码中。所以你们都看到了如何在故事板上做到这一点，

1145
00:59:19,956 --> 00:59:22,457
因为那里可能有点棘手，等等

1146
00:59:22,526 --> 00:59:25,226
你可以看到内容大小和发生了什么

1147
00:59:25,295 --> 00:59:28,963
代码中的所有东西。好吧，让我们来看看我们的

1148
00:59:29,032 --> 00:59:32,434
故事板就在这里。这里是我们的ImageView。

1149
00:59:32,503 --> 00:59:36,004
现在我要添加这个ScrollView。再次，我可以

1150
00:59:36,073 --> 00:59:38,974
过来这里，如果你到这里寻找

1151
00:59:39,042 --> 00:59:42,243
ScrollView你会看到你可以拖出滚动视图和

1152
00:59:42,312 --> 00:59:44,345
那么只需将子视图拖入它即可。

1153
00:59:44,414 --> 00:59:48,183
顺便说一句，当你与子视图交互时

1154
00:59:48,251 --> 00:59:52,186
它是关于ScrollView和Interface Builder的

1155
00:59:52,255 --> 00:59:55,791
内容区域。所以Interface Builder甚至没有

1156
00:59:55,859 --> 00:59:58,359
知道ScrollView子视图的任何内容，除了

1157
00:59:58,428 --> 01:00:00,528
他们在内容区域。所以

1158
01:00:00,597 --> 01:00:02,997
例如，我们会在这里创建一些限制

1159
01:00:03,066 --> 01:00:04,966
图像视图和ScrollView之间。

1160
01:00:05,035 --> 01:00:07,502
这将成为图像视图和图像之间的约束

1161
01:00:07,570 --> 01:00:10,839
内容区域，ScrollView的大白色区域。

1162
01:00:10,908 --> 01:00:13,708
所以这对了解你工作的时间很重要

1163
01:00:13,777 --> 01:00:16,211
在Interface Builder中。但我不会通过拖动来实现

1164
01:00:16,280 --> 01:00:18,613
它出现在这里。相反，我会用这个嵌入的东西，

1165
01:00:18,682 --> 01:00:20,482
对？所以我在这里选择了我的图像视图。

1166
01:00:20,550 --> 01:00:24,852
我会去嵌入，滚动视图，它会。

1167
01:00:24,921 --> 01:00:29,891
现在就像我说的，它将这个小小的20像素边框放在一边

1168
01:00:29,960 --> 01:00:34,328
它，我不是很想要，所以我要调整大小

1169
01:00:34,397 --> 01:00:38,900
这是完美的连接到我的边缘就在这里。

1170
01:00:38,969 --> 01:00:42,203
注意现在ImageView仍然有20个像素，所以

1171
01:00:42,272 --> 01:00:44,973
我要移动它。所以我把这两样东西放在一起

1172
01:00:45,042 --> 01:00:48,910
我想要的地方。现在，实际上在哪里并不重要

1173
01:00:48,979 --> 01:00:52,347
我把它的图像视图的大小和角度。

1174
01:00:52,415 --> 01:00:55,483
这里重要的是该ImageView被绑定到

1175
01:00:55,551 --> 01:00:59,420
内容区域的边缘。为什么这很重要？

1176
01:00:59,489 --> 01:01:02,957
不是，所以ImageView的尺寸是正确的，但是这样

1177
01:01:03,026 --> 01:01:06,694
内容区域是正确的大小。如果我绑定ImageView的

1178
01:01:06,763 --> 01:01:10,398
边缘到内容区域，并且ImageView更改大小，

1179
01:01:10,467 --> 01:01:14,269
内容区域将改变大小。我必须拥有这一点

1180
01:01:14,338 --> 01:01:17,372
如果我的内容区域总是匹配ImageView的大小

1181
01:01:17,441 --> 01:01:21,276
想要滚动整个图像，对吗？

1182
01:01:21,345 --> 01:01:24,446
所以，当你在Interface Builder中这样做时，相反

1183
01:01:24,514 --> 01:01:27,482
在代码中，你通过挂钩来约束

1184
01:01:27,551 --> 01:01:30,918
将ImageView绑定到ScrollView。其中，

1185
01:01:30,987 --> 01:01:33,654
它已经是，因为当我在ScrollView中嵌入时，

1186
01:01:33,723 --> 01:01:36,524
ImageView已经绑定到它的超级视图，所以它保持不变

1187
01:01:36,592 --> 01:01:39,294
它只是得到了这些额外的20分

1188
01:01:39,363 --> 01:01:43,497
那里我不喜欢。现在这件事是这个

1189
01:01:43,566 --> 01:01:47,668
ScrollView本身并不受其边缘限制。我调整了它，但

1190
01:01:47,737 --> 01:01:51,306
这没有任何限制。所以我会把它绑在边上

1191
01:01:51,375 --> 01:01:54,376
就像我做另一个一样。

1192
01:01:54,444 --> 01:01:58,212
但我如何选择ScrollView？当我点击这里时，

1193
01:01:58,281 --> 01:02:01,382
当它，我不断得到ImageView。任何人都可以想到

1194
01:02:01,451 --> 01:02:06,187
一种我们可以选择的方式？ >> [不可思议]

1195
01:02:06,256 --> 01:02:07,155
>>文件大纲，

1196
01:02:07,224 --> 01:02:10,424
绝对。我们来看看Document Outline吧？

1197
01:02:10,493 --> 01:02:11,893
这里是ScrollView，

1198
01:02:11,961 --> 01:02:14,962
我只是选择了它。所以在文档中非常简单

1199
01:02:15,031 --> 01:02:17,865
勾勒出你想要的东西。所以

1200
01:02:17,934 --> 01:02:20,936
我可以在这里选择我的ScrollView，一旦我有我的ScrollView

1201
01:02:21,004 --> 01:02:22,637
在这里，我可以选择，在这里下去

1202
01:02:22,706 --> 01:02:24,406
这件事我们有边缘和

1203
01:02:24,474 --> 01:02:27,208
只要把它挂到最近的邻居边上即可。相同

1204
01:02:27,276 --> 01:02:29,977
确切的事情，我们做了ImageView，它在这里做。

1205
01:02:30,046 --> 01:02:32,413
它将尾随和尾部放在同一个问题上

1206
01:02:32,482 --> 01:02:34,082
导致安全区域。

1207
01:02:34,151 --> 01:02:36,217
现在在您要查找的文档大纲中

1208
01:02:36,286 --> 01:02:39,120
约束，小心缩进。

1209
01:02:39,189 --> 01:02:42,790
这些限制转到ImageView。

1210
01:02:42,859 --> 01:02:45,527
这些限制转到ScrollView。

1211
01:02:45,596 --> 01:02:48,363
你看，缩进在那里如何？所以

1212
01:02:48,432 --> 01:02:51,366
在这里我要将这个安全区域改为SuperView

1213
01:02:51,434 --> 01:02:55,870
也。的SuperView。好的，我们知道了。

1214
01:02:55,938 --> 01:02:59,674
然后，我想在这里做的最后一件事是解决这一切

1215
01:02:59,743 --> 01:03:01,459
所有这些20分的东西，当我嵌入时它给了我，

1216
01:03:01,460 --> 01:03:03,176
20分，

1217
01:03:03,246 --> 01:03:06,447
因为我不想那样。我可以在这里编辑它，

1218
01:03:06,516 --> 01:03:09,584
在我这里的尺寸检查员。所以我只会说，

1219
01:03:09,653 --> 01:03:13,154
编辑，使之成为零。编辑这个，做到零。

1220
01:03:13,222 --> 01:03:17,525
编辑这个，做到零。编辑这个并使其为零。

1221
01:03:17,594 --> 01:03:20,562
所以现在我在这里有一些好看的限制。

1222
01:03:20,630 --> 01:03:22,930
看，ScrollView被连接到它的SuperView。

1223
01:03:22,999 --> 01:03:26,333
你可以看到ImageView连接到它的SuperView，

1224
01:03:26,402 --> 01:03:27,869
在Interface Builder中

1225
01:03:27,938 --> 01:03:30,271
指的是ScrollView的内容区域。

1226
01:03:30,340 --> 01:03:34,242
我无法强调这一点。当你有这个视图时，

1227
01:03:34,310 --> 01:03:36,878
让我们说，子视图，看看ImageView是如何是一个子视图

1228
01:03:36,947 --> 01:03:39,380
ScrollView的缩进在那里？这意味着这一点

1229
01:03:39,449 --> 01:03:41,449
ImageView，当ScrollView是你的SuperView时，

1230
01:03:41,518 --> 01:03:45,453
你在谈论内容领域。现在，这是为什么

1231
01:03:45,522 --> 01:03:49,157
仍红色？好吧，在我看来，我已经指定了我的全部

1232
01:03:49,225 --> 01:03:52,059
这些视图之间的约束。为什么这是红色的？

1233
01:03:52,128 --> 01:03:54,128
那么，让我们看看这里，看看它说什么。

1234
01:03:54,197 --> 01:03:57,598
它说可滚动内容的大小是不明确的

1235
01:03:57,667 --> 01:04:00,801
滚动型。所以它正在讨论这个内容区域，

1236
01:04:00,870 --> 01:04:04,171
它是说这个东西有多大？那么答案是，

1237
01:04:04,240 --> 01:04:05,539
它与图像视图一样大，

1238
01:04:05,608 --> 01:04:08,576
因为这两件事的边缘是连在一起的。但

1239
01:04:08,645 --> 01:04:11,313
Interface Builder不知道图像视图有多大

1240
01:04:11,381 --> 01:04:15,182
是。为什么？因为它没有图像。好的，这个

1241
01:04:15,251 --> 01:04:18,086
图像视图是空的，因此Interface Builder没有图像

1242
01:04:18,154 --> 01:04:19,887
就像我不知道这件事有多大，所以

1243
01:04:19,956 --> 01:04:22,056
我不知道可滚动内容区域有多大

1244
01:04:22,125 --> 01:04:25,493
滚动视图。现在，这是一个无法解决的问题，

1245
01:04:25,561 --> 01:04:28,396
因为我们不会在我们的代码运行之前设置图像。

1246
01:04:28,465 --> 01:04:30,064
那么我们如何在Interface Builder中处理这个问题呢？

1247
01:04:30,133 --> 01:04:33,001
那么，Interface Builder有一个非常酷的小功能，

1248
01:04:33,069 --> 01:04:35,336
如果你在这里检查图像视图

1249
01:04:35,404 --> 01:04:39,407
深入到底部，你会看到这个东西的内在尺寸？

1250
01:04:39,476 --> 01:04:42,210
东西的内在尺寸就是它的大小

1251
01:04:42,279 --> 01:04:45,046
想要适应其内容。所以对于一个标签，

1252
01:04:45,115 --> 01:04:47,849
然而，标签的固有尺寸可能很小而且很小

1253
01:04:47,917 --> 01:04:49,050
仍然适合那里的所有文本。

1254
01:04:49,119 --> 01:04:50,919
对于固有尺寸的图像视图，

1255
01:04:50,988 --> 01:04:53,955
它如何与自然的长宽比和

1256
01:04:54,024 --> 01:04:57,791
图像的大小，所以这是它的内在尺寸。好

1257
01:04:57,860 --> 01:05:01,229
它的内在大小，现在它被设置为默认值，但是

1258
01:05:01,297 --> 01:05:04,132
你可以将其设置为占位符。

1259
01:05:04,201 --> 01:05:07,601
这个占位符，我将要设置，只是任何随机的

1260
01:05:07,670 --> 01:05:11,706
你只需要大小，它只会在Interface Builder中使用它。

1261
01:05:11,774 --> 01:05:14,909
它只是在Interface Builder中保存这个地方，对吧？

1262
01:05:14,978 --> 01:05:17,811
在代码中，我们将设置它。所以，看，那摆脱了

1263
01:05:17,880 --> 01:05:21,849
我的红色投诉。因为现在imageView有一个大小，而且

1264
01:05:21,918 --> 01:05:24,618
所以内容区域将由812,8375，但

1265
01:05:24,687 --> 01:05:26,287
仅在Interface Builder中。

1266
01:05:26,356 --> 01:05:27,155
一旦运行，

1267
01:05:27,224 --> 01:05:29,190
它将会是imageView的大小，

1268
01:05:29,258 --> 01:05:31,026
这将取决于我们设置的图像。

1269
01:05:32,862 --> 01:05:36,898
每个人都得到了这一切？所以这是一种，

1270
01:05:38,101 --> 01:05:39,067
你可以看到我在说什么。

1271
01:05:39,136 --> 01:05:40,902
滚动视图有点棘手。

1272
01:05:40,971 --> 01:05:43,437
这需要一点时间才能理解

1273
01:05:43,506 --> 01:05:45,874
你正在设置图像视图和之间的约束

1274
01:05:45,942 --> 01:05:46,640
滚动视图，

1275
01:05:46,709 --> 01:05:48,509
你在谈论内容领域。

1276
01:05:48,578 --> 01:05:50,645
这就是控制内容区域的大小。

1277
01:05:50,714 --> 01:05:51,813
所以让我们运行吧，这就是我们必须做的，

1278
01:05:51,881 --> 01:05:54,082
我们在这里设置的代码中不需要做任何事情

1279
01:05:54,150 --> 01:05:55,416
所有这些限制。所以，让我们继续前进

1280
01:05:55,484 --> 01:06:00,688
运行这个东西，我一直忘记

1281
01:06:00,757 --> 01:06:03,291
在iPhone 10上做这个更有趣一点。

1282
01:06:03,360 --> 01:06:07,261
事实上，让我们在iPhone 10上完成并停止在这里。 iPhone 10，

1283
01:06:07,330 --> 01:06:10,665
iPhone 10更有趣一些，因为它具有

1284
01:06:10,734 --> 01:06:14,201
那个安全区域是内置的，而另一个则不是。

1285
01:06:14,270 --> 01:06:15,870
好吧，看看。这是我们的形象。

1286
01:06:15,939 --> 01:06:18,873
你看到我们形象的蓝天如何

1287
01:06:18,941 --> 01:06:22,810
在这里，时间和所有这一切？如果我滚动，

1288
01:06:22,879 --> 01:06:25,747
呜呼，它显示，好吧，

1289
01:06:25,815 --> 01:06:30,218
我们的树在这里。这很酷。你可以滚动四处。

1290
01:06:30,286 --> 01:06:34,055
请注意，如果我向下滚动它会显示安全区域，

1291
01:06:34,124 --> 01:06:36,424
对？这会使其低于安全区域。

1292
01:06:36,492 --> 01:06:38,526
所以这就是scrollView对安全区域的智能。

1293
01:06:38,594 --> 01:06:41,062
尽管我们将它与超级观点联系在一起，但它仍然存在

1294
01:06:41,130 --> 01:06:44,065
知道有一个安全区域。它一路下降，

1295
01:06:44,133 --> 01:06:47,268
在另一边也是如此。所以在这里

1296
01:06:47,337 --> 01:06:49,670
我们正在滚动。例如，我们可以去风景，

1297
01:06:49,739 --> 01:06:52,540
然后滚动。找到我们想要的东西，

1298
01:06:52,609 --> 01:06:55,409
那里有菜。就这样。

1299
01:06:55,478 --> 01:06:59,547
这就是scrollView所需的全部内容。作品超级简单。

1300
01:06:59,616 --> 01:07:02,851
现在在代码中做这个怎么样？所以在代码中，在某些方面

1301
01:07:02,919 --> 01:07:05,753
这比做这个要容易得多。因为

1302
01:07:05,822 --> 01:07:08,022
你没有20像素的东西和所有的东西。

1303
01:07:08,091 --> 01:07:10,325
所以我会在代码中做同样的事情。

1304
01:07:10,393 --> 01:07:12,860
所以我要把我的imageView和删除它。

1305
01:07:12,929 --> 01:07:14,362
所以我刚刚删除了我的imageView。

1306
01:07:14,431 --> 01:07:17,432
不过，我会把我的scrollView留在那里。因为我

1307
01:07:17,500 --> 01:07:19,801
需要与滚动视图进行交谈来设置其内容大小，

1308
01:07:19,869 --> 01:07:23,137
所以我会把它留在那里。我们来看看这里

1309
01:07:23,205 --> 01:07:26,173
让我们的代码在同一时间。

1310
01:07:26,242 --> 01:07:30,611
我要在这里为这个scrollView创建一个outlet，

1311
01:07:30,680 --> 01:07:35,216
以便我可以再次谈论它。我不需要我的图像视图

1312
01:07:35,284 --> 01:07:37,318
outlet，因为我要用代码来创建它。

1313
01:07:37,387 --> 01:07:38,552
实际上，我们只是在这里创建它。

1314
01:07:38,621 --> 01:07:42,323
我要保存我的ImageView =新的ImageView，

1315
01:07:42,392 --> 01:07:43,590
我只是要创建ImageView。

1316
01:07:43,659 --> 01:07:46,327
它的尺寸小于零，但没关系。每当我设置图像时，

1317
01:07:46,395 --> 01:07:49,897
我会调整它。然后让我们控制+拖动挂钩

1318
01:07:49,966 --> 01:07:53,901
直到我们的scrollView。调用这个scrollView。现在我们有了

1319
01:07:53,970 --> 01:07:57,571
与两者的连接。这里我们只是想要imageView

1320
01:07:57,640 --> 01:08:00,574
位于scrollView的内容区域。所以尽快

1321
01:08:00,643 --> 01:08:04,546
scrollView会被我正在使用的Interface Builder连接起来

1322
01:08:04,614 --> 01:08:07,681
要求scrollView添加scrollView添加

1323
01:08:07,750 --> 01:08:12,953
作为imageView的子视图。所以它添加了它。这很好。

1324
01:08:13,022 --> 01:08:16,124
内容区域的大小再次是零，我的imageView也是

1325
01:08:16,192 --> 01:08:19,026
这一点，所以它将是完全空白的。

1326
01:08:19,095 --> 01:08:21,729
任何时候我都会像这样在这里设置图像

1327
01:08:21,798 --> 01:08:24,265
其实我也是在这里做的。

1328
01:08:24,333 --> 01:08:29,837
我需要告诉imageView以适合自己的尺寸。

1329
01:08:29,905 --> 01:08:33,474
所以适合身材就意味着让自己成为你的内在尺寸，

1330
01:08:33,543 --> 01:08:36,611
对？适合这张照片的尺寸是最好的

1331
01:08:36,679 --> 01:08:39,814
现在已经设置了UIimage使用框架，但是

1332
01:08:39,883 --> 01:08:43,384
如果我不这样做，scrollView.contentSize =。

1333
01:08:44,787 --> 01:08:47,655
等于imageView.frame.size。

1334
01:08:47,723 --> 01:08:51,059
如果我不这样做，那么它不会滚动。

1335
01:08:51,127 --> 01:08:54,862
你明白为什么？好的，否则内容将是00

1336
01:08:54,931 --> 01:08:58,132
尺寸。我得到了这个大的图像，我试图滚动和

1337
01:08:58,201 --> 01:09:00,734
这个00大小的矩形什么都不做。

1338
01:09:00,803 --> 01:09:03,771
好吧，现在我必须在这里做同样的事情

1339
01:09:03,840 --> 01:09:06,173
当我将图像设置回零时。

1340
01:09:06,242 --> 01:09:09,043
我想将我的内容大小重新调整为零。

1341
01:09:09,111 --> 01:09:10,912
现在通常我会说，复制和

1342
01:09:10,981 --> 01:09:14,448
粘贴这样的代码很糟糕。不要这样做。

1343
01:09:14,517 --> 01:09:17,652
但这是一个演示。我没有时间去修复它。

1344
01:09:17,720 --> 01:09:19,420
但实际上我会花时间修复它，

1345
01:09:19,488 --> 01:09:22,089
因为我要以我认为会的方式解决它

1346
01:09:22,158 --> 01:09:23,458
有点有趣。

1347
01:09:23,526 --> 01:09:26,460
我要创建一个var，实际上是一个私有变量，

1348
01:09:26,529 --> 01:09:29,163
所谓的图像将成为一种类型的UIImage，并且

1349
01:09:29,231 --> 01:09:31,065
每一个，它都会被计算出来，

1350
01:09:31,133 --> 01:09:33,501
每次我想要设置自己的形象或获得自己的形象时，

1351
01:09:33,570 --> 01:09:37,104
我只是想从imageView中获得它。所以我会说

1352
01:09:37,173 --> 01:09:41,875
得到，返回imageView的图像，并设置它

1353
01:09:41,944 --> 01:09:46,980
将imageView的图像设置为新的值。所以

1354
01:09:47,049 --> 01:09:50,384
这只是一个正常的计算属性在这里。但

1355
01:09:50,453 --> 01:09:55,389
现在很酷的事情，我可以把它放在这里。所以

1356
01:09:55,458 --> 01:09:57,591
每次我设定我的形象时，

1357
01:09:57,660 --> 01:10:00,861
我调整了我的imageView和我的scrollView。所以

1358
01:10:00,930 --> 01:10:06,033
在这里我可以说，image = nil，在这里，

1359
01:10:06,102 --> 01:10:10,438
我可以说，图像=新图像，我不需要

1360
01:10:10,507 --> 01:10:13,140
将这些代码复制到两个不同的地方。

1361
01:10:13,209 --> 01:10:16,710
所以这里有一个例子，你可以使用计算的Var，

1362
01:10:16,779 --> 01:10:18,779
因为在概念上这是我的形象，

1363
01:10:18,848 --> 01:10:20,481
它恰好存储在imageView中，

1364
01:10:20,550 --> 01:10:22,417
我不需要从那里复制它，

1365
01:10:22,485 --> 01:10:24,651
我只是想把它归还，然后放在那里。但

1366
01:10:24,720 --> 01:10:27,522
我还可以在那边做我的漂亮的小设置。

1367
01:10:28,892 --> 01:10:31,993
好吧，就是这样。所以在代码中也很容易。

1368
01:10:40,703 --> 01:10:41,836
好吧，这是一个很大的文件

1369
01:10:41,904 --> 01:10:45,172
即使在本地也需要一段时间才能加载。但在这里。所以

1370
01:10:45,241 --> 01:10:48,175
我们得到了与之前完全一样的东西，

1371
01:10:48,244 --> 01:10:52,413
我们仍然可以在这里找到补充，我们可以旋转。但

1372
01:10:52,482 --> 01:10:55,383
如果我们能看到整个画面，那将是非常酷的。

1373
01:10:55,452 --> 01:10:57,918
这有点烦人，我们可以看到

1374
01:10:57,987 --> 01:10:59,653
它的两个小部分。实际上，这很酷，

1375
01:10:59,722 --> 01:11:01,022
能够看到它的一部分。但

1376
01:11:01,090 --> 01:11:02,623
我们希望能够缩小并看到整个事情。

1377
01:11:02,691 --> 01:11:05,526
所以现在我们需要缩放。那么，这两件事情是什么？

1378
01:11:05,595 --> 01:11:09,230
我们需要做缩放？设置最小，最大的缩放比例。

1379
01:11:10,500 --> 01:11:12,866
只要代表说明要放大哪个视图。

1380
01:11:12,935 --> 01:11:15,603
现在很明显，我们希望转换工作在哪个视图上

1381
01:11:15,672 --> 01:11:19,340
这里是我们的ImageView。所以让我们去做那个，我只是

1382
01:11:19,408 --> 01:11:22,709
要做到这一点，我会在这里设置这些东西。好的，

1383
01:11:22,778 --> 01:11:26,914
这里是我的scrollView由iOS设置的地方，所以让我们来看看

1384
01:11:26,982 --> 01:11:31,419
scrollView的最小缩放比例，我们将去1/25，

1385
01:11:31,487 --> 01:11:35,389
好吧，1/25。所以我们会允许它缩小

1386
01:11:35,458 --> 01:11:38,826
图像是其正常尺寸的1/25。

1387
01:11:38,894 --> 01:11:43,197
然后，也许最大缩放比例，我会说1.0。

1388
01:11:43,266 --> 01:11:44,732
为什么我会说1.0？

1389
01:11:44,800 --> 01:11:47,902
好吧，也许是因为我不希望你放大

1390
01:11:47,971 --> 01:11:51,539
这些比特看起来有点像，你知道，像素化，所以我不会

1391
01:11:51,608 --> 01:11:55,976
让你放大不超过1.0。所以你可以放大到1.0，

1392
01:11:56,045 --> 01:11:59,914
但没有更接近，我们会让你全缩放到1/25，

1393
01:11:59,983 --> 01:12:05,352
所以这是第一部分，第二部分是scrollView.delegate。等于

1394
01:12:05,421 --> 01:12:09,657
什么？自我，是的。我将成为scrollView的代表。

1395
01:12:09,726 --> 01:12:11,893
现在，这会在这里产生一个错误，

1396
01:12:11,961 --> 01:12:16,430
因为self不是一个UI scrollView delegate。

1397
01:12:16,499 --> 01:12:18,132
这很容易解决，我们到这里来

1398
01:12:18,201 --> 01:12:21,401
说是的，我是一个用户界面滚动视图委托，

1399
01:12:21,470 --> 01:12:25,072
非常感谢你。并且因为所有这些方法都是可选的

1400
01:12:25,141 --> 01:12:29,543
Objective-C方法，我所有的错误都消失了。然而，

1401
01:12:29,612 --> 01:12:32,412
滚动不会工作，除非我实现这一视图

1402
01:12:32,481 --> 01:12:35,783
用于滚动方法。所以让我们来做。它被称为查看

1403
01:12:35,851 --> 01:12:39,019
在那里滚动它，viewForZoomingIn我的意思是，和

1404
01:12:39,088 --> 01:12:42,155
我们只需要返回我们的图像视图，因为这是

1405
01:12:42,224 --> 01:12:45,593
视图，我们想要的内容区域中的子视图

1406
01:12:45,661 --> 01:12:48,763
当我们的音调正确时，会发生变化吗所以我们试试吧。

1407
01:12:58,274 --> 01:13:00,374
好的，我们走吧。我们仍然可以平移。

1408
01:13:00,443 --> 01:13:02,910
但现在，我们可以放大。记得记得如何捏？

1409
01:13:02,979 --> 01:13:06,180
在这里按住选项键。电池电量低。

1410
01:13:06,249 --> 01:13:09,817
在这里按住选项，捏。和

1411
01:13:09,886 --> 01:13:13,921
我们可以在这里缩小。好吧，一直到这里。

1412
01:13:13,989 --> 01:13:20,827
如果我们这样做，也许看起来更好，我们走了。像那样，

1413
01:13:20,896 --> 01:13:28,269
好的，放大，真的很容易。所以希望，这给了你

1414
01:13:28,337 --> 01:13:31,872
在添加子视图方面全面浏览scrollView，

1415
01:13:31,940 --> 01:13:36,744
管理其内容大小，缩放，所有这些东西，

1416
01:13:36,812 --> 01:13:39,713
非常简单，易于使用。下次

1417
01:13:39,782 --> 01:13:43,584
我们要做的是我们要得到的图像

1418
01:13:43,653 --> 01:13:45,386
将通过网络成为这些巨大的图像。

1419
01:13:45,454 --> 01:13:48,923
希望我能让我的Mac在网络上工作，并且

1420
01:13:48,991 --> 01:13:51,992
那会很慢。我们不想要我们的用户界面

1421
01:13:52,061 --> 01:13:54,328
被阻止等待发生。

1422
01:13:54,397 --> 01:13:56,330
我们希望它仍然是高度互动的。和

1423
01:13:56,399 --> 01:13:58,865
所以要做到这一点，我们需要做多线程。那就是了

1424
01:13:58,934 --> 01:14:02,003
我们在周三讲座开始时的主要话题。

1425
01:14:02,071 --> 01:14:05,372
然后我会看到你。 >>为

1426
01:14:05,441 --> 01:14:14,848
更多，请访问我们的stanford.edu。

