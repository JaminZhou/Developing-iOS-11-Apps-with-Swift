1
00:00:00,401 --> 00:00:04,403
[音乐]

2
00:00:04,471 --> 00:00:07,639
斯坦福大学。 >>好吧，

3
00:00:07,708 --> 00:00:11,843
欢迎来到斯坦福CS193P第11讲座，

4
00:00:11,912 --> 00:00:16,381
这是2017年的季度。而今天，我们有两个巨大的

5
00:00:16,450 --> 00:00:19,584
话题来谈谈。第一个是拖放，

6
00:00:19,653 --> 00:00:22,153
这是一种在应用程序之间共享信息的方式，

7
00:00:22,222 --> 00:00:24,422
在iOS 11中尤为重要。

8
00:00:24,491 --> 00:00:27,726
因为在iPad上，有相当多的多任务

9
00:00:27,794 --> 00:00:30,929
能够同时在屏幕上显示两个应用程序。和

10
00:00:30,997 --> 00:00:33,431
很好，很高兴能够在它们之间拖拽。和

11
00:00:33,500 --> 00:00:37,102
那么我们将讨论TableView和CollectionView，

12
00:00:37,170 --> 00:00:40,439
绝对是我一直以来复杂的一大步

13
00:00:40,507 --> 00:00:44,109
教你到目前为止，但我认为你已经准备好了。所以

14
00:00:44,178 --> 00:00:47,045
拖放，什么是拖放？

15
00:00:47,114 --> 00:00:50,682
这很简单，你只需按住，

16
00:00:50,751 --> 00:00:54,452
我们称之为iOS上的长时间按压，可以做些什么

17
00:00:54,521 --> 00:00:58,257
被拖动并开始移动。当你这样做时，操作

18
00:00:58,325 --> 00:01:01,660
系统，iOS，会让你拖动那个东西。

19
00:01:01,729 --> 00:01:04,496
然后你可以将它拖到可能接收它的东西上

20
00:01:04,564 --> 00:01:07,332
放手吧，它会把它们放在那里，就这么简单。

21
00:01:07,401 --> 00:01:10,035
你已经看到了所有的时间都在桌面上拖放，

22
00:01:10,104 --> 00:01:11,869
所以现在我们有了多任务处理。

23
00:01:11,938 --> 00:01:14,973
真正令人难以置信的是他们拖拽的方式

24
00:01:15,042 --> 00:01:17,876
是在你拖着拖放的时候，而你是

25
00:01:17,944 --> 00:01:20,745
拖动东西，你可以用你的另一个手指和

26
00:01:20,814 --> 00:01:24,115
不管你想要的还是完全使用你的UI。所以拖动和

27
00:01:24,184 --> 00:01:27,452
放下不会干扰iPad的操作

28
00:01:27,520 --> 00:01:30,288
所有。这是非常惊人的，因为你可以在中间

29
00:01:30,357 --> 00:01:32,824
拖拽并说，呃，实际上我需要导航到

30
00:01:32,893 --> 00:01:35,260
我的应用程序的其他部分放弃，它会工作。和

31
00:01:35,328 --> 00:01:37,662
这是多点触摸的价值

32
00:01:37,731 --> 00:01:40,632
多手指。你也可以在拖动和中间

33
00:01:40,701 --> 00:01:42,801
说，嗯，我也想扯这些其他的东西。

34
00:01:42,869 --> 00:01:45,604
只需点击其他的东西，它会将其添加到拖动中。

35
00:01:45,672 --> 00:01:48,506
所以他们真的使用多指或多点触摸

36
00:01:48,575 --> 00:01:52,644
拖放效果很好。那么我们如何实施

37
00:01:52,713 --> 00:01:54,780
拖放？如果我们想要，我们在代码中做什么？

38
00:01:54,848 --> 00:01:59,117
参与拖放？真正的制作门户

39
00:01:59,185 --> 00:02:02,353
这项工作是通过这些被称为交互的东西。所以

40
00:02:02,422 --> 00:02:05,190
拖放是一种视图，它是一种UI视图。

41
00:02:05,259 --> 00:02:08,527
就像手势是一种UI视图一样，

42
00:02:08,595 --> 00:02:10,228
你可以考虑拖拽和

43
00:02:10,297 --> 00:02:13,898
如果你愿意的话，这只是另一个非常强大的手势。

44
00:02:13,967 --> 00:02:16,868
但是，您不要通过添加手势来启用拖放操作

45
00:02:16,937 --> 00:02:20,872
识别器，而是通过添加dropInteraction或

46
00:02:20,941 --> 00:02:23,474
一个dragInteraction。但它看起来

47
00:02:23,543 --> 00:02:26,578
与添加手势识别器几乎完全相同。

48
00:02:26,646 --> 00:02:29,747
UI视图只是有一个名为addInteraction的方法，

49
00:02:29,816 --> 00:02:31,315
它需要一个拖动或

50
00:02:31,384 --> 00:02:33,384
您创建的下拉交互。和

51
00:02:33,453 --> 00:02:36,221
拖放交互很容易创建。

52
00:02:36,289 --> 00:02:39,157
它只有一个参数给它的初始值设定项，

53
00:02:39,226 --> 00:02:42,093
这是一个代表。然后，会发生什么是，

54
00:02:42,162 --> 00:02:45,697
当拖动或拖放或两者都有，你可以有一个视图是两个，

55
00:02:45,766 --> 00:02:48,533
开始Delegator会开始接收一些消息。

56
00:02:48,602 --> 00:02:50,668
你必须回复这些信息，

57
00:02:50,737 --> 00:02:52,737
如果你想参加，那么就发送给它

58
00:02:52,806 --> 00:02:54,906
这些消息很容易回应。

59
00:02:54,975 --> 00:02:55,841
所以让我们来看看这个，

60
00:02:55,909 --> 00:02:59,344
让我们先看看是一个拖累的人，一个视图

61
00:02:59,412 --> 00:03:03,348
你想要拖入其他应用的东西。

62
00:03:03,417 --> 00:03:06,952
如果你想在你的视图上注册dragInteraction，

63
00:03:07,020 --> 00:03:09,955
那么当用户那么长时间按下和

64
00:03:10,024 --> 00:03:12,357
移动，看起来像一个拖动，你知道，

65
00:03:12,426 --> 00:03:15,927
拖拽拖拽，你会得到这个消息，

66
00:03:15,996 --> 00:03:19,464
DragInteraction，itemsForBeginning。和

67
00:03:19,533 --> 00:03:22,734
这非常简单。你只是要返回一个数组

68
00:03:22,802 --> 00:03:26,471
您愿意从视图中拖曳的项目。

69
00:03:26,540 --> 00:03:30,308
那么拖动项目是什么样的？那么真的是一个拖动项目

70
00:03:30,377 --> 00:03:32,744
只有一件重要的事情，那就是，

71
00:03:32,813 --> 00:03:36,113
所谓的itemProvider。现在itemProvider只是

72
00:03:36,182 --> 00:03:39,184
可以提供将被拖动的数据的东西。

73
00:03:39,253 --> 00:03:41,753
你可能会问，那么拖动项目是如何来的

74
00:03:41,821 --> 00:03:44,722
没有数据？你想拖动的东西。

75
00:03:44,791 --> 00:03:47,425
原因是它可能是昂贵的

76
00:03:47,494 --> 00:03:50,361
你创建这些数据。也许这是一个图像或

77
00:03:50,430 --> 00:03:53,531
你必须加载一些原因或

78
00:03:53,600 --> 00:03:58,002
做别的事。所以拖放是非常完全的

79
00:03:58,071 --> 00:04:00,939
异步。你开始拖动和

80
00:04:01,008 --> 00:04:03,641
它非常轻便，并且在拖拽

81
00:04:03,710 --> 00:04:06,511
几乎没有任何事情发生，但是之后，

82
00:04:06,579 --> 00:04:09,381
当下降发生时，如果你是一个物品提供者，

83
00:04:09,450 --> 00:04:12,384
你必须实际上给出数据。

84
00:04:12,452 --> 00:04:15,020
即使这需要一定的时间。

85
00:04:15,089 --> 00:04:16,821
所以这就是我们添加itemProviders的原因。

86
00:04:16,890 --> 00:04:19,624
幸运的是，有很多内置的itemProviders。

87
00:04:19,693 --> 00:04:23,194
在iOS中已经存在的itemPoviders类的类

88
00:04:23,263 --> 00:04:26,698
NSAttributedString。所以你可以拖动，拿起一些文字

89
00:04:26,766 --> 00:04:29,834
他们会拖着他们的字体和一切。

90
00:04:29,903 --> 00:04:33,971
还有NSString，它是没有字体的文本。

91
00:04:34,040 --> 00:04:35,706
UIImage当然。你可以拿起和

92
00:04:35,775 --> 00:04:39,177
拖动UIImages。 NSURL，这真是一个不错的选择。

93
00:04:39,246 --> 00:04:41,780
你进入一个网页，你可以找到一个URL并放下它。

94
00:04:41,848 --> 00:04:44,582
也许这是对某篇文章或URL的引用

95
00:04:44,651 --> 00:04:46,485
就像我们将要在演示中展示的图像一样

96
00:04:46,553 --> 00:04:50,589
构建等。UIColor，MapItem，来自地址的联系人

97
00:04:50,657 --> 00:04:53,058
书，很多东西你可以拾取和移动。

98
00:04:53,126 --> 00:04:56,695
这些都是itemProviders。所以要创建一个拖动项目

99
00:04:56,764 --> 00:04:58,763
只需使用NSItemProvider和

100
00:04:58,832 --> 00:05:01,399
提供将要提供数据的对象。

101
00:05:01,468 --> 00:05:04,535
现在当然你可以写你自己的项目提供者

102
00:05:04,604 --> 00:05:07,539
提供你自己的数据，但你知道，大部分

103
00:05:07,608 --> 00:05:11,009
时间你只是要使用这些不错的预制的。有

104
00:05:11,077 --> 00:05:14,579
dragItem中的另一件事，用于本地拖动。

105
00:05:14,648 --> 00:05:17,916
拖放可以在应用内和应用之间工作。

106
00:05:17,984 --> 00:05:20,985
它只适用于iPad上的应用程序，因为你只能

107
00:05:21,054 --> 00:05:23,521
在iPad上同时在屏幕上获得两个应用程序。

108
00:05:23,590 --> 00:05:27,158
但在iPhone和iPad上，您可以在应用程序内部进行操作。

109
00:05:27,226 --> 00:05:30,128
如果你在应用程序内拖放，那么你可以

110
00:05:30,196 --> 00:05:33,197
短路所有这些itemProvider业务和

111
00:05:33,266 --> 00:05:36,167
只需在你的dragItem中使用这个小var，localObject即可

112
00:05:36,235 --> 00:05:39,404
这只会意味着你正在拖动这个本地对象。

113
00:05:39,473 --> 00:05:42,574
那个本地对象可以是任何东西，它是任何类型的，所以

114
00:05:42,643 --> 00:05:45,576
你可以放任何你想要的东西并拖拽，使用拖拽和

115
00:05:45,645 --> 00:05:49,047
拖放到您的应用程序从一个地方拖动到另一个地方。

116
00:05:49,115 --> 00:05:50,582
所以这是一个开始拖动，

117
00:05:50,651 --> 00:05:52,984
你只需要提供这个项目的开始数组和

118
00:05:53,053 --> 00:05:57,889
而已。如果在阻力中间，有人使用另一个

119
00:05:57,957 --> 00:06:02,160
手指来选择他们想要拖动的其他东西。

120
00:06:02,229 --> 00:06:05,096
然后你会得到这条消息itemsForAddingTo，

121
00:06:05,165 --> 00:06:09,600
本届会议。所有你必须在那里做，提供

122
00:06:09,669 --> 00:06:12,537
一组拖动项目。通常是dragItems的数组

123
00:06:12,605 --> 00:06:14,939
只是一个dragItem或者它可能是空的

124
00:06:15,008 --> 00:06:16,975
无论是开始还是项目

125
00:06:17,043 --> 00:06:19,243
如果你在这里返回一个空数组，

126
00:06:19,312 --> 00:06:22,981
这意味着我没有任何东西可以拖动。谢谢问。所以

127
00:06:23,050 --> 00:06:26,184
如果你不想要，就不参与就很容易

128
00:06:26,253 --> 00:06:29,587
至。所以这会让拖动开始，就是这样。

129
00:06:29,656 --> 00:06:32,857
这就是你必须做的所有事情来成为一个拖动源。现在，

130
00:06:32,926 --> 00:06:36,661
接受下降的情况如何？所以，现在你在另一个

131
00:06:36,729 --> 00:06:38,163
下降的一面。有人把它放在你身上。

132
00:06:38,231 --> 00:06:40,431
那么，这是一个多步骤的过程。

133
00:06:40,500 --> 00:06:42,833
第一个是你会得到这个消息发送给你。

134
00:06:42,902 --> 00:06:45,470
再次，这是如果你添加交互，

135
00:06:45,539 --> 00:06:47,572
UIDropInteraction到UIView。

136
00:06:47,640 --> 00:06:50,908
当拖动开始标题时，您会收到此消息

137
00:06:50,977 --> 00:06:54,845
你的方式，这是canHandle。删除交互canHandle。

138
00:06:54,914 --> 00:06:57,616
你会得到这个会议的事情，它会回来

139
00:06:57,684 --> 00:07:01,653
一个布尔，这是否可以处理这样的拖动。

140
00:07:01,722 --> 00:07:04,422
那么这是什么意思呢？那么你得看看

141
00:07:04,491 --> 00:07:07,625
这个会话，它传递给你那个UIDragSession。

142
00:07:07,694 --> 00:07:10,195
你通常不会在那里调用一种方法

143
00:07:10,263 --> 00:07:14,732
canLoadObjects（ofClass），你会问这个会话。

144
00:07:14,801 --> 00:07:16,868
那么你可以提供一个NSString？

145
00:07:16,937 --> 00:07:20,905
如果是这样，我进来了。你能提供一个UIImage吗？算我一个。

146
00:07:20,973 --> 00:07:24,442
如果没有，不能提供你感兴趣的东西，

147
00:07:24,511 --> 00:07:27,378
那么你只需从这个canHandle会话中返回false

148
00:07:27,447 --> 00:07:31,483
在这次拖延中它不会再打扰你了。所以

149
00:07:31,551 --> 00:07:34,686
那是为了让它开始。现在，如果你要说是的，我

150
00:07:34,754 --> 00:07:38,289
可以加载该类型的对象。然后你会开始

151
00:07:38,358 --> 00:07:42,026
将此sessionDidUpdate消息发送给您。再次，

152
00:07:42,095 --> 00:07:43,829
这会再次将该会话传递给你。

153
00:07:43,897 --> 00:07:45,597
会议可能会有所改变，

154
00:07:45,665 --> 00:07:47,465
因为也许手指已经移动了一点点，所以

155
00:07:47,533 --> 00:07:49,434
也许这会改变你对你的决定

156
00:07:49,502 --> 00:07:52,036
想要接受这个下降。但是你从哪里回来

157
00:07:52,105 --> 00:07:55,907
sessionDidUpdate是一个UIDropProposal。

158
00:07:55,976 --> 00:07:59,477
现在这是你的建议作为接收器。对于

159
00:07:59,546 --> 00:08:01,612
你愿意用这个Drop来做什么，而且真的

160
00:08:01,681 --> 00:08:04,615
只有三件事你可以做。你可以有一个下降建议

161
00:08:04,684 --> 00:08:08,853
这是取消，也就是说，我建议取消这个

162
00:08:08,922 --> 00:08:10,921
如果您想尝试将它放在您的位置，请放下

163
00:08:10,990 --> 00:08:15,059
现在是因为我不接受它。而拖动，

164
00:08:15,128 --> 00:08:17,495
我们会在它上面出现一个小图标，就像，

165
00:08:17,564 --> 00:08:19,464
你知道，一个红线圈住了它，说道：

166
00:08:19,533 --> 00:08:23,000
不，你不能在这里下降。然后是复制和移动。

167
00:08:23,069 --> 00:08:26,170
复制和移动是一个建议，说，是的，我建议，

168
00:08:26,239 --> 00:08:30,508
我会收到这个下降，我会复制该项目或

169
00:08:30,576 --> 00:08:34,412
移动它。现在，复制往往是你要做的

170
00:08:34,481 --> 00:08:36,580
这里。移动只会有意义

171
00:08:36,649 --> 00:08:39,784
在您的应用程序内拖动。因为你会移动

172
00:08:39,853 --> 00:08:42,487
它从哪里来，它不会再存在了

173
00:08:42,556 --> 00:08:43,688
现在它会在新的地方，

174
00:08:43,757 --> 00:08:45,322
这只能发生在你自己的应用程序中。

175
00:08:45,391 --> 00:08:48,059
所以，如果你真的这样做，只能在你自己的应用程序中

176
00:08:48,127 --> 00:08:50,995
移动的东西，而不是复制和复制

177
00:08:51,064 --> 00:08:52,530
的。如果有人从外面拖着，

178
00:08:52,598 --> 00:08:55,266
你总是会复制它。就这样，你就是

179
00:08:55,335 --> 00:08:58,803
不得不说，每次询问时都要取消，移动或复制

180
00:08:58,871 --> 00:09:01,873
对这个。顺便说一下，你可以看看会话和

181
00:09:01,942 --> 00:09:04,942
找出手指在你的视野里，

182
00:09:05,011 --> 00:09:07,412
通过询问会话在视图中的位置。

183
00:09:07,481 --> 00:09:09,580
所以在你看来有些地方可能会抬头看跌，

184
00:09:09,649 --> 00:09:12,350
在某个地方没有，好的。

185
00:09:12,418 --> 00:09:15,686
所以这非常简单，所以这个建议是有点

186
00:09:15,755 --> 00:09:18,789
如果要下降的话，接受下降的合约

187
00:09:18,858 --> 00:09:22,794
这个位置。如果你确实接受它，那么，

188
00:09:22,862 --> 00:09:26,264
就像你不说的那样，在你的提案中点取消，

189
00:09:26,332 --> 00:09:29,734
那么当手指被释放时你会得到performDrop，

190
00:09:29,803 --> 00:09:32,370
并发生下降。现在，执行下拉，

191
00:09:32,439 --> 00:09:34,772
你会再次获得该会议。这里，

192
00:09:34,841 --> 00:09:37,041
你几乎总是只打一个方法，

193
00:09:37,110 --> 00:09:41,546
这是loadObjects的Class。

194
00:09:41,615 --> 00:09:43,848
所以我们看到了所有可以加载对象类的东西。

195
00:09:43,917 --> 00:09:45,850
现在，我们有实际的类加载对象。

196
00:09:45,919 --> 00:09:47,552
现在这是一个很棒的小方法。

197
00:09:47,620 --> 00:09:50,688
这是他们拖放和拖放的方式之一

198
00:09:50,757 --> 00:09:54,159
简单，没有，所有的异步，但是

199
00:09:54,227 --> 00:09:56,827
没有很多困难在你的应用程序，这是，

200
00:09:56,896 --> 00:10:00,164
你只需调用类的加载对象。你指定

201
00:10:00,233 --> 00:10:02,399
你愿意从下降中得到的课程，所以

202
00:10:02,468 --> 00:10:04,335
像属性字符串或颜色，或

203
00:10:04,404 --> 00:10:07,572
一个URL或图像，无论如何。推测，你的东西

204
00:10:07,641 --> 00:10:11,209
说你早些时候会接受，并且会去

205
00:10:11,277 --> 00:10:14,378
在另一个线程上异步获取这些数据。和

206
00:10:14,447 --> 00:10:16,681
当它从拖动源获得全部时，

207
00:10:16,749 --> 00:10:19,751
它会调用给你提供的第一封

208
00:10:19,819 --> 00:10:23,754
武器是这些东西的阵列。所以在这种情况下，

209
00:10:23,823 --> 00:10:27,458
我在说，在分布式字符串中加载类的对象，

210
00:10:27,527 --> 00:10:30,628
所以它会用The Strings来调用这个闭包

211
00:10:30,697 --> 00:10:34,165
作为字符串的数组和属性。现在，它

212
00:10:34,234 --> 00:10:37,602
实际上是一组实现提供者的东西

213
00:10:37,670 --> 00:10:40,572
协议，所以你必须用AS来施放它。

214
00:10:40,640 --> 00:10:43,141
但这基本上是这些MS属性的数组

215
00:10:43,209 --> 00:10:44,375
强项。同样的，

216
00:10:44,444 --> 00:10:47,044
你可以做UIImage.self和所有这一切。顺便说一下

217
00:10:47,113 --> 00:10:49,180
NSAttributeString.self就是这样

218
00:10:49,249 --> 00:10:52,316
你在它的属性字符串中指定类，

219
00:10:52,385 --> 00:10:54,319
如果你想把它作为参数传递给函数。

220
00:10:54,387 --> 00:10:57,722
我们之前没有看到过，但这就是你所做的一切。

221
00:10:57,791 --> 00:11:01,825
而且，这封闭是送给你并且被实施

222
00:11:01,894 --> 00:11:04,862
在主队列上，所以你可以随意在这里做IU的东西。

223
00:11:04,931 --> 00:11:07,531
如果你不想要，你不必派遣主队列

224
00:11:07,600 --> 00:11:10,534
到，所以它真的非常方便，

225
00:11:10,603 --> 00:11:12,570
做任何你想做的事情。而且你知道，

226
00:11:12,639 --> 00:11:15,106
你接受这个下降，这可能需要一点时间

227
00:11:15,175 --> 00:11:16,975
这个信息出现，但是当它出现时，

228
00:11:17,043 --> 00:11:20,344
你只需要在这里自动执行代码。

229
00:11:20,413 --> 00:11:22,347
你可以加载类的对象，

230
00:11:22,415 --> 00:11:24,582
同一滴水中有多个不同的课程。

231
00:11:24,651 --> 00:11:26,984
例如，我们将在演示中这样做。

232
00:11:27,053 --> 00:11:29,354
我们只会接受图像的拖拽，但是

233
00:11:29,422 --> 00:11:32,022
也有图片的网址，所以我们正在寻找

234
00:11:32,091 --> 00:11:35,059
两个数据在同一拖动中，一个URL和一个图像。和

235
00:11:35,128 --> 00:11:39,196
我们将做类和URL的loadObjects类

236
00:11:39,265 --> 00:11:42,700
的UI图像，完全合法。他们会，

237
00:11:42,769 --> 00:11:44,168
他们都会异步发生，

238
00:11:44,237 --> 00:11:45,770
你不知道哪一个会先完成。

239
00:11:45,838 --> 00:11:47,238
但是你必须这样写你的代码

240
00:11:47,307 --> 00:11:49,940
没关系。但这就是你需要做的一切，

241
00:11:50,009 --> 00:11:52,476
这就是通常在执行drop或者你所做的一切

242
00:11:52,545 --> 00:11:54,145
你真的不会做太多其他事情，

243
00:11:54,214 --> 00:11:58,983
它只是让数据开始走向你的方式。所以

244
00:11:59,052 --> 00:12:02,921
我做了拖放，超级简单实施。

245
00:12:02,989 --> 00:12:06,290
所以我们要做一个小小的演示，这样你就可以看到它

246
00:12:06,359 --> 00:12:09,861
在行动中，我将在实际的iPad和iPod上执行此操作

247
00:12:09,929 --> 00:12:13,097
我认为我们想出了一个在屏幕上显示的方法

248
00:12:13,166 --> 00:12:15,199
会让大家在这里开心。

249
00:12:15,268 --> 00:12:17,468
所以我要这样做的方式，

250
00:12:17,537 --> 00:12:21,739
是我要使用快速时间，所以这里是快速时间，

251
00:12:21,808 --> 00:12:26,911
它只是显示我的iPad。让我们在这里隐藏别人，所以

252
00:12:26,980 --> 00:12:30,514
这只是展示我的iPad，所以我们要这个应用程序

253
00:12:30,583 --> 00:12:34,151
建立，我们实际上会在过程中建立这个

254
00:12:34,220 --> 00:12:38,323
本周和下个星期。这就是所谓的表情符号艺术。和

255
00:12:38,391 --> 00:12:42,393
它可以让你建立一个漂亮的小艺术画，

256
00:12:42,462 --> 00:12:46,297
如果你想通过使用表情符号来想一想。

257
00:12:46,365 --> 00:12:48,900
所以我们喜欢这个班的表情符号，如你所知，

258
00:12:48,969 --> 00:12:51,536
这是表情符号101.那么这个东西是如何工作的？

259
00:12:51,604 --> 00:12:54,605
那么，它使用多任务处理，既可以拖放也可以拖放

260
00:12:54,674 --> 00:12:57,909
表情符号。并且还要去找一张图片作为背景。

261
00:12:57,978 --> 00:12:58,776
所以让我们看看它是如何工作的。

262
00:12:58,844 --> 00:13:01,980
所以如果你没有看到iPad的多任务UI，

263
00:13:02,048 --> 00:13:05,016
你只需从底部向上滑动即可。当你这样做时，

264
00:13:05,084 --> 00:13:07,951
你可以看到所有的应用程序，如果你一直刷卡，

265
00:13:08,020 --> 00:13:10,054
你也可以选择你最喜欢的应用程序。

266
00:13:10,123 --> 00:13:12,589
我只是选择了那边的那个，这就是这个

267
00:13:12,658 --> 00:13:16,927
一。如果你想要的话，你可以轻扫一下把它提起来。和

268
00:13:16,996 --> 00:13:18,195
你可以拿第二个应用程序，

269
00:13:18,264 --> 00:13:21,032
我会在这里做Safari。你可以把它拿起来

270
00:13:21,101 --> 00:13:25,069
拖动它，实际上它并排。所以，现在我已经

271
00:13:25,137 --> 00:13:27,472
得到了这两个应用程序，同时运行，

272
00:13:27,540 --> 00:13:29,473
并排。我让Google在右边。

273
00:13:29,542 --> 00:13:32,543
所以我要在这里使用Safari来找到一个很好的

274
00:13:32,612 --> 00:13:36,447
图片的背景图像。所以我会画画。

275
00:13:36,515 --> 00:13:39,817
让我们画一些很好的东西。如何农村卡通，

276
00:13:39,886 --> 00:13:42,553
我想到一些非常酷的图像，是的，

277
00:13:42,622 --> 00:13:46,123
这里有一些图像。我们将查看这些图像。所以

278
00:13:46,192 --> 00:13:47,825
他们来了。所以我可以滚动浏览

279
00:13:47,894 --> 00:13:51,596
在网上试图找到我喜欢的图片，

280
00:13:51,664 --> 00:13:52,997
我不太喜欢这些，

281
00:13:53,066 --> 00:13:57,902
让我们来看看。我们有什么？是的，也许就像是，

282
00:13:57,971 --> 00:14:02,440
这个怎么样在这里。所以我只是要按和

283
00:14:02,509 --> 00:14:04,508
保持，看看当我按住时会发生什么，

284
00:14:04,577 --> 00:14:06,411
你看我正在挑选这个，我可以拖放。

285
00:14:06,479 --> 00:14:11,415
当我在这里拖到我的视图中，然后放下它。

286
00:14:11,484 --> 00:14:16,153
呜呼，那图像出现在我的应用程序中。我们会做的

287
00:14:16,222 --> 00:14:19,123
今天的那一部分。这是我们今天要做的演示。

288
00:14:19,192 --> 00:14:22,926
现在，这个应用程序在这里还有一个表格视图

289
00:14:22,995 --> 00:14:23,794
与文件。

290
00:14:23,863 --> 00:14:26,330
所以我现在正在这里处理Untitled文档。我可以

291
00:14:26,399 --> 00:14:29,367
按加入新文件。或者回到我的

292
00:14:29,435 --> 00:14:34,204
文件在这里。我也可以从顶部拖动这些表情符号，

293
00:14:34,273 --> 00:14:36,807
下。所以我要在这里挑选蜜蜂。我很紧张

294
00:14:36,876 --> 00:14:39,377
保持。看，我正在做拖放。请注意，我可以

295
00:14:39,445 --> 00:14:43,347
用它来重新定位这个东西在顶部的蜜蜂。

296
00:14:43,416 --> 00:14:46,651
顶部的这个东西叫做集合视图。和

297
00:14:46,720 --> 00:14:49,587
那就是，所以我们会看到桌面视图和

298
00:14:49,655 --> 00:14:52,390
在这个应用程序，我们要建立收集视图。和

299
00:14:52,458 --> 00:14:57,327
我也可以拿起蜜蜂，把他拖到我的身边

300
00:14:57,396 --> 00:15:01,031
表情符艺术文件。我可以在这里得到几只蜜蜂。

301
00:15:01,100 --> 00:15:02,900
我可以选择蜜蜂和

302
00:15:02,969 --> 00:15:07,304
让他们变小，比方说，有一群蜜蜂在那里。

303
00:15:07,373 --> 00:15:12,410
也许有人在这里骑自行车。小一点，也许吧

304
00:15:12,478 --> 00:15:16,881
一棵苹果从这棵树上掉下来。例如，我们可以放大，

305
00:15:16,949 --> 00:15:19,884
真的很接近，也许这个苹果真的很小。

306
00:15:19,953 --> 00:15:23,354
它在这里并没有远离这棵树。

307
00:15:23,423 --> 00:15:24,889
我们可以放大。所以

308
00:15:24,958 --> 00:15:27,692
基本上，我们可以在这里建立一个不错的形象

309
00:15:27,760 --> 00:15:30,294
与我们的表情符号艺术编辑。所以这就是我们要做的

310
00:15:30,363 --> 00:15:32,563
建立。我们也可以做更多的表情符号。所以

311
00:15:32,631 --> 00:15:35,733
我们点击这里添加更多的表情符号，我可以调出表情符号，

312
00:15:35,801 --> 00:15:39,069
我不知道，把一些农场动物放在这里，否则我不能

313
00:15:39,138 --> 00:15:43,073
即使这里不是农场动物，对吧？添加这些和

314
00:15:43,142 --> 00:15:47,512
把这些放到我的行里，这样我就可以了

315
00:15:47,580 --> 00:15:50,915
我可以解决这个问题。所以这就是我们要建立的。

316
00:15:50,984 --> 00:15:52,817
非常酷的应用程序，很多件做它。

317
00:15:52,886 --> 00:15:55,385
我们要开始在我们的地方建造这个东西

318
00:15:55,454 --> 00:15:59,023
可以拿起一张图片放在这里，对吧？所以我们选择

319
00:15:59,092 --> 00:16:02,727
解决这个问题，我们甚至可以替换我们拥有的图像或

320
00:16:02,795 --> 00:16:07,097
随你。那么，我们该怎么做呢？好，如此

321
00:16:07,166 --> 00:16:12,035
我们将创建一个全新的Xcode项目。单一视图应用

322
00:16:12,104 --> 00:16:17,475
像往常一样，我们会称它为EmojiArt，好吧。

323
00:16:17,544 --> 00:16:21,779
当然，我们把所有的应用放在了这里。

324
00:16:21,847 --> 00:16:24,815
我打算在这里清理一点点

325
00:16:24,884 --> 00:16:27,785
按照我想要做的那样移动这些东西，

326
00:16:27,854 --> 00:16:29,753
把它放在支持文件中

327
00:16:29,822 --> 00:16:34,191
我们可以看到我们正在处理的文件。

328
00:16:34,260 --> 00:16:38,462
我要删除这个通用控制器，它是给予的

329
00:16:38,531 --> 00:16:41,431
我只是把它搬进垃圾箱。这是我的故事板

330
00:16:41,500 --> 00:16:46,937
在这里，当然我们需要我们自己的定制控制器和

331
00:16:47,006 --> 00:16:50,340
我们自己的自定义视图实际上是表情符号视图。

332
00:16:50,409 --> 00:16:52,343
所以我要创造那些蝙蝠，好吗？

333
00:16:52,412 --> 00:16:55,346
我要创建一个新的文件，这将是

334
00:16:55,415 --> 00:17:00,451
一个自定义的UIViewController，UIViewController和

335
00:17:00,519 --> 00:17:05,022
我将把它称为我的EmojiArtViewController。

336
00:17:05,090 --> 00:17:07,024
这将是那个主要的视图控制器

337
00:17:07,025 --> 00:17:08,959
在那里

338
00:17:09,028 --> 00:17:11,829
所有我们只是在谈论的东西

339
00:17:11,897 --> 00:17:14,999
在那里。我会去我的故事板，并确保

340
00:17:15,067 --> 00:17:17,668
我记得把这个东西的身份设置为那个，所以

341
00:17:17,737 --> 00:17:19,637
我们会去身份检查员和

342
00:17:19,706 --> 00:17:23,274
使其成为EmojiArtView控制器。在那里。

343
00:17:23,343 --> 00:17:26,510
我会在iPad上做所有这些事情，因为这将是

344
00:17:26,579 --> 00:17:30,280
只有iPad的应用程序，对吧？它依靠拖放，所以

345
00:17:30,349 --> 00:17:32,850
这是一款仅限iPad的应用程序。其实，

346
00:17:32,919 --> 00:17:35,119
让我们看看我们是否能够使它成为风景。我想会的

347
00:17:35,188 --> 00:17:39,089
适合一点，因为我们在这里做东西。所以

348
00:17:39,158 --> 00:17:44,295
这里是我们的好UI。现在我们需要一个自定义用户界面视图，

349
00:17:44,363 --> 00:17:46,597
除了所有这些拖放，然后查看和

350
00:17:46,665 --> 00:17:50,701
所有的东西。所以让我们去做那件事。新文件再次，

351
00:17:50,769 --> 00:17:54,472
这一个将是UIView和自定义的子类

352
00:17:54,540 --> 00:18:03,480
我们将其称为EmojiArtView。这是我们的EmojiArtView和

353
00:18:03,549 --> 00:18:06,150
我们要去吧，去实施这个。

354
00:18:06,219 --> 00:18:08,519
我要从做背景图片开始。

355
00:18:08,588 --> 00:18:11,722
所以我会在这里有一个叫做背景的变种，

356
00:18:11,791 --> 00:18:15,159
groundImage，这将是一个UIImage。

357
00:18:15,228 --> 00:18:16,360
每当你设置它，

358
00:18:16,428 --> 00:18:19,530
我要确保调用给需要显示。

359
00:18:21,133 --> 00:18:23,533
因为我需要调用给我的dra_rect我会用这个

360
00:18:23,602 --> 00:18:26,704
背景图像在dra_rect中绘制我的背景。

361
00:18:26,772 --> 00:18:30,975
所以这里是dra_rect，我只是想说backgroundImage，

362
00:18:31,044 --> 00:18:35,412
请把你自己放在我的范围内。所以

363
00:18:35,481 --> 00:18:40,317
世界上最简单的绘制，在这里绘制UI视图。

364
00:18:40,386 --> 00:18:41,718
这就是现在要做的。

365
00:18:41,787 --> 00:18:43,754
最终，它会做更多。它会吸引所有的人

366
00:18:43,822 --> 00:18:45,856
当然我会放在这里的小emojis。但

367
00:18:45,925 --> 00:18:50,861
现在，它只是一个背景图像。让我们继续前进

368
00:18:50,930 --> 00:18:53,397
在我们的故事板上建立我们的用户界面。

369
00:18:53,466 --> 00:18:56,166
我真的会做点什么，你会明白我为什么

370
00:18:56,235 --> 00:18:59,637
会在稍后做。但我会创建一个通用的用户界面

371
00:18:59,705 --> 00:19:04,375
查看这里是我的拖放区，好吧，UIview。

372
00:19:04,443 --> 00:19:07,277
它在哪里？开始了。这是通用UIV。

373
00:19:07,346 --> 00:19:10,147
我甚至不会创建一个子类，提交或任何东西。

374
00:19:10,215 --> 00:19:13,317
所有它会做保险丝只有一个责任

375
00:19:13,385 --> 00:19:16,320
这是接受图像的下降和

376
00:19:16,389 --> 00:19:19,323
设置图像。并添加我刚刚创建的EmojiArtView。

377
00:19:19,391 --> 00:19:24,662
所以我们和这个人一起上去。一直到边缘，

378
00:19:24,730 --> 00:19:26,296
实际上我们只是使用这个引脚来做到这一点。

379
00:19:26,365 --> 00:19:29,733
我们会在这里继续说，连接所有的边缘。

380
00:19:29,802 --> 00:19:31,234
我最喜欢的约束事物，

381
00:19:31,303 --> 00:19:32,503
我会把所有的零都放在这里和

382
00:19:32,571 --> 00:19:35,505
说增加限制。让我们仔细检查我们的约束，

383
00:19:35,574 --> 00:19:36,540
我们总是想要这样做和

384
00:19:36,608 --> 00:19:39,109
确保他们做对了。 Bloop，它看起来不错

385
00:19:39,178 --> 00:19:42,413
正确，并把所有的边缘安全区域看起来不错。

386
00:19:42,482 --> 00:19:44,514
我们可以清楚地看到这个视图，

387
00:19:44,583 --> 00:19:47,784
我会给它一点背景色，不是很多，

388
00:19:47,853 --> 00:19:50,955
而不是白色，我会在这里使它变成一块非常浅的灰色，

389
00:19:51,024 --> 00:19:52,556
是的，那样。你们都可以吗？

390
00:19:52,625 --> 00:19:55,493
是啊。你可以看到。它只是淡淡的灰色，

391
00:19:55,561 --> 00:19:59,329
所以我们可以确定这是我们的拖放区视图。和

392
00:19:59,398 --> 00:20:01,865
那么我会把它放在EmojiArtView里面。

393
00:20:01,934 --> 00:20:04,368
所以让我们去做，我们知道如何添加自定义视图，

394
00:20:04,437 --> 00:20:06,904
是添加另一个通用视图。但是这一个，

395
00:20:06,972 --> 00:20:09,339
我们要去我们的身份检查员那里

396
00:20:09,408 --> 00:20:12,443
更改为EmojiArtView。这是我们如何做到的

397
00:20:12,512 --> 00:20:16,446
一个EmojiArtView，而不仅仅是一个通用的UIView。

398
00:20:16,515 --> 00:20:20,284
这一个，我也会用我最喜欢的小

399
00:20:20,352 --> 00:20:23,420
约束制造者。哔哔声。粉碎它。所以它现在堵塞了

400
00:20:23,489 --> 00:20:25,389
报复。所以现在我们添加了emoji视图和

401
00:20:25,458 --> 00:20:28,159
让我们继续，并将这些东西放在outlets。

402
00:20:28,227 --> 00:20:31,562
所以我会去这里并创建outlets

403
00:20:31,631 --> 00:20:35,800
拖放区和表情符号视图。所以这很难

404
00:20:35,868 --> 00:20:39,136
让这两件事情作为每一件事情的权利

405
00:20:39,205 --> 00:20:41,605
其他。我们再次使用文档大纲。

406
00:20:41,674 --> 00:20:44,608
在线文档对于获取应用程序来说非常棒

407
00:20:44,677 --> 00:20:46,510
很难得到的东西。还有另一种方式，

408
00:20:46,579 --> 00:20:49,713
我会提醒你Control-Shift并点击，

409
00:20:49,782 --> 00:20:52,249
Control-Shift点击会显示一个菜单和

410
00:20:52,318 --> 00:20:55,252
你甚至可以选择鼠标下方的东西

411
00:20:55,321 --> 00:20:58,288
如果他们在彼此内部，对吗？但我倾向于

412
00:20:58,357 --> 00:21:01,192
使用文档大纲，因为它是更清晰的

413
00:21:01,260 --> 00:21:06,096
在这里做。因此，这个顶级视图就是我们的放置区域

414
00:21:06,165 --> 00:21:08,899
我将通过简单的拖拽来创建一个outlet

415
00:21:08,968 --> 00:21:12,002
将文档大纲导入我们的视图控制器，

416
00:21:12,071 --> 00:21:14,671
事实上，在我这样做之前，让我们来看看这里

417
00:21:14,740 --> 00:21:17,641
在这里清除此代码。所以

418
00:21:17,710 --> 00:21:21,078
它是一个更清晰，哎呀不清理这么多。

419
00:21:21,147 --> 00:21:24,648
这怎么样？所以我通常这样做，但我

420
00:21:24,717 --> 00:21:29,086
没有在这里做。但是，这是我的EmojiArtView控制器，

421
00:21:29,155 --> 00:21:32,056
在这里你认识到了吗？所以让我们继续创建

422
00:21:32,124 --> 00:21:35,859
跌落，落区出口。我会调用给这个放置区域

423
00:21:35,928 --> 00:21:38,496
再次，这只是我要去的通用UI视图

424
00:21:38,564 --> 00:21:41,765
注册该交互与。然后让我们也

425
00:21:41,834 --> 00:21:44,802
为我们的EmojiArtView创建出口，就是如此

426
00:21:44,871 --> 00:21:47,104
我可以在需要时设置其背景图像。

427
00:21:47,172 --> 00:21:50,774
所以，EmojiArtView。现在，你可能会问这个问题，

428
00:21:50,843 --> 00:21:53,977
为什么我不让EmojiArtView成为

429
00:21:54,046 --> 00:21:57,248
拖放区？为什么我有这个单独的，

430
00:21:57,316 --> 00:22:00,650
拖放区的东西？那是因为两个原因。一。

431
00:22:00,719 --> 00:22:04,121
我需要跟踪控制器层面的情况

432
00:22:04,189 --> 00:22:06,991
投入。因为我实际上会记住的URL

433
00:22:07,059 --> 00:22:09,993
什么东西掉进去了。还有所有的跟踪

434
00:22:10,062 --> 00:22:11,861
我们下周要做的文件，

435
00:22:11,930 --> 00:22:13,196
必须在控制器级别发生。

436
00:22:13,265 --> 00:22:16,099
我们不希望这样做。其次，有时候

437
00:22:16,168 --> 00:22:19,369
我最终会将这个观点放在滚动视图中

438
00:22:19,438 --> 00:22:22,606
可能很小。它可能不会填满空间了。

439
00:22:22,675 --> 00:22:24,775
所以我希望dropZone尽可能大，

440
00:22:24,843 --> 00:22:28,279
所以当我放入东西时，繁荣，它总是有效。所以

441
00:22:28,347 --> 00:22:29,346
这就是为什么我将它们分开的原因。

442
00:22:29,415 --> 00:22:31,548
但这并不是什么大事，

443
00:22:31,617 --> 00:22:34,217
这并不是真正需要这么做的。

444
00:22:34,286 --> 00:22:36,420
我不想让你觉得有一些特别的原因，

445
00:22:36,488 --> 00:22:39,957
就像你必须让你的dropZone成为一个单独的，

446
00:22:40,026 --> 00:22:43,360
通用视图。你不需要。好，如此

447
00:22:43,429 --> 00:22:46,530
就在蝙蝠身上，你可能会为我设置分区。

448
00:22:46,599 --> 00:22:48,965
我将添加该交互。

449
00:22:49,034 --> 00:22:51,335
所以我只是说dropZone，糟糕！

450
00:22:51,403 --> 00:22:54,738
dropZone.addInteraction（UIDroPInteraction），

451
00:22:54,807 --> 00:22:57,808
因为我正试图接受这一点

452
00:22:57,877 --> 00:23:00,811
所有我们必须做的事情在这里提供

453
00:23:00,880 --> 00:23:03,413
是一个代表。而且，我要让代表成为代表

454
00:23:03,482 --> 00:23:06,349
我。所以控制器是要处理的人

455
00:23:06,418 --> 00:23:09,253
放下委托方法，当然，我们必须这样做

456
00:23:09,321 --> 00:23:13,157
说我们是一个UIDropInteractionDelegate，

457
00:23:13,226 --> 00:23:15,092
为了工作。好吧，

458
00:23:15,160 --> 00:23:17,294
现在所有的方法都是Objective-C方法，

459
00:23:17,363 --> 00:23:19,964
他们都是可选的。所以我执行这个

460
00:23:20,032 --> 00:23:21,798
但当然，我实际上没有做任何事情，

461
00:23:21,867 --> 00:23:24,401
我有点惊讶，他们至少没有做到

462
00:23:24,470 --> 00:23:28,472
处理是必需的，但他们已经决定不这样做。

463
00:23:28,541 --> 00:23:32,075
所以这就是我们需要做的，尽管如此

464
00:23:32,144 --> 00:23:34,844
是做canHandle然后当会话更新和

465
00:23:34,913 --> 00:23:37,014
表演下降，我们必须做这三件事情来做到这一点

466
00:23:37,082 --> 00:23:42,552
工作。所以让我们来做。我们拿到了canHandle，就是这样

467
00:23:42,621 --> 00:23:47,024
一，dropInteraction canHandle会话。所以在这里，

468
00:23:47,092 --> 00:23:51,862
我只想要具有图像和URL的拖动

469
00:23:51,930 --> 00:23:56,266
该图像。所以我会说，只有通过返回，如果

470
00:23:56,335 --> 00:24:01,238
session.canLoadObjects（ofCl- ass- NSURL。

471
00:24:01,306 --> 00:24:04,408
注意NSURL，这整个事情是Objective-C

472
00:24:04,477 --> 00:24:08,011
兼容，而在Swift中称为URL，它是一个结构体。

473
00:24:08,080 --> 00:24:11,081
而在Objective-C中，它是NSURL，

474
00:24:11,150 --> 00:24:13,917
这是一堂课。现在，这两件事是自动的

475
00:24:13,986 --> 00:24:17,187
彼此桥接，所以你可以随时添加一个

476
00:24:17,256 --> 00:24:19,890
另一个。但在这里你只是，这是少数几个地方之一

477
00:24:19,959 --> 00:24:23,627
在Objective-C中你必须使用Objective-C的东西。

478
00:24:23,696 --> 00:24:25,563
那是因为我们在这里指定了这个类，

479
00:24:25,631 --> 00:24:28,198
实际的类。我们没有采取

480
00:24:28,267 --> 00:24:31,402
Swift可以找出你想要的东西。

481
00:24:31,470 --> 00:24:34,805
这是实际的NSURL类或在这里讨论。

482
00:24:34,873 --> 00:24:38,742
我们想要这个会话，说它可以加载对象

483
00:24:38,810 --> 00:24:43,480
ofClass：UIImage。所以我想要URL和

484
00:24:43,549 --> 00:24:45,582
图片。或者我对拖动不感兴趣。

485
00:24:45,651 --> 00:24:47,751
所以，如果你现在就把一个属性字符串拖到我身上。

486
00:24:47,820 --> 00:24:50,521
我不在乎。事实上，我只是感兴趣

487
00:24:50,589 --> 00:24:53,189
如果你可以拖动既是图像又是图像的东西

488
00:24:53,258 --> 00:24:56,960
该图片的网址。也许这个网址。

489
00:24:57,029 --> 00:24:59,262
也许你会拖动一些图像和URL和

490
00:24:59,331 --> 00:25:02,299
它不是该图片的网址，但我们会找到。

491
00:25:02,368 --> 00:25:06,103
你会很快看到这里。好吧，

492
00:25:06,172 --> 00:25:08,738
所以这就是说我们可以处理这样的拖动。

493
00:25:08,807 --> 00:25:10,740
所以这基本上只是说，如果你不是

494
00:25:10,809 --> 00:25:13,777
那种阻力甚至不会跟我说话。所以，如果它

495
00:25:13,846 --> 00:25:15,980
那是一种阻力，那么它会和我们和我们说话

496
00:25:16,048 --> 00:25:19,816
它会执行此更新会话。好的，

497
00:25:19,885 --> 00:25:22,986
这一个就在这里。会话确实更新了，你看到了吗？和

498
00:25:23,054 --> 00:25:26,657
我们所需要做的就是回报我们的提案。和

499
00:25:26,725 --> 00:25:29,593
所以我很高兴有这样的东西掉到了哪里

500
00:25:29,661 --> 00:25:32,095
在我的小灰色地带里面。

501
00:25:32,164 --> 00:25:34,398
所以我会回来，哎呀。不在这里，

502
00:25:34,467 --> 00:25:39,336
我认为在那里，返回UIDropProposal和

503
00:25:39,405 --> 00:25:42,205
这里的承包商是经营，

504
00:25:42,274 --> 00:25:46,610
操作。广告我将要返回的操作是.copy

505
00:25:46,679 --> 00:25:49,813
因为这总是被拖出我的应用程序外

506
00:25:49,882 --> 00:25:51,882
它总是会应付。而且

507
00:25:51,951 --> 00:25:53,350
我没有理由取消它。

508
00:25:53,418 --> 00:25:57,287
我总是乐意接受一个新的形象。好的，现在如果

509
00:25:57,356 --> 00:26:02,259
有人让我们走下去，我会得到表演下降。所以

510
00:26:02,327 --> 00:26:04,961
这里是执行下降一个。在这里就像我说的一切

511
00:26:05,030 --> 00:26:07,264
我要做的是去告诉拖动和

512
00:26:07,332 --> 00:26:10,033
下降系统，让那个人知道我想要的数据和

513
00:26:10,102 --> 00:26:13,336
给它，然后调用这个闭包。所以我会去的

514
00:26:13,405 --> 00:26:18,308
classes.loadobjectsofclass和

515
00:26:18,377 --> 00:26:21,411
我想要NSURL的。和

516
00:26:21,479 --> 00:26:26,149
这里是完成处理程序，它给了我NSURLs，

517
00:26:26,218 --> 00:26:28,952
好吧？所以这是完整的处理程序意味着它

518
00:26:29,021 --> 00:26:30,954
当它完成时将会被调用

519
00:26:31,022 --> 00:26:32,289
获取数据。和

520
00:26:32,357 --> 00:26:36,893
那么我也想加载UI图像和对象

521
00:26:36,962 --> 00:26:41,598
给我的图像。现在，我们将如何处理这件事

522
00:26:41,667 --> 00:26:45,469
此图片上的网址？最终我需要坚持这个URL

523
00:26:45,538 --> 00:26:47,671
因为我要创建一个文档

524
00:26:47,740 --> 00:26:48,906
一个表情符艺术文件和

525
00:26:48,974 --> 00:26:52,475
它的背景是一个URL。因为我不想

526
00:26:52,544 --> 00:26:55,245
用我所有的文件存储这个巨大的图像。我正要去

527
00:26:55,314 --> 00:26:56,947
存储网址，并随时显示文档。

528
00:26:57,016 --> 00:27:00,050
我将从网络上获取图像。

529
00:27:00,119 --> 00:27:02,485
现在如果没有网络，我的文档将无法工作。但是，呃，

530
00:27:02,554 --> 00:27:05,355
这是一个设计决定。那么我该怎么做呢？

531
00:27:05,424 --> 00:27:08,424
好吧，让这里变得更快一点。

532
00:27:08,493 --> 00:27:11,928
我实际上创建了一些实用程序代码

533
00:27:11,997 --> 00:27:13,964
你当然可以自由地看，

534
00:27:14,033 --> 00:27:17,500
在你的休闲。我们会快速浏览一下。和这个

535
00:27:17,569 --> 00:27:21,671
此处的实用程序代码有一个名为ImageFetcher的类。和

536
00:27:21,740 --> 00:27:25,875
所有的ImageFetcher都会花费一个URL，去抓取

537
00:27:25,944 --> 00:27:29,479
图像，确保它是一个图像。当它确定它是

538
00:27:29,548 --> 00:27:32,049
它有一个图像，它用你得到的处理程序回叫你

539
00:27:32,117 --> 00:27:34,618
到它。所以这只是一种同步检查和

540
00:27:34,687 --> 00:27:36,853
确保这实际上是一个图像。和

541
00:27:36,922 --> 00:27:40,123
它有这个其他很酷的功能，它有一个备份图像

542
00:27:40,192 --> 00:27:41,358
所以如果我出去和

543
00:27:41,426 --> 00:27:44,294
抓取网址并将其取回，这不是网址

544
00:27:44,363 --> 00:27:46,396
一个图像。然后它使用备份映像和

545
00:27:46,464 --> 00:27:49,466
在文件系统中为该URL和本地URL创建一个URL

546
00:27:49,535 --> 00:27:51,601
然后给你那个URL。所以这是一种备份和

547
00:27:51,670 --> 00:27:54,338
这正是我想要的。因为我想去取

548
00:27:54,406 --> 00:27:57,541
像乡村那样的形象。如果我能得到它。

549
00:27:57,609 --> 00:28:00,310
我将使用该URL。但如果我不能，我想要那个图像

550
00:28:00,379 --> 00:28:03,847
被拖走了。我会为它创建一个本地URL。

551
00:28:03,916 --> 00:28:05,716
这就是所有imageFetcher所做的。

552
00:28:05,784 --> 00:28:08,652
并且使用它是非常容易的。我只是要创造

553
00:28:08,721 --> 00:28:13,256
一个var imageFetcher这将是一个类型图像提取器。

554
00:28:13,325 --> 00:28:16,459
我会让它成为一个隐含的解包选项。

555
00:28:16,528 --> 00:28:20,897
在此期间，它确实只会活跃起来

556
00:28:20,966 --> 00:28:23,633
我们正在等待这些事情回来，所以我要走了

557
00:28:23,702 --> 00:28:27,371
创造它。图像获取器等于图像获取器。

558
00:28:27,439 --> 00:28:31,275
它除了关闭回调外不需要任何参数。

559
00:28:31,343 --> 00:28:34,778
这个闭包会回调URL。它提取了吗？

560
00:28:34,847 --> 00:28:37,947
和要使用的图像，或者它提取的实际图像或

561
00:28:38,016 --> 00:28:41,384
如果您提供了一个备用图片。和

562
00:28:41,453 --> 00:28:44,554
在这里面，我可以做任何我想要的URL和图像，

563
00:28:44,623 --> 00:28:48,492
但我不在这里的主队列。这家伙，

564
00:28:48,560 --> 00:28:50,360
当他取回那东西后回来时，

565
00:28:50,428 --> 00:28:54,298
它不在主队列中，所以我必须调度队列。

566
00:28:55,934 --> 00:29:00,136
使用Dispatch async返回主队列。现在，

567
00:29:00,205 --> 00:29:06,476
我可以，例如设置我的EmojiArtView.backgroundImage

568
00:29:06,545 --> 00:29:09,146
到那个图像。所以，我还没有真正看过URL，

569
00:29:09,215 --> 00:29:10,647
因为我不是真的保存文件。

570
00:29:10,716 --> 00:29:11,881
所以，我只是无视这一点，

571
00:29:11,950 --> 00:29:13,182
我只是设置backgroundImage

572
00:29:13,251 --> 00:29:16,686
到我从该网址获取的图片。好吧。

573
00:29:16,755 --> 00:29:19,756
那我该如何取回呢？那么在这里加载对象，

574
00:29:19,825 --> 00:29:23,827
我只是说图像，self.imageFetcher，

575
00:29:23,895 --> 00:29:27,096
获取该网址。好的，这就是imageFetcher所做的，

576
00:29:27,165 --> 00:29:30,366
它获取该URL，然后我在这里对imageFetcher说，

577
00:29:30,435 --> 00:29:35,238
用作备份这张图片。现在这个通知

578
00:29:35,307 --> 00:29:39,810
是NSURLs。所以拖动可以记住多个URL？

579
00:29:39,878 --> 00:29:42,412
我可以开始拖动，然后点击更多的东西和

580
00:29:42,481 --> 00:29:44,615
我拖着一大堆东西。所以

581
00:29:44,683 --> 00:29:46,617
我如何获得我想要的网址？那么，我只是想

582
00:29:46,685 --> 00:29:48,385
抓住第一个挂起来说，

583
00:29:48,454 --> 00:29:54,891
如果我可以让url = nsurls.first作为URL。

584
00:29:54,960 --> 00:29:58,695
因为我想要那个Swift URL，我会去取它。

585
00:29:58,764 --> 00:30:02,733
而且，如果我可以让图像与图像相等，那么在这里也是如此

586
00:30:02,801 --> 00:30:07,670
我得到了。作为UI图像的第一个，然后我会去做。

587
00:30:07,739 --> 00:30:11,541
记住我必须这样做，不仅仅是因为

588
00:30:11,610 --> 00:30:14,678
这是NSUrl，我想要URL。我知道你说，

589
00:30:14,747 --> 00:30:17,147
即使我们必须在这里做到这一点，当这是我们的UIImage，

590
00:30:17,216 --> 00:30:21,852
因为这个数组的类型是NS项目提供者。

591
00:30:21,920 --> 00:30:24,821
对？所以我们必须将它们转换为实际的指挥官

592
00:30:24,890 --> 00:30:27,624
提供者，我们期待在这里。当然，因为

593
00:30:27,693 --> 00:30:30,593
有些理由认为它不能成为问号，所以

594
00:30:30,662 --> 00:30:32,562
它会崩溃，在这里什么都不做。

595
00:30:32,630 --> 00:30:34,163
这是关于阻力的一件事

596
00:30:34,232 --> 00:30:37,501
拖放是，如果你拖放，你无法获得数据或

597
00:30:37,569 --> 00:30:40,303
不管什么都没有发生。对于用户来说，这只是

598
00:30:40,372 --> 00:30:42,639
一个经验，我放弃了这个名字，它不起作用。

599
00:30:42,708 --> 00:30:44,641
也许他们要么再试一次，要么尝试拖动和

600
00:30:44,710 --> 00:30:47,911
放下别的东西。所以它是一种安静的类型

601
00:30:47,980 --> 00:30:50,780
不是一个嘈杂的系统，它提出了很多警报。

602
00:30:50,849 --> 00:30:52,148
掉落失败所有这一切和

603
00:30:52,217 --> 00:30:53,583
这对用户来说非常令人不安，

604
00:30:53,652 --> 00:30:59,155
用户将很快继续前进，如果下降不起作用。所以那是

605
00:30:59,224 --> 00:31:01,658
它。这就是我们需要在这里完成这个拖动和

606
00:31:01,727 --> 00:31:05,295
下载作品，所以让我们在iPad上运行这个版本

607
00:31:05,364 --> 00:31:10,901
在这里。所以，让我提出这个问题，点击时间。

608
00:31:10,969 --> 00:31:15,372
所以这里是我们的iPad。这里是。但没有太多的用户界面

609
00:31:15,441 --> 00:31:18,975
就是这个。这个大的白色区域是我的表情艺术视图。

610
00:31:19,044 --> 00:31:22,211
我将要做和以前一样的事情。走到这里，

611
00:31:22,280 --> 00:31:27,350
抓住Safari浏览器，把它放在这里让他们在屏幕上。

612
00:31:27,419 --> 00:31:28,885
这次让我们看看别的东西，

613
00:31:28,954 --> 00:31:32,321
让我们看看斯坦福的图像吧。

614
00:31:32,390 --> 00:31:35,926
看看我们能在这里找到什么。我在那里看到很多图片。

615
00:31:35,995 --> 00:31:37,560
让我们抓住其中一些，看看我们发现了什么。

616
00:31:37,629 --> 00:31:39,428
这个怎么样在这里。我要拖这个。

617
00:31:39,497 --> 00:31:42,465
注意绿色加号？你看到绿色加号？这成了，

618
00:31:42,534 --> 00:31:45,268
因为我们返回了该UI拖放操作副本。

619
00:31:45,336 --> 00:31:49,072
这就是绿色加上的含义。我放手，呜呼。

620
00:31:49,141 --> 00:31:51,307
放下它，它显示出来。让我们尝试另一个。

621
00:31:51,376 --> 00:31:55,511
让我们在这里试试这个。这个更大。看看如何

622
00:31:55,580 --> 00:31:59,382
它需要在这里加载。它提取这个URL，

623
00:31:59,451 --> 00:32:03,820
获取数据，异步，最后一个在那里，但

624
00:32:03,888 --> 00:32:08,191
它，数据的大小将决定它加载多长时间。所以

625
00:32:08,260 --> 00:32:10,593
那是一个低分辨率。你可以看到它非常有颗粒感，

626
00:32:10,662 --> 00:32:12,128
另一个是更高的分辨率如此

627
00:32:12,197 --> 00:32:14,931
让我们看看我们是否能找到真正高分辨率的，

628
00:32:15,000 --> 00:32:16,750
在斯坦福展示这些演示的问题是千兆位

629
00:32:16,751 --> 00:32:18,501
现在和我在一起。

630
00:32:18,570 --> 00:32:20,036
一切都非常快，但如果你在任何其他方面做到这一点

631
00:32:20,037 --> 00:32:21,503
以太网和

632
00:32:21,573 --> 00:32:23,907
网络，这些事情需要一点时间。

633
00:32:23,975 --> 00:32:25,775
现在，如果我们真的这样做了，

634
00:32:25,844 --> 00:32:29,212
我们可能会把纺车放在那里。因为我们是我们，

635
00:32:29,280 --> 00:32:32,849
只要我们得到那个下降，执行下降，我们知道我们已经

636
00:32:32,918 --> 00:32:34,984
去拿那个。所以把纺车放在那里

637
00:32:35,053 --> 00:32:37,654
看看它发生之前会发生什么。

638
00:32:37,723 --> 00:32:40,656
这让我们的用户更好地了解发生了什么。

639
00:32:40,725 --> 00:32:44,861
很酷吗？所以这是构建我们的应用程序的第一步。

640
00:32:44,930 --> 00:32:46,996
我们正在取得不少进展。接下来的事

641
00:32:47,065 --> 00:32:50,066
我们想要做的是左侧的表格视图和集合

642
00:32:50,134 --> 00:32:53,302
顶部的视图。所以我要回到幻灯片和

643
00:32:53,371 --> 00:32:55,472
与您讨论这些话题。

644
00:32:59,578 --> 00:33:02,012
我们来看看幻灯片和

645
00:33:02,080 --> 00:33:06,783
谈论这些。好的，表格视图和

646
00:33:06,851 --> 00:33:09,585
收集意见。那么什么是表格视图和

647
00:33:09,654 --> 00:33:12,255
集合视图？你已经在IOS上看到过这些东西。

648
00:33:12,324 --> 00:33:14,457
你真的知道他们已经是什么了。

649
00:33:14,526 --> 00:33:17,927
他们是用于的UIScrollView子类

650
00:33:17,996 --> 00:33:21,130
提供对无限量的无限制访问

651
00:33:21,199 --> 00:33:24,167
信息。它显示它们，它们分别显示它们

652
00:33:24,235 --> 00:33:25,469
略有不同的方式。一张桌子

653
00:33:25,537 --> 00:33:28,638
视图将信息显示为一个大长列表。

654
00:33:28,706 --> 00:33:30,774
该列表可能会分为几个部分，但是

655
00:33:30,842 --> 00:33:32,041
这是一个很长的名单。

656
00:33:32,110 --> 00:33:35,278
集合视图，以可配置的方式呈现它，

657
00:33:35,347 --> 00:33:39,649
几乎任何二维的方式。现在默认情况下，方式

658
00:33:39,718 --> 00:33:43,086
它表示它被称为流布局。和流量布局，

659
00:33:43,155 --> 00:33:46,156
你想想这就像文字，对吧？

660
00:33:46,224 --> 00:33:48,525
如果你有文字，它会从左到右流过

661
00:33:48,594 --> 00:33:50,760
当空间用完时，它会进入下一行。

662
00:33:50,829 --> 00:33:53,130
然后它流过更多和下一行。

663
00:33:53,198 --> 00:33:56,232
这就是默认情况下的集合视图。

664
00:33:56,301 --> 00:33:58,201
你给它一堆布置的项目，

665
00:33:58,269 --> 00:34:01,270
他们可能会有不同的大小，无论如何，它会

666
00:34:01,339 --> 00:34:04,374
开始铺设他们，然后包装到下一行。和

667
00:34:04,443 --> 00:34:07,577
在其中，它甚至可以证明，你知道文本是如何合理的

668
00:34:07,646 --> 00:34:10,714
如果你愿意，双方都会这样做。

669
00:34:10,782 --> 00:34:11,848
这就是流程布局的工作原理。

670
00:34:11,917 --> 00:34:14,684
现在，我认为收藏视图是任意的，就像人们一样

671
00:34:14,752 --> 00:34:17,453
书面布局收集视图他们就像一个粉丝

672
00:34:17,522 --> 00:34:20,423
卡，好吧。你拿一张卡，这是没有问题的，

673
00:34:20,492 --> 00:34:23,393
实际编写这样的布局很容易。

674
00:34:23,462 --> 00:34:25,028
但我不会谈论这些

675
00:34:25,096 --> 00:34:26,095
自定义布局写作，

676
00:34:26,164 --> 00:34:28,364
我们只会做默认的流布局。

677
00:34:28,433 --> 00:34:30,666
你不必做任何事情来打开布局，

678
00:34:30,735 --> 00:34:33,036
这只是集合视图的布局。

679
00:34:33,104 --> 00:34:34,170
这就是我要关注的一切。

680
00:34:34,239 --> 00:34:36,339
但我确实希望你知道你有办法

681
00:34:36,408 --> 00:34:39,676
编写自己的布局，这不是流布局。并有你的

682
00:34:39,745 --> 00:34:42,479
收集视图以其他方式呈现事物。所以

683
00:34:42,547 --> 00:34:44,780
这就是表视图和集合视图。他们是，

684
00:34:44,849 --> 00:34:46,649
我会一起谈论他们，因为

685
00:34:46,718 --> 00:34:48,050
他们的API，换句话说，

686
00:34:48,119 --> 00:34:51,187
你使用的编程接口非常相似，

687
00:34:51,256 --> 00:34:55,458
几乎相同。真的唯一的区别就是我们

688
00:34:55,527 --> 00:34:59,095
说话的行与正在流动的任意物品或

689
00:34:59,164 --> 00:35:03,232
否则放在2D中，好的。所以UITableView，只是在

690
00:35:03,301 --> 00:35:05,334
你不知道我在说什么。

691
00:35:05,403 --> 00:35:08,137
我知道你已经看到了，这只是一个很长的名单

692
00:35:08,206 --> 00:35:10,072
这个。该列表可以非常简单。

693
00:35:10,141 --> 00:35:12,842
我在这里有一份食物清单，它只是列出来的。要么

694
00:35:12,911 --> 00:35:15,478
一个清单可以分为几个部分。所以

695
00:35:15,547 --> 00:35:18,047
我有垃圾食品，水果，甜点，蔬菜。

696
00:35:18,116 --> 00:35:20,583
我将列表分成几部分。所以

697
00:35:20,652 --> 00:35:23,886
这些是表格视图中的部分，并且可以显示一些内容

698
00:35:23,955 --> 00:35:27,023
一些简单的辅助信息类免费，

699
00:35:27,092 --> 00:35:29,693
就像这里我已经有了一些食物的形象。

700
00:35:29,761 --> 00:35:32,662
你可能几乎看不到。是的，你可以在那里看到它。

701
00:35:32,731 --> 00:35:35,531
而且，它有四种不同的方式，

702
00:35:35,600 --> 00:35:38,200
呈现简单的信息。一个是这个，

703
00:35:38,269 --> 00:35:41,805
所谓的字幕风格所在的辅助信息，

704
00:35:41,873 --> 00:35:44,106
它出现在主要信息的正下方。

705
00:35:44,175 --> 00:35:45,741
这是左边的细节，

706
00:35:45,810 --> 00:35:48,411
一切都在左边，这里的细节在哪里

707
00:35:48,480 --> 00:35:50,013
辅助信息在右侧。和

708
00:35:50,081 --> 00:35:52,982
在左边的主要东西，或者有基本的风格在哪里

709
00:35:53,051 --> 00:35:54,951
你没有看到辅助信息。

710
00:35:55,019 --> 00:35:57,153
所以这四种样式都是内置于表格视图中的，

711
00:35:57,222 --> 00:36:00,489
你可以免费得到他们，但它也有一个

712
00:36:00,558 --> 00:36:04,160
强大的风格称为定制风格。还有一种自定义风格

713
00:36:04,229 --> 00:36:08,064
看，这些行可以是任何你想要的。其实这个UI，

714
00:36:08,133 --> 00:36:11,034
您只需使用自动布局将其构建到故事板中即可

715
00:36:11,102 --> 00:36:14,970
和所有这些东西来建立你想要的任何友好的用户界面。

716
00:36:15,039 --> 00:36:19,041
现在，收集视图，所有单元格都是自定义的。采集

717
00:36:19,110 --> 00:36:22,778
视图没有这四个简单的视图。好吧。，

718
00:36:22,847 --> 00:36:25,248
所以这是什么，这些东西可以看，

719
00:36:25,316 --> 00:36:29,051
表格视图的外观。所以收集视图，抱歉，并且，

720
00:36:29,120 --> 00:36:32,889
在表格视图中，行可以分组在一起

721
00:36:32,957 --> 00:36:35,758
成为部分。他们也可以，部分可以

722
00:36:35,827 --> 00:36:38,561
看起来有点像分组。你可能

723
00:36:38,630 --> 00:36:42,365
注意这个UI。它来自iOS中的设置应用程序。我们差不多

724
00:36:42,433 --> 00:36:46,035
数据时总是只使用这种组风格

725
00:36:46,103 --> 00:36:49,005
在表中是静态的。换句话说，它没有显示

726
00:36:49,073 --> 00:36:51,241
任意的信息，如可能的食物列表

727
00:36:51,310 --> 00:36:53,309
随时间变化，它显示出固定的东西。

728
00:36:53,378 --> 00:36:56,379
像这里一样，可访问性设置，这些永不改变，

729
00:36:56,448 --> 00:36:59,815
他们是固定的，对吧？所以这是我们唯一使用的时间

730
00:36:59,884 --> 00:37:02,719
这组风格，否则，在所谓的平原

731
00:37:02,787 --> 00:37:05,488
风格，这就是我只是向你展示的所有东西。所以

732
00:37:05,557 --> 00:37:08,591
就像我说的那样，收集视图就像科技那样流动

733
00:37:08,660 --> 00:37:11,127
在这里我得到了这些食物的图像。

734
00:37:11,195 --> 00:37:13,963
它有点流水线，碰巧是

735
00:37:14,032 --> 00:37:17,033
所有相同的尺寸，所以每行有三个，但没有

736
00:37:17,102 --> 00:37:19,369
行在这里。这可能，你可能会看这个和

737
00:37:19,438 --> 00:37:20,970
说，它就像表，你有行。

738
00:37:21,038 --> 00:37:22,071
不，没有行，

739
00:37:22,139 --> 00:37:24,541
这些项目恰好是从一条线流向另一条线，

740
00:37:24,609 --> 00:37:27,611
他们排队排队。如果它们大小不同，

741
00:37:27,679 --> 00:37:30,613
他们在那里看起来不那么划算。和

742
00:37:30,681 --> 00:37:36,920
您也可以在集合视图中包含部分。

743
00:37:36,988 --> 00:37:39,655
因此集合工具都有这种分割的概念

744
00:37:39,724 --> 00:37:44,393
信息分成几部分。好吧。所以那是

745
00:37:44,462 --> 00:37:47,730
他们看起来像什么。你如何获得一个到你的应用程序？和

746
00:37:47,799 --> 00:37:50,066
当然，从物品托盘中将其拖出来，对。

747
00:37:50,134 --> 00:37:52,602
表视图或集合视图，将其拖出。

748
00:37:52,670 --> 00:37:56,172
如果您的整个观点也有预先包装的MVC，

749
00:37:56,240 --> 00:37:59,175
所以你的整个self.view你的MVC正在进行

750
00:37:59,244 --> 00:38:02,912
成为一个表格视图，你将要使用表格视图

751
00:38:02,980 --> 00:38:06,115
控制器，你可以拖出。这就像拖出去一样

752
00:38:06,184 --> 00:38:08,284
一个视图控制器。你拖出表视图控制器和

753
00:38:08,353 --> 00:38:10,353
繁荣，你会得到一个，它将全部预先和

754
00:38:10,422 --> 00:38:12,288
你会在那里看到表视图，

755
00:38:12,357 --> 00:38:14,857
集合视图控制器也是如此。所以这是

756
00:38:14,926 --> 00:38:18,561
一种方便的东西，但我确实推荐你

757
00:38:18,630 --> 00:38:22,131
永远有一个MVC，整个视图是一个表视图或

758
00:38:22,200 --> 00:38:25,401
一个集合视图使用这些便利的东西，

759
00:38:25,470 --> 00:38:27,737
他们很方便。所以

760
00:38:27,806 --> 00:38:30,473
在API或者API中理解的最重要的东西

761
00:38:30,542 --> 00:38:33,276
使用这些东西是数据从哪里来的？

762
00:38:33,344 --> 00:38:36,445
如何将数据存入我的表格和and中

763
00:38:36,514 --> 00:38:40,149
我们知道从我的MVC谈话中，视图是不允许拥有的

764
00:38:40,218 --> 00:38:43,886
他们的数据。所以我们不能在表格视图中有一个var，

765
00:38:43,955 --> 00:38:46,689
这里是数据。我们不能只给它数据。

766
00:38:46,758 --> 00:38:50,559
表格视图必须要求数据。所以它要求

767
00:38:50,628 --> 00:38:53,629
数据与代表团一样。

768
00:38:53,698 --> 00:38:56,065
会有一个var，它被称为dataSource。

769
00:38:56,134 --> 00:38:58,167
表格视图和集合视图都有这个。

770
00:38:58,236 --> 00:39:02,371
那个数据源是，它的类型是一个协议，并且

771
00:39:02,440 --> 00:39:05,341
在那个协议中是一些要求数据的方法。

772
00:39:05,410 --> 00:39:08,244
给我这些数据。他们只是不断要求

773
00:39:08,313 --> 00:39:10,713
数据，这就是他们如何获得他们的数据。

774
00:39:10,782 --> 00:39:13,349
我们要谈谈那些重要的方法

775
00:39:13,418 --> 00:39:14,951
数据源协议在一瞬间，所以

776
00:39:15,019 --> 00:39:17,420
那么你就会明白如何加载你的表或者

777
00:39:17,488 --> 00:39:20,823
您的收藏视图。现在还有表格和集合视图

778
00:39:20,892 --> 00:39:23,593
有一个委托，这是一个不同的变种。

779
00:39:23,661 --> 00:39:26,762
并控制数据的显示方式。

780
00:39:26,831 --> 00:39:28,431
喜欢如何收集视图和

781
00:39:28,500 --> 00:39:31,467
表视图的配置不是它显示的内容。

782
00:39:31,536 --> 00:39:33,736
不是实际的数据，只是如何。

783
00:39:33,804 --> 00:39:37,840
好吧，所以你把这两个变量设置到你的控制器上，

784
00:39:37,909 --> 00:39:42,278
99.99％的时间，如果你拖出那些预包装

785
00:39:42,346 --> 00:39:46,582
这些变量会自动为您设置。但

786
00:39:46,651 --> 00:39:49,218
底线是你的控制器会是

787
00:39:49,287 --> 00:39:54,357
回答所有这些问题，给我提供数据问题。好吧？

788
00:39:54,426 --> 00:39:59,094
所以，这给我的数据协议有很多

789
00:39:59,163 --> 00:40:01,697
在他们的方法，令人惊讶。你会认为它会

790
00:40:01,766 --> 00:40:03,532
不是那么多，但实际上，我认为，

791
00:40:03,601 --> 00:40:07,170
十几个甚至十五个甚至更多。但有三个超级

792
00:40:07,238 --> 00:40:09,739
重要的。三个主要给我的数据和

793
00:40:09,808 --> 00:40:11,608
我们会谈论这三个。他们非常

794
00:40:11,676 --> 00:40:15,010
两者都是一样的，我会谈论的，主要是关于

795
00:40:15,079 --> 00:40:17,012
表格视图，几乎相同

796
00:40:17,081 --> 00:40:20,015
收集视图。他们在这里。在表格视图中，

797
00:40:20,084 --> 00:40:23,453
在集合视图中，它们都有多个部分。

798
00:40:23,522 --> 00:40:25,054
我告诉过你，信息可以分开

799
00:40:25,123 --> 00:40:26,823
成部分，所以当然，它想知道，

800
00:40:26,892 --> 00:40:28,091
那里有几个部分？

801
00:40:28,160 --> 00:40:30,092
通常的答案是，一个。事实上，

802
00:40:30,161 --> 00:40:33,329
如果你没有实现这个方法，那将是答案，

803
00:40:33,398 --> 00:40:35,631
一节。一切都在一个大的部分。

804
00:40:35,700 --> 00:40:40,470
好吧？第二个是好的，每个部分有多少行？

805
00:40:40,538 --> 00:40:42,037
所以它只是要问你每节，

806
00:40:42,106 --> 00:40:43,940
本节中有多少行？本节中有多少行？

807
00:40:44,008 --> 00:40:46,742
或者在收集视图部分中，有多少项目

808
00:40:46,811 --> 00:40:49,278
本节。这是我要问你的下一个问题。所以

809
00:40:49,347 --> 00:40:52,148
这两个显而易见。然后有biggie，

810
00:40:53,250 --> 00:40:56,552
正在获取每行或每行的数据

811
00:40:56,621 --> 00:41:01,223
为每个项目。现在，这个是非常灵活的，因为

812
00:41:01,292 --> 00:41:03,159
您要在表格视图中显示的数据

813
00:41:03,227 --> 00:41:06,329
收集视图可能相当复杂，等等

814
00:41:06,397 --> 00:41:09,598
我们将在这里详细讨论这种方法。

815
00:41:09,667 --> 00:41:12,368
但请注意那里的参数，即绿色类型索引

816
00:41:12,437 --> 00:41:16,672
路径。索引路径只是一个小小的小结构

817
00:41:16,741 --> 00:41:20,042
包含部分和行，或部分和

818
00:41:20,111 --> 00:41:23,045
该项目。所以这只是一种结合行的方式，

819
00:41:23,114 --> 00:41:26,149
节和行，以便收集视图和

820
00:41:26,217 --> 00:41:28,484
Table View可以很简单地问你，

821
00:41:28,552 --> 00:41:31,820
给我这个部分和行的数据，它给你

822
00:41:31,889 --> 00:41:34,824
索引路径。所以，索引路径没有什么特别之处，

823
00:41:34,893 --> 00:41:37,593
它实际上只是有酒吧，行，项目和部分，

824
00:41:37,662 --> 00:41:40,262
那些是你要使用的唯一bar。

825
00:41:40,331 --> 00:41:42,231
当你在这个类中使用索引路径时，

826
00:41:42,300 --> 00:41:45,868
超级简单。好吧，让我们深入单元格

827
00:41:45,936 --> 00:41:48,837
在索引路径中行，我会做表视图之一，

828
00:41:48,906 --> 00:41:51,874
就像我说的那样，但这对收集视图是一样的，

829
00:41:51,942 --> 00:41:55,878
它只是在索引路径中称为单元格。所以，

830
00:41:55,947 --> 00:42:00,717
这个方法将返回一个UI视图。

831
00:42:00,785 --> 00:42:03,018
你看到那个红色的东西，UI表格视图单元格？

832
00:42:03,087 --> 00:42:04,920
这是UI视图的一个子类。

833
00:42:04,989 --> 00:42:08,090
这是将用于绘制该行的视图，或者

834
00:42:08,159 --> 00:42:11,060
集合视图中的项目。看，超级简单，

835
00:42:11,128 --> 00:42:14,897
对？但是这里有点复杂，因为

836
00:42:14,966 --> 00:42:18,167
这第一行代码，这总是会很多

837
00:42:18,236 --> 00:42:21,404
你的单元格中的第一行代码行在方法，其中

838
00:42:21,472 --> 00:42:24,340
是具有索引路径标识符的出队可重用单元。

839
00:42:24,408 --> 00:42:27,409
现在，这到底意味着什么？出队重复使用

840
00:42:27,478 --> 00:42:29,912
带有标识符的单元格，让我们分解该行和

841
00:42:29,981 --> 00:42:33,216
了解那里发生了什么。首先，

842
00:42:33,284 --> 00:42:37,119
让我们了解重用。如果我有一个10000的表格视图

843
00:42:37,188 --> 00:42:41,491
比如说，我的iPod库中的所有歌曲。

844
00:42:41,559 --> 00:42:45,294
其中10,000个在那里，我有10,000个视图，每个视图

845
00:42:45,362 --> 00:42:48,597
这可能是，你知道，专辑封面，艺术，

846
00:42:48,666 --> 00:42:51,667
让我们假设，想象那只会是荒谬的

847
00:42:51,735 --> 00:42:55,705
效率低下，10,000个用户界面视图，全部填充，没办法。所以

848
00:42:55,773 --> 00:42:58,974
表视图实际上只创建这些UI表视图

849
00:42:59,043 --> 00:43:02,611
可见行的单元格。当你翻阅和

850
00:43:02,680 --> 00:43:04,947
他们从顶部飞走，重新使用它们，

851
00:43:05,016 --> 00:43:07,416
把一些放在底部。所以它不断

852
00:43:07,485 --> 00:43:10,519
在滚动数据时重用这些视图。

853
00:43:10,588 --> 00:43:12,354
对于效率来说，这是完全有道理的。

854
00:43:12,423 --> 00:43:14,724
这正是你想要做的。

855
00:43:14,792 --> 00:43:18,727
所以当事情从顶端飞起时，不再在视野中，

856
00:43:18,796 --> 00:43:22,064
这个显示它们的单元，UITableView单元，

857
00:43:22,133 --> 00:43:25,568
这是一个UIView，它进入了一个重用池，并且

858
00:43:25,636 --> 00:43:27,769
你用这种方法解决了这个问题，

859
00:43:27,838 --> 00:43:31,574
无论如何，dequeReusable。对？它给你一个单元格，

860
00:43:31,642 --> 00:43:34,710
但如果这些可重复使用的东西是空的，

861
00:43:34,779 --> 00:43:38,147
比如说，你的桌子刚刚出现在屏幕上。

862
00:43:38,216 --> 00:43:39,915
显然，那里没有。所以

863
00:43:39,984 --> 00:43:44,420
那么会发生什么。在哪里，当你可以将可重用单元格出列时，

864
00:43:44,488 --> 00:43:46,889
你仍然得到一个单元格从哪里来？好，

865
00:43:46,958 --> 00:43:49,792
答案是，它是通过复制创建的

866
00:43:49,860 --> 00:43:53,763
您在故事板中创建的原型。所以

867
00:43:53,832 --> 00:43:57,767
你会用所有的标签来建立这个单元格

868
00:43:57,835 --> 00:44:00,803
按钮和图像，你想要的。在那里建立它，

869
00:44:00,872 --> 00:44:03,939
在故事板中使用自动布局，然后就是了

870
00:44:04,008 --> 00:44:06,843
每次需要时都要制作副本，

871
00:44:06,911 --> 00:44:10,813
它不能重复使用。所以这是如何工作的，

872
00:44:10,881 --> 00:44:13,783
这里有一个例子，所以这是一个截图

873
00:44:13,852 --> 00:44:16,385
我的故事板。这就像我的表格视图的顶部

874
00:44:16,454 --> 00:44:19,322
控制器就在这里。我在这里有两个牢房，

875
00:44:19,390 --> 00:44:23,325
两个原型。第一个只是一个基本单元。和

876
00:44:23,394 --> 00:44:25,661
第二个是我向你展示的复杂的一个，

877
00:44:25,730 --> 00:44:28,630
这是在类别，食物，和

878
00:44:28,699 --> 00:44:31,633
食物的名称和一些关于食物的细节。

879
00:44:31,702 --> 00:44:35,004
Etcetera，好吧，这些是两个独立的原型

880
00:44:35,073 --> 00:44:39,375
在这里和他们每个人，我要设定他们的风格和

881
00:44:39,444 --> 00:44:41,343
也给他们一个标识符。

882
00:44:41,412 --> 00:44:44,180
你会看到最顶层的标识符食物单元格。

883
00:44:44,249 --> 00:44:46,782
底部我给了标识符，定制食物单元格。

884
00:44:46,851 --> 00:44:49,852
所以这只是一个你要用来识别的字符串

885
00:44:49,921 --> 00:44:53,022
当你出队时你想要哪个单元格

886
00:44:53,091 --> 00:44:57,326
一个可重用的单元。所以单元的出队者将永远不会重用

887
00:44:57,394 --> 00:44:58,527
一种错误的类型。

888
00:44:58,596 --> 00:45:01,130
你告诉我你会重复使用你想要的类型之一

889
00:45:01,199 --> 00:45:03,699
如果没有可重用的东西，它会通过复制一个东西来创建一个

890
00:45:03,767 --> 00:45:07,236
你看到这里。所有的意见在那里，图像视图和

891
00:45:07,305 --> 00:45:09,338
文本视图全部被复制，因为

892
00:45:09,407 --> 00:45:14,510
你做另一行。所以现在你明白这个黄色

893
00:45:14,579 --> 00:45:17,346
线，对吗？将具有标识符的可重复使用的单元出列，

894
00:45:17,415 --> 00:45:19,682
这就像食物单元格或定制食物单元格，

895
00:45:19,750 --> 00:45:22,285
说你想要哪个原型。当然还有 、

896
00:45:22,353 --> 00:45:24,820
索引路径是我们所处的索引路径，因为我们正在进行

897
00:45:24,889 --> 00:45:30,326
被要求为该索引路径创建一些东西。

898
00:45:30,395 --> 00:45:36,265
了解？好吧。这些单元格被重复使用的事实，

899
00:45:36,334 --> 00:45:39,869
注意到红色，这些单元格被重复使用的事实已经存在

900
00:45:39,937 --> 00:45:43,238
多线程的重大影响。因为你可能

901
00:45:43,307 --> 00:45:47,976
在你的行中有一个图像，你必须去取它，

902
00:45:48,045 --> 00:45:51,213
所以你在另一个线程上发布了一些提取的东西

903
00:45:51,282 --> 00:45:52,414
去网上找点东西，

904
00:45:52,483 --> 00:45:55,284
这需要很长时间。与此同时，用户轻弹和

905
00:45:55,353 --> 00:45:58,354
将该单元格卷走并重新使用。和

906
00:45:58,423 --> 00:46:01,090
现在它显示了其他的东西，然后到了

907
00:46:01,158 --> 00:46:03,725
图像回来了。那么，如果你不小心，你会的

908
00:46:03,794 --> 00:46:07,763
将该图像从另一个单元移动到新的单元中。

909
00:46:07,832 --> 00:46:10,532
你明白你为什么要这么做吗？所以当这个形象来临时

910
00:46:10,601 --> 00:46:13,803
回来，你必须确定，这个单元格还在展示中

911
00:46:13,871 --> 00:46:16,772
我提出的要求是什么？我们这是，

912
00:46:16,840 --> 00:46:19,274
我们一直在谈论这个，多线程，

913
00:46:19,343 --> 00:46:21,744
当它回来时，你必须检查确定世界

914
00:46:21,812 --> 00:46:24,013
仍然是你的想法。这真的发生了很多

915
00:46:24,081 --> 00:46:26,448
这些单元格，因为他们不断地飞来飞去

916
00:46:26,517 --> 00:46:31,620
得到重用。好吧？所以现在我们知道这个，

917
00:46:31,689 --> 00:46:34,924
我们有时会在我们的事情中有这样的一条线，

918
00:46:34,993 --> 00:46:38,126
这是让原型，这是一个字符串，

919
00:46:38,195 --> 00:46:41,096
等同于一些决定，一些作出决定的代码，

920
00:46:41,165 --> 00:46:43,799
食物单元格或定制食物单元格。

921
00:46:43,868 --> 00:46:47,503
所以那个决定就在那里，它可能会在什么索引上做出

922
00:46:47,572 --> 00:46:50,305
你将拥有的路径，比如它所在的部分，或者

923
00:46:50,374 --> 00:46:53,308
也许它是基于那里的数据，

924
00:46:53,377 --> 00:46:54,777
喜欢，也许有些水果。

925
00:46:54,845 --> 00:46:57,646
我们有关于和一些食物的详细信息，

926
00:46:57,714 --> 00:47:00,082
我们有关于我们没有的一些食物的详细信息，

927
00:47:00,150 --> 00:47:01,750
对？所以我们要用详细的一个，

928
00:47:01,819 --> 00:47:04,186
定制食物单元格，当我们拥有食物单元格和信息时，

929
00:47:04,255 --> 00:47:06,922
当我们不。你看我们如何才能在这里决定，

930
00:47:06,991 --> 00:47:09,491
哪一个是合适的，然后我们将那个人解雇

931
00:47:09,560 --> 00:47:14,830
得到正确的单元格。好，现在我们已经有了这个单元。

932
00:47:14,899 --> 00:47:17,065
这是一个表格视图单元格，UITableView单元格，

933
00:47:17,134 --> 00:47:20,569
好的，那已经出列了。我们如何配置单元

934
00:47:20,638 --> 00:47:23,772
有数据在里面？好的，那取决于是否

935
00:47:23,841 --> 00:47:26,341
它是这些基本四种之一，比如副标题，左边的细节，

936
00:47:26,410 --> 00:47:29,412
正确的细节，或基本的，或者它是一个自定义单元格，

937
00:47:29,480 --> 00:47:31,713
就像那个拥有苹果形象的人一样。所以

938
00:47:31,782 --> 00:47:36,251
让我们看看基本的。那一个，基本上就是TableViews

939
00:47:36,320 --> 00:47:39,321
单元格有几个outlets叫它，文字标签，

940
00:47:39,390 --> 00:47:42,758
您可以设置的详细文本标签。对于

941
00:47:42,826 --> 00:47:45,360
默认情况下，它也有另一个叫ImageView的，

942
00:47:45,429 --> 00:47:46,962
一个小图像可以出现在左边

943
00:47:47,031 --> 00:47:49,498
的单元格。所以，如果这对你来说足够好，

944
00:47:49,567 --> 00:47:53,702
那么你可以使用这些outlets，你很好去。

945
00:47:53,771 --> 00:47:56,038
所以你只需设置它。这只是一个UITableView

946
00:47:56,107 --> 00:47:59,074
cell只是一种视图，恰巧有outlets，

947
00:47:59,143 --> 00:48:01,043
这是一个有outlets的视图，我们将在这里进行讨论

948
00:48:01,112 --> 00:48:02,912
第二个因素我们从来没有见过与outlets的意见，

949
00:48:02,980 --> 00:48:06,481
直到现在只有没有outlets的控制器。但

950
00:48:06,550 --> 00:48:08,784
如果这还不够好，你需要一些复杂的东西

951
00:48:08,853 --> 00:48:12,321
就像我们在那里的细节苹果单元格一样，

952
00:48:12,390 --> 00:48:15,591
那么你将不得不制作一个自定义的子类

953
00:48:15,659 --> 00:48:18,727
UI表格视图单元格。让我们看看为什么和

954
00:48:18,796 --> 00:48:22,831
我们如何做到这一点。所以，我们有这个自定义单元，

955
00:48:22,900 --> 00:48:25,601
我们显然需要outlets，对吧？

956
00:48:25,670 --> 00:48:26,802
否则，我们将如何设置这些？

957
00:48:26,871 --> 00:48:29,137
我们必须有outlet，所以你可能会认为，

958
00:48:29,206 --> 00:48:31,673
我只是想把它放在我的表格视图控制器中

959
00:48:31,742 --> 00:48:34,209
我总是这样做，对吧？我的控制器的子类，但是

960
00:48:34,278 --> 00:48:36,712
我们不能那样做，你明白我们为什么不能这么做吗？

961
00:48:36,780 --> 00:48:39,215
因为可能有100个这样的单元格。这是

962
00:48:39,283 --> 00:48:41,950
我们正在复制的原型，我们不能有一个出口

963
00:48:42,019 --> 00:48:44,820
哪一个赢？他们不能，你知道我在说什么，并且

964
00:48:44,889 --> 00:48:47,890
这些可能是阵列我想像一个向外收集，

965
00:48:47,958 --> 00:48:49,274
那不是，那也不会有任何意义，因为

966
00:48:49,275 --> 00:48:50,591
但是，但是

967
00:48:50,661 --> 00:48:53,228
那些东西不断被重用，数组会

968
00:48:53,297 --> 00:48:55,230
像人一样疯狂。所以我们不能那样做，

969
00:48:55,299 --> 00:48:57,399
我们不能使用我们的控制器作为插座的地方。因此对于

970
00:48:57,468 --> 00:49:00,335
第一次我们实际上会把outlets放在一个视图中，

971
00:49:00,404 --> 00:49:03,872
这个视图必须是UITableViewCell的一个子类，

972
00:49:03,941 --> 00:49:08,010
那个cellForItemAt返回的东西。所以

973
00:49:08,079 --> 00:49:10,779
你将会创建它的一个子类MyTableViewCell，

974
00:49:10,848 --> 00:49:12,981
你会把outlets放在那里。

975
00:49:13,050 --> 00:49:15,818
所以每一行都会有它自己的TableViewCell和

976
00:49:15,886 --> 00:49:18,387
每个表格单元都有自己的出口。甚至

977
00:49:18,455 --> 00:49:20,923
基本和小标题都有他们自己的网站文字

978
00:49:20,992 --> 00:49:23,525
标签，详细文本标签和图像视图，对不对？但

979
00:49:23,594 --> 00:49:25,594
你可以有任何你想要的渠道，

980
00:49:25,662 --> 00:49:28,129
因为你只是要去，这将成为一堂课

981
00:49:28,198 --> 00:49:31,366
你会写。现在，别忘了，

982
00:49:31,435 --> 00:49:34,603
当你创建一个自定义的UITableViewCell子类时

983
00:49:34,672 --> 00:49:37,439
要小身份去身份检查员

984
00:49:37,508 --> 00:49:40,776
在那里选择原型行，并设置身份，

985
00:49:40,845 --> 00:49:43,746
cuz默认情况下它将是类UITableViewCell，

986
00:49:43,814 --> 00:49:47,082
所以你必须改变它是类MyTVC，或者其他什么，

987
00:49:47,151 --> 00:49:48,951
我的表格视图单元格。再次，

988
00:49:49,019 --> 00:49:51,186
就像你为控制器设置类一样

989
00:49:51,255 --> 00:49:54,289
意见，你也为单元格做同样的事情。

990
00:49:54,358 --> 00:49:57,192
好吧，就是这样。所以实际上并不难

991
00:49:57,261 --> 00:49:59,895
如果我们想要的话，唯一的回到cellForRowAt

992
00:49:59,964 --> 00:50:02,965
访问这些outlets，我们必须投射出来的单元格

993
00:50:03,033 --> 00:50:06,135
从带标识符的dequeueReusableCell回来，cuz

994
00:50:06,203 --> 00:50:10,239
回来。这是一个UITableViewCell类，所以它没有

995
00:50:10,307 --> 00:50:14,143
了解我的店铺，所以我必须把它变成MyTVC。

996
00:50:14,211 --> 00:50:18,280
现在，我已经有了这个本地变量myTVC，我的TVCell，

997
00:50:18,349 --> 00:50:22,150
这是演员，我可以做像TVC.name和

998
00:50:22,219 --> 00:50:26,288
TVC.emoji。我拥有的那些渠道，我可以设置它们

999
00:50:26,356 --> 00:50:28,857
成为myData。注意myData，我有这些，

1000
00:50:28,926 --> 00:50:31,794
我在我的控制器中创建了称为food的函数

1001
00:50:31,862 --> 00:50:34,362
indexPath，indexPath处的表情符号。这是常见的

1002
00:50:34,431 --> 00:50:36,999
你想做的事情，这基本上是我的功能

1003
00:50:37,068 --> 00:50:41,269
它接受indexPath并查看你的模型。所以

1004
00:50:41,338 --> 00:50:47,009
当被问到时，你可以很容易地将它们放在这里。

1005
00:50:47,077 --> 00:50:49,844
就是这样了。这就是你加载单元格的方式。

1006
00:50:49,913 --> 00:50:52,881
在收集视图中，你总是必须这样做，

1007
00:50:52,950 --> 00:50:55,184
收藏视图没有基本或子标题，

1008
00:50:55,252 --> 00:50:57,720
并在表格视图中，任何时候你有更多的东西

1009
00:50:57,788 --> 00:50:59,521
只需简单的单元格就可以这样做，

1010
00:50:59,590 --> 00:51:03,259
但它的收藏和收藏完全一样

1011
00:51:03,327 --> 00:51:05,827
表视图。现在，

1012
00:51:05,896 --> 00:51:09,665
从这里吸一口气并谈论静态表格视图。

1013
00:51:09,733 --> 00:51:13,068
所以，有时候一张桌子，我们只用它来布置我们的用户界面，

1014
00:51:13,136 --> 00:51:16,472
我们实际上并没有将它作为一个具有任意性的地方

1015
00:51:16,541 --> 00:51:19,408
数据量，它有一个固定的数据量。

1016
00:51:19,477 --> 00:51:21,943
通常这就像一个设置应用程序，

1017
00:51:22,012 --> 00:51:25,247
或我们的应用程序中的首选项表，其中的一切

1018
00:51:25,315 --> 00:51:27,983
固定的，我们只是用它来分组的东西和

1019
00:51:28,051 --> 00:51:31,653
在漂亮的行中布置事物。所以，当我们这样做时，我们不这样做

1020
00:51:31,722 --> 00:51:34,589
必须做任何这些东西。行数和段数，

1021
00:51:34,658 --> 00:51:38,360
不，没有。因为我们只是做这一切，所以我们自己排队

1022
00:51:38,429 --> 00:51:41,496
直接在我们的故事板上，我们可以将事物连接起来

1023
00:51:41,565 --> 00:51:43,999
行直接到你的控制器，为什么？

1024
00:51:44,067 --> 00:51:47,069
因为只有一样东西。这不是

1025
00:51:47,137 --> 00:51:49,571
一个被复制的原型，因为它是静态的。

1026
00:51:49,639 --> 00:51:50,672
数据是静态的，所以

1027
00:51:50,741 --> 00:51:53,642
在这种情况下，我们可以直接进入我们的控制器。

1028
00:51:53,710 --> 00:51:57,179
这很容易，所以这并不罕见，

1029
00:51:57,247 --> 00:52:00,515
和你做这件事的方式，有点像这样做，

1030
00:52:00,584 --> 00:52:03,318
你去吧，点击故事板上的表格

1031
00:52:03,387 --> 00:52:05,487
改变它的内容，就在那里，

1032
00:52:05,555 --> 00:52:09,124
静态单元格。默认情况下，它将是动态原型，

1033
00:52:09,193 --> 00:52:11,860
但是你会将它设置为静态单元格，顺便说一下，

1034
00:52:11,928 --> 00:52:14,462
那里的风格几乎总是分组的。记住我

1035
00:52:14,531 --> 00:52:16,931
向你展示了它在设置应用程序中的分组样式？

1036
00:52:17,000 --> 00:52:19,234
这几乎是你在静态时会用到的东西

1037
00:52:19,303 --> 00:52:23,372
单元格。这是静态时看起来最好的。然后你走了

1038
00:52:23,440 --> 00:52:27,075
进入文档大纲。这有点模糊，但是

1039
00:52:27,144 --> 00:52:29,911
不要忘记这一块。你去文档大纲和

1040
00:52:29,980 --> 00:52:33,649
你会发现那里的部分，这些静态部分，

1041
00:52:33,718 --> 00:52:35,917
你可以去每个部分。首先，你可以

1042
00:52:35,986 --> 00:52:38,486
通过检查表格视图创建更多部分

1043
00:52:38,555 --> 00:52:40,655
说你想要多少部分。但是当你找到时

1044
00:52:40,724 --> 00:52:42,891
文档大纲的一部分，你点击它们

1045
00:52:42,960 --> 00:52:44,759
检查该部分，并且可以向其添加行，

1046
00:52:44,828 --> 00:52:46,028
因为很多人都喜欢，

1047
00:52:46,096 --> 00:52:47,329
如何在本节中添加一行？

1048
00:52:47,397 --> 00:52:48,263
我无法弄清楚。

1049
00:52:48,332 --> 00:52:50,799
这就是你如何做，文档大纲，点击部分，

1050
00:52:50,868 --> 00:52:54,069
检查员，击中你想要的行数。和

1051
00:52:54,137 --> 00:52:56,037
那么你只需开始拖放标签，然后

1052
00:52:56,106 --> 00:52:59,174
按钮和开关，无论你想做什么，和

1053
00:52:59,243 --> 00:53:02,343
控制把它们拖到你的控制器。因为它只是

1054
00:53:02,412 --> 00:53:05,447
一种方法来处理这些事情。所以这是完全不同的

1055
00:53:05,515 --> 00:53:08,784
我们称之为静态表格视图的那种表格视图。好吧，

1056
00:53:08,853 --> 00:53:11,353
如何从表格视图中继续。

1057
00:53:11,422 --> 00:53:13,555
所以我想点击一行并让它继续。

1058
00:53:13,624 --> 00:53:16,091
那么这和你一样绝对简单

1059
00:53:16,160 --> 00:53:19,628
可能会想，直到我们准备继续。

1060
00:53:19,696 --> 00:53:23,331
我也想谈谈这个细节披露附件。

1061
00:53:23,400 --> 00:53:25,567
所以，如果你检查你的表格视图单元格和

1062
00:53:25,635 --> 00:53:28,269
你去检查员，并在配件下，

1063
00:53:28,338 --> 00:53:31,440
你选择细节披露，你会得到那个小我

1064
00:53:31,508 --> 00:53:35,277
围绕它的圆圈。你可以从它或继续

1065
00:53:35,346 --> 00:53:38,079
从行。所以如果有人点击该行，它会做一个

1066
00:53:38,148 --> 00:53:39,815
继续，如果他们点击这个小东西，

1067
00:53:39,883 --> 00:53:42,117
它会做一个不同的赛格，你为什么要这个？

1068
00:53:42,185 --> 00:53:45,387
那么，让我们说这是我们的表情艺术文档列表和

1069
00:53:45,456 --> 00:53:48,356
点击行显然会提出这一点

1070
00:53:48,425 --> 00:53:49,625
表情艺术文件，

1071
00:53:49,693 --> 00:53:53,228
也许点击小我继续到不同的MVC，

1072
00:53:53,297 --> 00:53:56,297
这可以让我们更改文档的名称，

1073
00:53:56,366 --> 00:53:59,868
谁创作它，什么时候创作，看它是什么时候创作的。

1074
00:53:59,937 --> 00:54:01,469
你明白我的意思，有点内容丰富，

1075
00:54:01,538 --> 00:54:02,771
关于文件的信息。

1076
00:54:02,840 --> 00:54:05,073
所以你可以让这两件事情继续下去

1077
00:54:05,142 --> 00:54:08,577
继续。而且，但是你以同样的方式制作赛格，

1078
00:54:08,646 --> 00:54:11,646
你控制从行拖动，是的，你可以控制拖动

1079
00:54:11,715 --> 00:54:15,384
从一个原型行。这也适用于原型

1080
00:54:15,452 --> 00:54:18,320
至于静态。所以，你只需控制拖动，然后

1081
00:54:18,389 --> 00:54:21,456
当你放手的时候，你可以看到你可以设置继续

1082
00:54:21,525 --> 00:54:24,159
你的主要行，你也可以设置为继续

1083
00:54:24,227 --> 00:54:27,195
那个小按钮，那个小配件按钮，

1084
00:54:27,264 --> 00:54:30,032
那个小小的我围着它一圈。所以，

1085
00:54:30,101 --> 00:54:32,934
只是设置正常的继续，或者可能是两个

1086
00:54:33,003 --> 00:54:36,038
如果你有那么一点我就会继续下去，然后你检查它。

1087
00:54:36,106 --> 00:54:38,039
您可以像我们通常所做的那样设置它的标识符。

1088
00:54:38,108 --> 00:54:41,309
我会调用给我的ABC segue，然后你准备，

1089
00:54:41,378 --> 00:54:44,546
这就是它在桌面视图中变得有趣的地方，

1090
00:54:44,615 --> 00:54:47,816
因为如果你从一个原型继续下去，你必须

1091
00:54:47,884 --> 00:54:51,619
知道赛格实际发生的哪一行。

1092
00:54:51,688 --> 00:54:54,055
以下是我们如何做到这一点。这是准备segue。

1093
00:54:54,124 --> 00:54:57,592
这一点的关键是发件人为准备准备的参数，

1094
00:54:57,661 --> 00:55:00,763
如果我们点击的话，它会记住它就像按钮一样

1095
00:55:00,831 --> 00:55:03,799
一个按钮可以继续，好吧，如果你点击一行就可以了

1096
00:55:03,868 --> 00:55:07,035
UITableViewCell。所以你需要弄清楚，

1097
00:55:07,104 --> 00:55:09,871
从UITableViewCell，哪个索引路径是这样的

1098
00:55:09,940 --> 00:55:12,407
您可以获取正确的模型数据进行准备

1099
00:55:12,476 --> 00:55:15,310
你要去的东西。你这样做的方式

1100
00:55:15,379 --> 00:55:19,080
你是第一次将它转换成UITableViewCell还是一个子类

1101
00:55:19,149 --> 00:55:22,618
如果你在这里有一个UITableViewCell的子类。

1102
00:55:22,687 --> 00:55:25,253
然后你称这个非常重要的方法，

1103
00:55:25,322 --> 00:55:28,656
在表视图中，称为indexPath（for：cell）和

1104
00:55:28,725 --> 00:55:32,460
它将返回一个索引路径，即行结束部分

1105
00:55:32,529 --> 00:55:36,731
给定的单元格。注意你不能通过任何这个，

1106
00:55:36,800 --> 00:55:39,301
或者你不能说发件人的indexPath，

1107
00:55:39,369 --> 00:55:42,771
你必须首先将它转换成UITableViewCell或者

1108
00:55:42,840 --> 00:55:45,574
其子类。一旦你获得了indexPath，

1109
00:55:45,643 --> 00:55:48,243
那么你可以继续前进，在正常的地方做你的事情

1110
00:55:48,312 --> 00:55:51,413
你得到的目的地是你正在继续使用的MVC，而且

1111
00:55:51,482 --> 00:55:53,581
那么你从某个地方从你的模型中获得，

1112
00:55:53,650 --> 00:55:56,618
你可以根据部分和行获取数据，然后你

1113
00:55:56,687 --> 00:56:00,322
将其分配给您继续使用的MVC的公共API。所以

1114
00:56:00,391 --> 00:56:02,891
这就是发送者会变成的继续发挥的魔力

1115
00:56:02,959 --> 00:56:04,993
TableViewCell，你需要去indexPath

1116
00:56:05,062 --> 00:56:08,596
cell找出哪个indexPath，然后你可以继续。

1117
00:56:08,665 --> 00:56:11,266
从集合视图项目继续进行什么？

1118
00:56:12,302 --> 00:56:13,268
所以在一个集合视图项中，

1119
00:56:13,337 --> 00:56:17,139
这实际上最好是通过目标行动完成的。

1120
00:56:17,207 --> 00:56:21,309
集合视图的委托在其中有一个方法

1121
00:56:21,378 --> 00:56:24,946
每次物品被触及时都会被调用。它叫

1122
00:56:25,015 --> 00:56:28,783
CollectionVewDidSelectItemAtI  -  ndexPath。好，和

1123
00:56:28,852 --> 00:56:33,221
从这里使用执行segue，然后正常准备。

1124
00:56:33,290 --> 00:56:35,323
现在，当你从这里执行继续时，

1125
00:56:35,392 --> 00:56:38,961
可能是发件人，你会指定任何东西

1126
00:56:39,029 --> 00:56:42,898
这对你有意义，并在准备中使用它。所以

1127
00:56:42,966 --> 00:56:47,168
这是从集合视图中的单元格中退出的方式。

1128
00:56:47,237 --> 00:56:48,336
你可以使用相同的策略

1129
00:56:48,405 --> 00:56:49,771
顺便提一下，UI表格视图。

1130
00:56:49,840 --> 00:56:52,307
没有理由不使用完全相同的东西。事实上

1131
00:56:52,376 --> 00:56:55,943
有些人通过实现表视图来执行一次表视图

1132
00:56:56,012 --> 00:56:59,514
确实选择了行和索引路径并将索引路径传递为

1133
00:56:59,583 --> 00:57:02,517
艾美奖。好的？所以现在你已经有了索引路径。你没有

1134
00:57:02,586 --> 00:57:04,720
甚至必须为单元格业务做任何这种索引路径。

1135
00:57:04,788 --> 00:57:06,755
如果你愿意的话，这也是完全合理的。

1136
00:57:08,491 --> 00:57:10,492
好吧，有些事情要考虑这些表和

1137
00:57:10,560 --> 00:57:13,228
收集意见是，如果你的模型改变会发生什么，

1138
00:57:13,297 --> 00:57:15,097
对？你有这张表格，

1139
00:57:15,165 --> 00:57:17,332
你在iPod中显示所有歌曲，

1140
00:57:17,401 --> 00:57:22,504
然后你以某种方式添加一首歌。它必须更新。要么

1141
00:57:22,572 --> 00:57:24,906
一个新的食物被发现或者某物和

1142
00:57:24,975 --> 00:57:27,175
我们的食物清单必须改变。所以你会怎么做？

1143
00:57:27,243 --> 00:57:30,178
那么，在表格视图和集合视图中有一种方法

1144
00:57:30,247 --> 00:57:33,014
称为重新载入数据。这将导致所有这些方法，

1145
00:57:33,083 --> 00:57:35,184
行数和段数，段数，

1146
00:57:35,252 --> 00:57:37,218
表视图。给我表格视图单元格，

1147
00:57:37,287 --> 00:57:40,021
它会再次调用给他们。对于所有可见的单元格和

1148
00:57:40,090 --> 00:57:42,056
去获取一个新的单元格表，重新加载整个表格，

1149
00:57:42,125 --> 00:57:44,492
基本上。这有点严重。

1150
00:57:44,561 --> 00:57:46,360
这不是太糟糕，因为实际上，

1151
00:57:46,429 --> 00:57:49,264
只有在调用cellForRow和IndexPath名称的调用中，

1152
00:57:49,332 --> 00:57:52,033
它只会为可见单元格调用，所以它

1153
00:57:52,102 --> 00:57:55,336
其实不是太糟糕。但有更好的粒度

1154
00:57:55,405 --> 00:57:59,407
在索引路径上重新装载索引以提供一系列索引路径，

1155
00:57:59,476 --> 00:58:02,977
你可以重新加载这些行。并且集合视图具有

1156
00:58:03,046 --> 00:58:05,947
类似的事情。这不是，你知道，这不是很难做到

1157
00:58:06,016 --> 00:58:08,483
一个重新加载的数据，但你必须考虑这个事实

1158
00:58:08,551 --> 00:58:11,186
如果你的模型改变了，你得更新你的表格。

1159
00:58:11,254 --> 00:58:12,687
你并不是真的想要你的数据或

1160
00:58:12,756 --> 00:58:14,956
您的收藏与您的模型不同步

1161
00:58:15,025 --> 00:58:18,493
很长。你希望他们保持同步。

1162
00:58:18,562 --> 00:58:20,462
行的高度如何？

1163
00:58:20,530 --> 00:58:23,465
我们如何确定这些行的高度？好，

1164
00:58:23,534 --> 00:58:25,367
每个表格视图行都有三种方法。

1165
00:58:25,435 --> 00:58:28,870
一个是名为rowHeight的表视图var。

1166
00:58:28,939 --> 00:58:31,406
现在，这也可以在故事板中设置，这只是

1167
00:58:31,475 --> 00:58:33,474
修复行。他们总是会那么高。

1168
00:58:33,543 --> 00:58:36,778
这适用于基本的行和类似的东西。

1169
00:58:36,846 --> 00:58:40,882
第二个是使用自动布局设置行高。

1170
00:58:40,951 --> 00:58:42,917
好吧，你有一个复杂的事情和

1171
00:58:42,986 --> 00:58:45,687
也许有时候水果有很多细节

1172
00:58:45,755 --> 00:58:47,689
信息。所以单元格需要很大

1173
00:58:47,758 --> 00:58:49,291
有时水果很少，而且

1174
00:58:49,359 --> 00:58:52,227
单元格会很小。所以你设置了你的自动布局布局

1175
00:58:52,295 --> 00:58:56,230
正确的，所以它推出了一个通用的观点。所以

1176
00:58:56,299 --> 00:58:59,634
你将把一个通用的UI视图作为顶层视图

1177
00:58:59,703 --> 00:59:02,770
你的排，然后把你所有的东西放进去

1178
00:59:02,839 --> 00:59:05,673
然后有限制，推动这件事，

1179
00:59:05,742 --> 00:59:09,644
推出该通用视图。然后有通用的视图

1180
00:59:09,713 --> 00:59:12,714
固定到行的边缘。

1181
00:59:12,783 --> 00:59:15,216
如果你这样做，那么表视图将会

1182
00:59:15,285 --> 00:59:17,652
能够走过来，自动布局那个东西，

1183
00:59:17,721 --> 00:59:22,390
它会知道它的大小。所以要做到这一点

1184
00:59:22,459 --> 00:59:25,360
你设置rowHeight而不是你设置的数字

1185
00:59:25,429 --> 00:59:28,396
UITableViewAutomaticDimension是一个特殊的

1186
00:59:28,464 --> 00:59:31,299
价值，让节点去做实验室的事情

1187
00:59:31,368 --> 00:59:34,335
你可以想象这是相当昂贵的。

1188
00:59:34,404 --> 00:59:38,674
你不会为你的iPad库做10,000次。

1189
00:59:38,742 --> 00:59:41,476
所以你也想设置一个估计的高度。

1190
00:59:41,545 --> 00:59:44,011
估计的RowHeight只是告诉table view

1191
00:59:44,080 --> 00:59:45,647
不在屏幕上的单元格，

1192
00:59:45,716 --> 00:59:48,816
假设他们这么大。不要去自动布局

1193
00:59:48,885 --> 00:59:51,719
他们。所以这是需要考虑的事情。你的另一种方式

1194
00:59:51,788 --> 00:59:54,256
可以通过执行这个方法表来设置高度

1195
00:59:54,324 --> 00:59:58,726
查看heightForRowAt indexPath。然后这个回报

1196
00:59:58,795 --> 01:00:01,596
具有该索引的行的高度。现在如果可以的话

1197
01:00:01,664 --> 01:00:04,132
更有效地计算没有的高度

1198
01:00:04,201 --> 01:00:05,800
做所有的汽车布置的东西，

1199
01:00:05,869 --> 01:00:08,336
那么这对你来说是一件很棒的事情。

1200
01:00:08,404 --> 01:00:10,372
也许你知道某些单元格是一个高度和

1201
01:00:10,440 --> 01:00:11,872
某些事情告诉另一个高度，就是这样，

1202
01:00:11,941 --> 01:00:12,774
只是这两个中的一个而已

1203
01:00:12,843 --> 01:00:15,309
你可以返回它是哪一个，好吗？

1204
01:00:15,378 --> 01:00:17,278
或者，也许所有的单元格都是一样的高度和

1205
01:00:17,347 --> 01:00:19,814
计算并返回它更方便

1206
01:00:19,883 --> 01:00:23,151
在这里，这很好。收集视图有类似的

1207
01:00:23,220 --> 01:00:26,088
事情。关于收集视图的唯一一件事是一个，

1208
01:00:26,156 --> 01:00:28,489
这是项目的大小，因为记住，

1209
01:00:28,558 --> 01:00:31,660
这些项目是集合视图中的矩形，而不是行，

1210
01:00:31,729 --> 01:00:34,328
他们没有高度，他们是矩形。

1211
01:00:34,397 --> 01:00:37,065
唯一的事情是注意到这个额外的一点

1212
01:00:37,134 --> 01:00:39,600
除sizeForItemAt外还有其他参数是布局

1213
01:00:39,669 --> 01:00:42,003
collectionViewLayout就在那里。

1214
01:00:42,072 --> 01:00:45,173
这是做流程布局的魔术，

1215
01:00:45,242 --> 01:00:48,743
默认。但是如果你提供了一个collectionViewLayout，

1216
01:00:48,812 --> 01:00:50,779
你可以做其他种类的布局。但对于

1217
01:00:50,847 --> 01:00:54,249
你在这堂课的目的，导致开始使用这个。

1218
01:00:54,317 --> 01:00:57,552
这总是会成为一个用于流布局的UI集合，

1219
01:00:57,621 --> 01:00:59,220
这是流动的。

1220
01:00:59,289 --> 01:01:00,889
这就是为什么这里有那个额外的参数。

1221
01:01:03,160 --> 01:01:06,961
那些标题怎么样？为了把标题放在那里，

1222
01:01:07,030 --> 01:01:10,431
你知道，像垃圾食品，然后甜点和水果，和

1223
01:01:10,500 --> 01:01:13,335
蔬菜。这些表格视图中的标题非常容易，

1224
01:01:13,403 --> 01:01:14,970
你只需实现这个方法，表格视图，

1225
01:01:15,038 --> 01:01:17,505
标题部分的标题，它返回一个字符串，和

1226
01:01:17,574 --> 01:01:19,574
只是把它放在那里。再简单不过了。

1227
01:01:19,643 --> 01:01:22,343
实际上有另一个返回UI视图，所以

1228
01:01:22,412 --> 01:01:24,278
你实际上可以让你的头像是UI视图

1229
01:01:24,347 --> 01:01:28,249
与你想要的东西在那里。以收集视图，

1230
01:01:28,318 --> 01:01:31,686
困难得多。更难做的部分

1231
01:01:31,755 --> 01:01:34,623
集合视图中的标题和表视图。就是这样

1232
01:01:34,691 --> 01:01:38,693
因为集合视图，它们的头部视图是可重用的。

1233
01:01:38,762 --> 01:01:41,463
就像单元格一样。我想这个决定是做出的，

1234
01:01:41,531 --> 01:01:43,598
因为你可以想象收集意见有很多

1235
01:01:43,667 --> 01:01:45,634
部分。作为一张桌子，这不太可能

1236
01:01:45,702 --> 01:01:47,669
你会有一个有一千个部分的桌子。

1237
01:01:47,737 --> 01:01:49,437
收集视图，也许你可以有很多。

1238
01:01:49,506 --> 01:01:51,906
我不确定他们为什么决定这样做，但是

1239
01:01:51,975 --> 01:01:56,611
他们做到了。它演奏非常相似

1240
01:01:56,680 --> 01:02:00,682
使用单元格。你做什么来启用你的标题

1241
01:02:00,750 --> 01:02:03,218
你检查你的收藏视图并点击按钮

1242
01:02:03,286 --> 01:02:05,753
部分标题或部分页脚，然后是一件小事

1243
01:02:05,822 --> 01:02:08,322
将出现在你的故事板中，你可以拖动东西

1244
01:02:08,391 --> 01:02:10,358
成。那件小事是一个原型和

1245
01:02:10,427 --> 01:02:12,728
它会重复每个部分的标题。

1246
01:02:14,197 --> 01:02:15,663
尽管如此，你可以放任何你想要的东西，但是

1247
01:02:15,732 --> 01:02:17,432
你将不得不创建这个子类。

1248
01:02:17,501 --> 01:02:20,434
这个子类是所谓的UIReusable，

1249
01:02:20,503 --> 01:02:23,504
UICollectionReusableView而不是UITableView单元格或

1250
01:02:23,573 --> 01:02:25,173
UICollectionView单元格。所以

1251
01:02:25,242 --> 01:02:27,409
你会接近你的店铺在那里。

1252
01:02:27,477 --> 01:02:29,844
然后你会实施这种方法，

1253
01:02:29,912 --> 01:02:32,914
viewForSupplementaryElementOf-有点像

1254
01:02:32,983 --> 01:02:36,117
在索引路径上自行排列，但仅用于标题。和

1255
01:02:36,186 --> 01:02:39,353
在那里你会使用另一种deque方法，

1256
01:02:39,422 --> 01:02:42,490
这个叫做dequeReusbaleSupplementaryVie-

1257
01:02:42,559 --> 01:02:44,926
wOf与索引路径的标识符一起使用。

1258
01:02:44,995 --> 01:02:47,695
这将会制作出原型的一个副本

1259
01:02:47,764 --> 01:02:50,498
在屏幕上滚动时重复使用它们。所以

1260
01:02:50,567 --> 01:02:53,001
我只是给你，你了解一般的笔刷，

1261
01:02:53,069 --> 01:02:55,403
但如果你真的想拥有你将会拥有的标题

1262
01:02:55,472 --> 01:02:57,773
去搞定这一切，页眉和页脚，

1263
01:02:57,841 --> 01:03:00,675
这仅适用于集合视图。好吧，

1264
01:03:00,743 --> 01:03:02,677
还有十亿种其他方法，

1265
01:03:02,745 --> 01:03:05,513
这些类别中的几十种其他方法，这些都非常

1266
01:03:05,582 --> 01:03:09,718
大型精密课程。你可以滑动删除行，

1267
01:03:09,786 --> 01:03:13,955
你可以移动这些行直到你可以滚动，

1268
01:03:14,024 --> 01:03:16,258
滚动到某一行。我的意思是，就是这样

1269
01:03:16,326 --> 01:03:18,726
在那里很多，甚至很难开始。

1270
01:03:18,795 --> 01:03:21,462
所以这就像这堂课上的一切。

1271
01:03:21,531 --> 01:03:24,032
我只是让你开始，你必须看

1272
01:03:24,101 --> 01:03:25,900
在这些东西的文档中看到，

1273
01:03:25,969 --> 01:03:28,002
哦，我能做什么？阅读介绍。

1274
01:03:28,071 --> 01:03:29,403
我想我在一开始就这样说过

1275
01:03:29,472 --> 01:03:31,907
我没有再强调。对于所有这些课程，

1276
01:03:31,975 --> 01:03:34,241
阅读开头的文字，概述。

1277
01:03:34,310 --> 01:03:38,179
它会给你一个这些东西可以做什么的概念

1278
01:03:38,248 --> 01:03:42,050
他们的能力等等。所以当我做这些时

1279
01:03:42,118 --> 01:03:44,819
幻灯片，我实际上创造了那个小水果的东西，

1280
01:03:44,888 --> 01:03:46,887
对？当小事情，所以我决定，

1281
01:03:46,956 --> 01:03:49,657
你知道，我只是想给你那个代码。我的代码

1282
01:03:49,726 --> 01:03:51,726
用于实际创建屏幕截图。

1283
01:03:51,795 --> 01:03:53,494
所以我会发布该代码。

1284
01:03:53,563 --> 01:03:55,596
这只是两件事情，一个表格视图和

1285
01:03:55,665 --> 01:03:57,731
集合视图，显示你的水果。

1286
01:03:57,800 --> 01:04:01,068
所以你可以得到一个简单的东西的想法，如何做到这一点。

1287
01:04:01,137 --> 01:04:04,172
但我也会做一个巨大的演示，这是表情符艺术。

1288
01:04:04,241 --> 01:04:06,341
因为你注意到表情符号艺术都是桌面视图和

1289
01:04:06,410 --> 01:04:09,310
一个集合视图。所以我们会这样做。和

1290
01:04:09,379 --> 01:04:12,914
今天我们将开始做表视图。接着

1291
01:04:12,982 --> 01:04:15,583
星期三我们会继续并进行集合视图。

1292
01:04:15,651 --> 01:04:17,285
集合视图很酷，因为您注意到了

1293
01:04:17,353 --> 01:04:18,787
集合视图会拖放它。

1294
01:04:18,855 --> 01:04:20,955
并且在Collection View和Collection中有特殊的支持

1295
01:04:21,024 --> 01:04:22,690
用于拖放的表视图也是如此。

1296
01:04:22,759 --> 01:04:25,826
所以我们将这两件事情结合在一起。我不会得到

1297
01:04:25,895 --> 01:04:29,063
回到幻灯片。只是为了让你知道会发生什么

1298
01:04:29,132 --> 01:04:31,899
星期三，除了做收藏查看和

1299
01:04:31,968 --> 01:04:34,702
表格视图表情符号艺术，我们也会做文本字段。

1300
01:04:34,771 --> 01:04:37,672
我不认为我给你看过。是的，我向你展示了这个功能

1301
01:04:37,740 --> 01:04:39,841
在那里你可以添加更多的表情符号，对吧？

1302
01:04:39,909 --> 01:04:41,876
所以那里出现了一个小文本字段

1303
01:04:41,944 --> 01:04:44,245
我会告诉你如何做到这一点

1304
01:04:44,314 --> 01:04:47,148
本季度我们完成了周五部分。

1305
01:04:47,216 --> 01:04:49,650
我们三人都很棒，但这就够了。

1306
01:04:49,719 --> 01:04:52,253
然后下周，我会谈论你的

1307
01:04:52,321 --> 01:04:57,224
您最终项目的要求。然后更多的iOS。

1308
01:04:57,293 --> 01:04:59,728
给我更多，需要更多的iOS，所以我们会这样做。

1309
01:05:02,532 --> 01:05:06,600
回到我们的表情符号艺术。和

1310
01:05:06,669 --> 01:05:08,570
我们该怎么办？所以我们要做tableView。

1311
01:05:08,638 --> 01:05:11,205
所以，让我们把那个tableView的东西放在那里，

1312
01:05:11,274 --> 01:05:16,244
让我，我不知道我在哪里。是的，我们走了。

1313
01:05:18,181 --> 01:05:21,382
所以tableView是分割视图的一部分，对吧？

1314
01:05:21,451 --> 01:05:23,784
它从侧面滑出。

1315
01:05:23,853 --> 01:05:26,520
所以我只是在这里直接去看我的故事板，

1316
01:05:26,589 --> 01:05:30,591
并把那个分割视图放在那里。好吧，就像我一直

1317
01:05:30,660 --> 01:05:33,094
建议，当你进行拆分查看时缩小，

1318
01:05:33,163 --> 01:05:36,330
因为它给你所有这种默认的东西。

1319
01:05:36,399 --> 01:05:39,634
所以我要在这里搜索拆分视图。这里是。

1320
01:05:39,702 --> 01:05:41,435
所以这里是我的分割视图控制器。

1321
01:05:41,504 --> 01:05:44,672
你可以把它拖出来，给我所有这些东西。和

1322
01:05:44,741 --> 01:05:47,442
我将删除所有它。所以我会摆脱这一点，

1323
01:05:47,511 --> 01:05:49,544
我会摆脱这一点，并摆脱这一点。

1324
01:05:49,613 --> 01:05:51,045
所以这里是我的分割视图。

1325
01:05:51,113 --> 01:05:54,049
我会通过移动小点来使它成为切入点

1326
01:05:54,117 --> 01:05:57,752
箭头。这是我的表情符号艺术视图控制器。

1327
01:05:57,820 --> 01:06:00,454
这是细节，对吧？这显然是细节。

1328
01:06:00,523 --> 01:06:03,090
主人明确选择我想要的一个，

1329
01:06:03,159 --> 01:06:06,794
我想要哪个文件。所以我要控制在这里拖动

1330
01:06:06,863 --> 01:06:10,131
把它设置为那里的细节。好，如此

1331
01:06:10,200 --> 01:06:12,666
现在我们该如何创建tableView主？好，

1332
01:06:12,735 --> 01:06:16,671
注意那个tableView是所有tableView，对吧？那MVC

1333
01:06:16,739 --> 01:06:18,940
全是tableView。我在那里没有任何其他用户界面，

1334
01:06:19,008 --> 01:06:20,641
只是文件的清单。所以

1335
01:06:20,710 --> 01:06:24,879
我打算在这里使用tableView预封装的控制器。

1336
01:06:24,948 --> 01:06:26,747
看，这里是tableView，只是视图，

1337
01:06:26,816 --> 01:06:28,650
这里是tableView，控制器。

1338
01:06:28,718 --> 01:06:31,452
所以我会把它拖出来。它使控制器正确

1339
01:06:31,520 --> 01:06:34,789
那里。我将把它嵌入导航控制器中。

1340
01:06:34,857 --> 01:06:36,857
你可能会说，为什么我需要这样做？

1341
01:06:36,926 --> 01:06:40,494
这是一款iPad专用应用程序。但实际上有一个案例

1342
01:06:40,563 --> 01:06:45,266
只有iPad你会在这里得到一个导航控制器，

1343
01:06:45,335 --> 01:06:48,869
这是你的肖像。你有另一个应用程序

1344
01:06:48,938 --> 01:06:52,373
就像我们有Safari一样。它堵塞了这件事

1345
01:06:52,442 --> 01:06:56,144
它把这件大事变成了一种导航

1346
01:06:56,212 --> 01:06:58,813
控制器。对苹果来说，这是一个非常酷的决定

1347
01:06:58,881 --> 01:07:01,682
部分，因为你主要学会了建立这种类型

1348
01:07:01,751 --> 01:07:05,419
无论如何，混合分割视图导航控制的东西所以

1349
01:07:05,488 --> 01:07:07,688
我们要去做。所以让我们选择这一个和

1350
01:07:07,757 --> 01:07:11,392
去嵌入导航控制器。和

1351
01:07:11,460 --> 01:07:13,928
然后是这个导航控制器的组合

1352
01:07:13,996 --> 01:07:18,933
我们的小表情符艺术文件选择器，将会

1353
01:07:19,002 --> 01:07:22,970
做我们的主人。所以我要过去这里，并按住Ctrl键

1354
01:07:23,039 --> 01:07:27,775
让这个我的主人。现在我将拥有这个tableView。

1355
01:07:27,843 --> 01:07:30,978
现在，它的身份是UITableViewController，

1356
01:07:31,047 --> 01:07:34,715
通用的UITableViewController。所以我要创建一个子类

1357
01:07:34,784 --> 01:07:37,819
的UITableViewController来控制这个表。

1358
01:07:37,887 --> 01:07:42,156
所以我要去File> New。这一次，当我创造可可

1359
01:07:42,225 --> 01:07:45,192
触摸类，它将成为一个子类

1360
01:07:45,261 --> 01:07:48,462
UITableViewController我会把它称为我的

1361
01:07:48,531 --> 01:07:53,033
EmojiArtDocument，Document，TableViewController。

1362
01:07:53,102 --> 01:07:57,505
那里有很长的名字。而这个控制器就是这样的

1363
01:07:57,574 --> 01:08:01,175
要在这里控制这个tableView。所以

1364
01:08:01,244 --> 01:08:03,945
让我们去选择它并检查它的身份

1365
01:08:04,014 --> 01:08:07,115
表情符号艺术文件表格视图控制器。现在我会

1366
01:08:07,183 --> 01:08:11,085
能够做我所有的神奇代表事物。事实上，

1367
01:08:11,154 --> 01:08:14,655
如果你看这个代码，那么！它给你很多

1368
01:08:14,724 --> 01:08:18,226
注释掉了与作为tableView有关的代码。

1369
01:08:18,295 --> 01:08:19,460
我将它创建为UITableViewController的子类。

1370
01:08:19,461 --> 01:08:20,626
因为你知道，

1371
01:08:20,696 --> 01:08:22,129
所以它知道它需要所有这些东西。

1372
01:08:22,198 --> 01:08:25,333
所以我会删除我们不会用到的那些

1373
01:08:25,401 --> 01:08:28,803
我们的视图控制器生命周期方法认识到这些？

1374
01:08:28,871 --> 01:08:32,140
呃，部分的数量，行数，cellForRowAt。

1375
01:08:32,208 --> 01:08:34,576
就在前面，这些是最重要的。

1376
01:08:34,644 --> 01:08:39,480
这些是UITableViewDataSource方法，

1377
01:08:39,549 --> 01:08:44,118
源方法在这里。所以我们想要实现这些

1378
01:08:44,187 --> 01:08:47,654
让这件事情起作用。现在和任何视图控制器一样，

1379
01:08:47,723 --> 01:08:51,526
或者我们创建的任何MVC，我们想要考虑它的模型是什么？

1380
01:08:51,594 --> 01:08:53,628
这是世界上最简单的模型。

1381
01:08:53,696 --> 01:08:56,464
这只是表情符号艺术文件的清单。

1382
01:08:56,533 --> 01:08:58,632
所以我会把它作为一个字符串列表。所以

1383
01:08:58,701 --> 01:09:04,539
这是var emojiArtDocuments，它是一个字符串列表。

1384
01:09:04,607 --> 01:09:06,640
我们甚至甚至会开始与一些。

1385
01:09:06,709 --> 01:09:11,512
记录一，记录二，记录三。

1386
01:09:11,581 --> 01:09:14,548
当然，现在，随着我们的应用程序的进展，我们会成为

1387
01:09:14,617 --> 01:09:17,385
允许添加新文档等，但我会

1388
01:09:17,453 --> 01:09:19,086
从三个文件开始，因为我们只是在尝试

1389
01:09:19,155 --> 01:09:20,855
学习一点关于tableView如何在这里工作。

1390
01:09:20,924 --> 01:09:22,724
这就是我的模型。所以这，

1391
01:09:22,792 --> 01:09:26,960
这张桌子会显示这个模型。那么，这个模型

1392
01:09:27,029 --> 01:09:30,197
没有足够的材料来制作部分，但是

1393
01:09:30,266 --> 01:09:34,468
你可以想象它会。如果我最近创建了，该怎么办？

1394
01:09:34,537 --> 01:09:37,238
文件，最近删除，其他类型的部分？

1395
01:09:37,307 --> 01:09:38,873
我可以有部分文件，但是

1396
01:09:38,942 --> 01:09:41,842
我不打算。所以我只会有一个部分。

1397
01:09:41,911 --> 01:09:44,678
肯定想在这里摆脱这个警告，

1398
01:09:44,747 --> 01:09:48,916
因为我已经完成了。那么这里是行数

1399
01:09:48,985 --> 01:09:51,919
部分。那么，我只有一个部分，所以

1400
01:09:51,987 --> 01:09:53,254
我不必检查该部分。

1401
01:09:53,323 --> 01:09:55,689
我不必说节段是否等于零，然后是什么。

1402
01:09:55,758 --> 01:09:56,424
如果部分等于1或

1403
01:09:56,493 --> 01:09:58,726
随你。所以在这里，它只是一个部分。

1404
01:09:58,795 --> 01:10:02,330
我只是要返回emojiArtDocuments.count。

1405
01:10:02,398 --> 01:10:06,266
这就是我所拥有的唯一部分有多少行

1406
01:10:06,335 --> 01:10:10,337
无论我有多少文件。然后我们找到了这个人

1407
01:10:10,406 --> 01:10:13,474
这里来dequeueReusableCell。请记住，

1408
01:10:13,542 --> 01:10:15,743
dequeueReusableCell真的有几件事。

1409
01:10:15,812 --> 01:10:18,312
首先，我们必须弄清楚我们会选择什么样的单元格

1410
01:10:18,381 --> 01:10:20,047
使用。在这里我只有名字，

1411
01:10:20,116 --> 01:10:21,516
所以我只是要使用基本的单元格。

1412
01:10:21,584 --> 01:10:24,518
我们将在周三看到如何做一个单元格的子类，但是

1413
01:10:24,587 --> 01:10:26,687
在这里，这只是基本的单元格。

1414
01:10:26,756 --> 01:10:29,657
所以我要回到我的故事板。

1415
01:10:29,725 --> 01:10:32,694
好的，我们走吧。注意它开始了，

1416
01:10:32,762 --> 01:10:35,329
它只有一个原型单元，但如果我想要更多

1417
01:10:35,398 --> 01:10:38,833
原型单元格，我所要做的就是点击tableView。

1418
01:10:38,901 --> 01:10:41,436
检查tableView本身。你总是可以知道是什么

1419
01:10:41,504 --> 01:10:43,838
被检查员的第一句话检查。

1420
01:10:43,906 --> 01:10:45,973
我只是去这里，看原型单元格一个。

1421
01:10:46,042 --> 01:10:49,310
我说，我想要二，三，四。而且你知道，

1422
01:10:49,379 --> 01:10:51,345
也许这是一个自定义单元格，

1423
01:10:51,414 --> 01:10:53,380
我想为它添加一个标签。

1424
01:10:53,449 --> 01:10:56,117
好吧，把这个标签拖出来，放在这里，

1425
01:10:56,186 --> 01:10:59,120
做自动布局，控制拖动，所有的东西。

1426
01:10:59,188 --> 01:11:02,723
我可以在这里创建任何我想要的UI。但如果我这样做，

1427
01:11:02,792 --> 01:11:05,526
我将不得不制作一个UITableView的自定义子类

1428
01:11:05,595 --> 01:11:08,729
单元格有所有这些东西的outlet。但我不会

1429
01:11:08,798 --> 01:11:11,298
做任何那，但。所以我只会拥有这个。

1430
01:11:11,367 --> 01:11:14,435
所以我要回到我的桌面视图，并且

1431
01:11:14,504 --> 01:11:18,172
比如说表格视图。有时很难点击

1432
01:11:18,241 --> 01:11:19,874
控制器与表视图

1433
01:11:19,942 --> 01:11:20,775
与单元格相比。

1434
01:11:20,843 --> 01:11:23,911
不要忘记Shift + Click是一个很好的方法。要么

1435
01:11:23,979 --> 01:11:26,713
你总是可以在这里找到你的文档大纲。

1436
01:11:26,782 --> 01:11:29,817
所以我要回到只有一个单元格。

1437
01:11:29,885 --> 01:11:32,686
顺便说一句，这里是我们所说的静态与动态之间的关系。

1438
01:11:32,755 --> 01:11:35,256
好的，所以我有这个。我会让它成为一个基本的

1439
01:11:35,325 --> 01:11:37,958
单元格。我甚至没有足够的信息作为小标题

1440
01:11:38,027 --> 01:11:40,061
单元格。我没有任何详细的文字信息。

1441
01:11:40,130 --> 01:11:41,228
我只是有它的名字。

1442
01:11:41,297 --> 01:11:42,997
这就是我要做的，拥有这个基本的单元格。

1443
01:11:43,066 --> 01:11:45,032
但它必须有一个重用标识符，

1444
01:11:45,101 --> 01:11:47,869
因为我们需要，当我们创建初始的时候，

1445
01:11:47,937 --> 01:11:51,639
它必须知道要复制的原型。所以我会调用

1446
01:11:51,707 --> 01:11:56,710
这是我的文档单元格。因为这是什么，这是一个单元格

1447
01:11:56,779 --> 01:12:01,515
代表一份文件。这很好。

1448
01:12:01,584 --> 01:12:05,920
所以让我们回到我们的代码吧。现在我们

1449
01:12:05,989 --> 01:12:10,857
可以取消对标识DocumentCell的ReusableCell进行排队。

1450
01:12:10,926 --> 01:12:14,228
这是我们唯一的一种，所以我们明显可以做到

1451
01:12:14,297 --> 01:12:17,164
那。而返回的单元格会是类型的

1452
01:12:17,233 --> 01:12:20,934
UITableViewCell中。我们知道它有这个不错的渠道，

1453
01:12:21,003 --> 01:12:23,237
基本上称为UITextLabel。

1454
01:12:23,305 --> 01:12:25,339
它们是可选的，这有点奇怪，

1455
01:12:25,407 --> 01:12:27,574
他们没有让它隐含地解开可选。

1456
01:12:27,643 --> 01:12:29,911
所以你必须在那里做那个问号。

1457
01:12:29,979 --> 01:12:32,646
无论如何，文本，现在我们必须去我们的模型，和

1458
01:12:32,715 --> 01:12:35,049
获取信息。我们必须这样做

1459
01:12:35,118 --> 01:12:37,752
此索引路径，此部分和行。那部分是

1460
01:12:37,820 --> 01:12:40,154
总是会成为零因为我只有一个部分。所以

1461
01:12:40,223 --> 01:12:44,492
我只是要使用这一行，并说给我我的

1462
01:12:44,561 --> 01:12:49,563
emojiArtDocument在indexPath.row。所以我

1463
01:12:49,632 --> 01:12:53,567
刚刚离开我的模型的那一行，信息。

1464
01:12:53,636 --> 01:12:56,504
这就是你需要做的所有工作。所以

1465
01:12:56,572 --> 01:13:02,309
让我们看看这个实际行动。这，我们走吧。

1466
01:13:02,378 --> 01:13:05,346
果然，在这里。它出现在这里左边。

1467
01:13:05,415 --> 01:13:10,084
哎呀，你可以在那里看到它。但是，让我做一点

1468
01:13:10,152 --> 01:13:12,853
容易看到，让我们隐藏其他人。我们走了。所以

1469
01:13:12,922 --> 01:13:16,690
这是在左边，我可以在这里选择它们。您可以

1470
01:13:16,759 --> 01:13:19,526
看我选择一，二，三。现在它会是真的

1471
01:13:19,595 --> 01:13:22,729
很酷的在这里能够添加新的文件，对吧？

1472
01:13:22,798 --> 01:13:24,198
那么我将如何添加新文档？

1473
01:13:24,266 --> 01:13:25,266
事实证明，这非常简单。

1474
01:13:25,334 --> 01:13:29,103
我只是要站在顶端，顶端

1475
01:13:29,172 --> 01:13:31,739
在这里排。在右边，我会放一点Add按钮。

1476
01:13:31,807 --> 01:13:34,708
当你点击它时，它会添加一个新文档。所以

1477
01:13:34,777 --> 01:13:39,846
让我们去做那个。开始了。而且我会在我的

1478
01:13:39,915 --> 01:13:44,451
故事板当然。现在这是醒觉的关键，

1479
01:13:44,520 --> 01:13:47,822
这是，当我们添加按钮到这些顶部

1480
01:13:47,890 --> 01:13:50,257
导航控制器的区域就在这里，

1481
01:13:50,325 --> 01:13:53,327
我们不添加常规按钮。所以我们不会在这里过去。

1482
01:13:53,395 --> 01:13:56,564
如果我搜索一个按钮，你会看到有这个

1483
01:13:56,632 --> 01:13:59,700
按钮，我们不这样做。它会让你这样做，但是

1484
01:13:59,769 --> 01:14:02,837
不要这样做，这是你想要的，一个bar按钮。

1485
01:14:02,906 --> 01:14:04,672
因为它位于顶部的一个小导航栏中，

1486
01:14:04,741 --> 01:14:08,242
这就是你想要的按钮。你会得到各种各样的

1487
01:14:08,311 --> 01:14:12,245
如果你在那里使用错误的按钮，会搞砸了。所以我们得到了这个

1488
01:14:12,314 --> 01:14:15,115
按钮，我正在检查顶部的按钮。

1489
01:14:15,184 --> 01:14:19,420
有一些预定义的按钮，如相机按钮

1490
01:14:19,488 --> 01:14:22,122
在那里，或者，我们有什么，

1491
01:14:22,191 --> 01:14:24,925
让我们保存一个保存按钮。

1492
01:14:24,994 --> 01:14:27,727
这只是一个词，还有Add和

1493
01:14:27,796 --> 01:14:29,162
添加恰好是一个加号。

1494
01:14:29,231 --> 01:14:32,266
我强烈建议使用这些预先定义的之一，

1495
01:14:32,334 --> 01:14:35,403
如果它描述你在做什么。因为通常你会

1496
01:14:35,471 --> 01:14:38,472
习惯于那个图标或那个正在做你期望的图像

1497
01:14:38,541 --> 01:14:42,142
在那里。现在这只是一个普通的bar按钮和

1498
01:14:42,211 --> 01:14:47,314
我们只需按住Ctrl拖动它即可创建出口，

1499
01:14:47,383 --> 01:14:52,319
所以让我们这样做。所以这里是我的控制器在右侧和

1500
01:14:52,388 --> 01:14:54,287
这里是按钮。那么我们把它放在哪里。

1501
01:14:54,356 --> 01:14:56,824
让我们把它放在我们的UI tableView数据源下面

1502
01:14:56,892 --> 01:14:58,025
方法就在这里。所以

1503
01:14:58,093 --> 01:15:00,894
我在这里控制从加号下拉。

1504
01:15:00,963 --> 01:15:04,431
这将是一个行动。我会把它称为新的EmojiArt，

1505
01:15:04,500 --> 01:15:07,234
这就是它所做的，它创建了一个新的表情符号艺术。

1506
01:15:07,303 --> 01:15:09,536
而且我将不会输入任何参数，

1507
01:15:09,605 --> 01:15:10,571
它会被键入。

1508
01:15:10,640 --> 01:15:12,874
酒吧按钮知道你可以在这里没有任何争论，

1509
01:15:12,942 --> 01:15:15,109
这对于酒吧按钮来说很有趣。

1510
01:15:15,177 --> 01:15:19,212
我必须有一个不同于常规按钮的参数

1511
01:15:19,281 --> 01:15:22,082
不知道。所以现在我们已经把这一点吸引到了所有我们所需要的

1512
01:15:22,151 --> 01:15:26,754
做的是使这个代码在这里，创建一个新的文件。

1513
01:15:26,823 --> 01:15:30,691
那真的很简单。我们只是会说

1514
01:15:30,759 --> 01:15:35,629
emojiArtDocument。我会做+ =并添加另一个数组

1515
01:15:35,697 --> 01:15:39,767
到它，+ =到一个数组，你必须有另一个数组。但

1516
01:15:39,835 --> 01:15:42,436
它只有一件事，它是无标题的。

1517
01:15:42,504 --> 01:15:45,339
这就是我要调用给我的新文件。但实际上

1518
01:15:45,408 --> 01:15:47,441
如果我已经有一些叫做无标题的东西呢？

1519
01:15:47,510 --> 01:15:50,444
我不想将两个文件添加到Untitled，所以

1520
01:15:50,512 --> 01:15:53,580
我将使用我创建的这个小工具，

1521
01:15:53,649 --> 01:15:55,849
称为madeUniquewithRespectTo。

1522
01:15:55,918 --> 01:15:58,686
它需要另一个数组，查找该数组和

1523
01:15:58,754 --> 01:16:01,321
确保它创造出独特的东西。

1524
01:16:01,390 --> 01:16:03,423
所以在这种情况下，我们会做无题1，无题2，

1525
01:16:03,492 --> 01:16:06,594
无题3，直到找到独特的东西。所以我是

1526
01:16:06,662 --> 01:16:10,631
会考虑到其他emojiArtDocuments。

1527
01:16:10,699 --> 01:16:11,932
所以这些小东西使得唯一，

1528
01:16:12,001 --> 01:16:14,068
在这个影像因素所在的同一个实用场所，所以

1529
01:16:14,136 --> 01:16:15,869
你可以稍后再看。这是很，

1530
01:16:15,938 --> 01:16:19,539
非常简单。现在这还不够。

1531
01:16:19,608 --> 01:16:22,976
我在这里改变了我的模型，现在我该怎么做？

1532
01:16:23,045 --> 01:16:24,411
>> [听不清]

1533
01:16:24,480 --> 01:16:25,612
>>更新表格，是的。

1534
01:16:25,681 --> 01:16:28,248
如果我不更新表格，我会不同步。

1535
01:16:28,317 --> 01:16:29,183
那么如何更新表格？

1536
01:16:29,252 --> 01:16:31,351
我只是要做tableView.reloadData。

1537
01:16:31,420 --> 01:16:34,020
我没有很多数据，它并不昂贵

1538
01:16:34,089 --> 01:16:38,125
重新加载它，所以让我们继续并重新加载数据，然后

1539
01:16:38,194 --> 01:16:42,263
跑。好吧，我们走吧。让我们，好吧，

1540
01:16:42,331 --> 01:16:45,099
我们仍然可以在这里选择，让我们去加，无标题，是的。

1541
01:16:45,167 --> 01:16:48,135
另外，再加上，加上，呜呼！不，我被带走了，

1542
01:16:48,203 --> 01:16:51,571
我做了太多。现在让我们删除。不，我不能删除，

1543
01:16:51,640 --> 01:16:54,341
我想轻扫删除，每个人都知道刷卡

1544
01:16:54,410 --> 01:16:56,610
删除。我怎么不能刷卡删除？好，

1545
01:16:56,679 --> 01:17:00,013
变成你必须明显参与删除，

1546
01:17:00,082 --> 01:17:02,550
因为当你删除的时候，这不仅仅是删除行，

1547
01:17:02,618 --> 01:17:05,719
它的更新模型也将被删除。所以

1548
01:17:05,788 --> 01:17:09,123
让我们一起去做吧。我们回到这里

1549
01:17:09,191 --> 01:17:11,758
接下来会出现的事情必须处理

1550
01:17:11,827 --> 01:17:15,763
这个。这是一个，canEditRow在indexPath。

1551
01:17:15,831 --> 01:17:18,399
这就是说你是否被允许删除这一行。

1552
01:17:18,468 --> 01:17:21,368
现在默认是肯定的，所以你实际上没有

1553
01:17:21,437 --> 01:17:24,137
必须执行此操作，如果您允许删除所有行。

1554
01:17:24,206 --> 01:17:27,975
这只是防止删除在这里发生的一种方法。

1555
01:17:28,044 --> 01:17:29,443
所以我们会允许我们所有的行

1556
01:17:29,512 --> 01:17:31,945
被删除，所以我甚至不会取消注释，但是

1557
01:17:32,014 --> 01:17:34,014
那为什么删除不起作用？好的，

1558
01:17:34,082 --> 01:17:34,948
如果这是默认的？

1559
01:17:35,017 --> 01:17:37,217
那么因为你也必须实现这个方法。

1560
01:17:37,286 --> 01:17:38,852
提交editingStyle，

1561
01:17:38,921 --> 01:17:42,422
editingStyle是删除或插入。你有

1562
01:17:42,491 --> 01:17:46,793
为了实现这一点，这意味着将它交给你的模型。和

1563
01:17:46,862 --> 01:17:49,263
所以这很容易做，它只是有一个如果删除或

1564
01:17:49,331 --> 01:17:52,532
一个if插入。这个插入是一种UITableView UI

1565
01:17:52,601 --> 01:17:55,569
加入，我们不需要那个因为我们有我们的加号按钮。

1566
01:17:55,638 --> 01:17:57,271
所以我不需要在这里做任何事情，

1567
01:17:57,339 --> 01:17:59,673
我只是要删除。甚至可以注意到它说，

1568
01:17:59,741 --> 01:18:02,342
从数据源中删除行，换句话说从

1569
01:18:02,411 --> 01:18:04,311
你的模型。那么我如何在这里删除它？

1570
01:18:04,380 --> 01:18:08,849
我只是会说emojiArtDocuments.remove（在：

1571
01:18:08,918 --> 01:18:13,587
indexPath.row）。然后我要更新表格

1572
01:18:13,656 --> 01:18:16,724
去做。我现在会告诉你，你，你们所有人，

1573
01:18:16,792 --> 01:18:19,793
当你做最后的项目时，你会搞砸这个

1574
01:18:19,862 --> 01:18:25,032
向上。因为这两件事必须完全同步。

1575
01:18:25,101 --> 01:18:27,667
如果你没有完全同步，你会的

1576
01:18:27,736 --> 01:18:31,071
发生这种情况时会发生崩溃。它会说这样的话，

1577
01:18:31,139 --> 01:18:34,007
当我去时，表中的行数不匹配

1578
01:18:34,076 --> 01:18:36,176
去更新行。好的，换句话说，

1579
01:18:36,244 --> 01:18:38,913
它是说你的模型和你的桌子不匹配。所以

1580
01:18:38,981 --> 01:18:39,913
很容易让它们不同步。

1581
01:18:39,982 --> 01:18:42,616
这是一个很容易脱身的简单情况

1582
01:18:42,685 --> 01:18:44,084
的同步，对吗？我们在模型中移动，

1583
01:18:44,153 --> 01:18:46,953
我们从表中删除行。但是，这是使用

1584
01:18:47,022 --> 01:18:50,457
例如，删除行而不是重新加载数据。那里

1585
01:18:50,525 --> 01:18:52,959
是删除行和移动它们的其他方式，等等。

1586
01:18:53,028 --> 01:18:58,132
更新它们，你可能会做错误的事情

1587
01:18:58,201 --> 01:19:02,403
在那里你如何更新你的模型。

1588
01:19:02,471 --> 01:19:05,806
所以现在我们应该可以轻扫删除。这是我们的

1589
01:19:05,875 --> 01:19:09,309
与一，二，三，加上，再加上，刷卡，好吧，

1590
01:19:09,378 --> 01:19:12,412
删除，并走了。另外，我不知道这是否是新的

1591
01:19:12,481 --> 01:19:16,182
iOS 11，你可以实际上一路滑过并删除，

1592
01:19:16,251 --> 01:19:20,354
在一个动作中，呐喊！哎呀，我没有走得太远。如果你

1593
01:19:20,422 --> 01:19:24,357
一直刷到边缘，它会被删除。如果你

1594
01:19:24,426 --> 01:19:29,363
只做部分方式，然后你到确认按钮。所以

1595
01:19:29,432 --> 01:19:31,464
这就是我们所有的时间，完美的时机。

1596
01:19:31,533 --> 01:19:34,034
这几乎是我们的表格视图。现在像我一样

1597
01:19:34,103 --> 01:19:36,937
比如说，我们不会去实际的部分

1598
01:19:37,006 --> 01:19:39,506
直到下周才有文件存储。因为我得到了

1599
01:19:39,574 --> 01:19:42,009
教你一点我们如何使事情持续下去

1600
01:19:42,077 --> 01:19:44,945
在光盘上的IOS中，可以将东西存储在光盘上。但

1601
01:19:45,013 --> 01:19:48,848
我们将在星期三做我们的整个用户界面

1602
01:19:48,917 --> 01:19:51,151
查看和拖放以添加更多的东西，以及

1603
01:19:51,220 --> 01:19:53,220
在左上角放置一个文本字段以添加更多表情符号。

1604
01:19:53,288 --> 01:19:55,523
所有这些，我们星期三会这样做。

1605
01:19:56,692 --> 01:19:58,458
所以我会看到你。 >>为

1606
01:19:58,527 --> 01:20:07,934
更多，请访问stanford.edu。

