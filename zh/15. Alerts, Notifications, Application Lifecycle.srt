1
00:00:00,401 --> 00:00:04,636
[音乐]

2
00:00:04,704 --> 00:00:10,009
斯坦福大学。 >>好吧，

3
00:00:10,077 --> 00:00:13,745
欢迎来到斯坦福CS193P，2017年秋季和

4
00:00:13,814 --> 00:00:18,016
18号的讲座编号为15.今天我们有三个主题

5
00:00:18,084 --> 00:00:21,986
你，一个是alert和action sheet。所以这是一种方式

6
00:00:22,055 --> 00:00:25,290
在非常事件发生时通知用户

7
00:00:25,358 --> 00:00:28,693
发生，或帮助您的用户做出分支决定

8
00:00:28,762 --> 00:00:32,364
现在应该去哪里，在哪里，你知道，

9
00:00:32,433 --> 00:00:34,933
两三个选择他们可以去的地方。

10
00:00:35,001 --> 00:00:38,103
我们要谈的第二件事是通知

11
00:00:38,172 --> 00:00:40,806
和KVO，这是一种沟通方式盲目和

12
00:00:40,875 --> 00:00:43,408
在我们的MVC内部构建，然后最终，

13
00:00:43,477 --> 00:00:46,211
我要谈论应用程序生命周期。

14
00:00:46,280 --> 00:00:48,713
我们已经讨论过视图控制器的生命周期

15
00:00:48,782 --> 00:00:51,750
现在我们要谈谈你的应用程序的生命周期。

16
00:00:51,819 --> 00:00:53,384
好吧，让我们从Alerts和

17
00:00:53,453 --> 00:00:56,421
action sheet。这两件事情非常相似，

18
00:00:56,490 --> 00:00:59,357
使用它们的API几乎完全相同，所以我总是说话

19
00:00:59,426 --> 00:01:02,961
关于他们在一起。他们有点不同，

20
00:01:03,029 --> 00:01:05,831
一个alert，它弹出在屏幕中间。

21
00:01:05,899 --> 00:01:08,667
他们都是模态，他们有点接管你的屏幕，但是，

22
00:01:08,736 --> 00:01:10,001
alert弹出在中间。

23
00:01:10,070 --> 00:01:13,538
通常，无论alert告诉你还是问你，

24
00:01:13,607 --> 00:01:17,175
你只会有一个或两个选择来回应。

25
00:01:17,244 --> 00:01:20,245
即使有三个按钮，也不常见有alert

26
00:01:20,313 --> 00:01:23,548
在里面。它通常用于异步事物，

27
00:01:23,617 --> 00:01:26,718
像网络故障或发生的事情

28
00:01:26,787 --> 00:01:29,921
的普通。你不想仅仅使用alert

29
00:01:29,990 --> 00:01:33,224
一种与用户交谈并向他们询问是或否的问题的方式，

30
00:01:33,293 --> 00:01:35,927
像这样的东西。alert对用户来说非常具有破坏性

31
00:01:35,995 --> 00:01:38,529
界面体验，因为他们锁定了整个应用程序

32
00:01:38,598 --> 00:01:41,433
并迫使你处理这件事。

33
00:01:41,501 --> 00:01:43,134
所以它不是主要的，

34
00:01:43,203 --> 00:01:45,103
种类的用户界面元素，

35
00:01:45,171 --> 00:01:48,440
它更像是一种紧急情况，异步，

36
00:01:48,509 --> 00:01:52,544
不寻常的，那种事情。现在一个action sheet是类似的

37
00:01:52,613 --> 00:01:55,714
因为它是模态的，占据了屏幕，但在这里你是

38
00:01:55,783 --> 00:01:59,084
几乎总是会有两个以上的选择。这东西

39
00:01:59,152 --> 00:02:01,820
从底部向上滑动，你通常会有两个，

40
00:02:01,889 --> 00:02:05,290
三，四，五个选择，甚至。在这里，你是什么

41
00:02:05,359 --> 00:02:07,859
这样做是要求用户做出分支决定。

42
00:02:07,928 --> 00:02:09,595
也许他们要求拍照，

43
00:02:09,663 --> 00:02:11,729
在他们的应用中获取图片，并且您想知道，

44
00:02:11,798 --> 00:02:13,031
你想从照相机还是照相机？

45
00:02:13,100 --> 00:02:14,766
你想从照片库中得到它，还是

46
00:02:14,835 --> 00:02:16,301
你想从别的地方找到它吗？

47
00:02:16,369 --> 00:02:18,270
所以他们就在那里分支

48
00:02:18,338 --> 00:02:20,772
在做出决定之前，你无法真正帮助他们

49
00:02:20,840 --> 00:02:23,441
对你来说，这就是action sheet的作用。不是

50
00:02:23,510 --> 00:02:26,310
就像一个alert，因为它是针对特殊情况的，

51
00:02:26,379 --> 00:02:30,148
这是正常的分支决策，你会有

52
00:02:30,217 --> 00:02:32,450
制造。所以这就是这些东西的样子

53
00:02:32,519 --> 00:02:34,786
一张action sheet就像那样从底部向上滑动，

54
00:02:34,855 --> 00:02:37,322
虽然它可以有几乎任何数量的按钮

55
00:02:37,390 --> 00:02:40,291
显然，你不希望它填满整个屏幕。

56
00:02:40,360 --> 00:02:42,193
然后一个alert，你已经看到了这些，

57
00:02:42,262 --> 00:02:44,062
他们出现在屏幕中间，

58
00:02:44,131 --> 00:02:47,499
他们甚至可能在他们中也有一个小文本字段。

59
00:02:47,567 --> 00:02:50,068
所以，再次，他们的API，即使用它们，

60
00:02:50,137 --> 00:02:52,837
你写的代码几乎是相同的，所以让我们来

61
00:02:52,906 --> 00:02:55,807
先谈谈其中的一个，那就是actionSheet。现在，

62
00:02:55,875 --> 00:02:59,878
他们的工作方式，他们只是UIViewController。

63
00:02:59,946 --> 00:03:01,112
他们没有什么特别的，

64
00:03:01,181 --> 00:03:02,447
他们只是UIViewControllers。

65
00:03:02,516 --> 00:03:06,250
你知道，我们了解了如何呈现一个UIViewController

66
00:03:06,319 --> 00:03:10,655
当我们把我们的表情符号艺术放在最后的讲座中时

67
00:03:10,724 --> 00:03:12,890
控制器文件模式，

68
00:03:12,959 --> 00:03:16,027
它接管了整个屏幕直到我们说完成。

69
00:03:16,096 --> 00:03:17,429
这里有同样的事情alert和

70
00:03:17,498 --> 00:03:20,365
action sheet。这个UIAlertController是

71
00:03:20,433 --> 00:03:23,101
一个UIViewController，我们只是要使用它

72
00:03:23,170 --> 00:03:26,003
与我们用来呈现文档的方法完全相同。

73
00:03:26,072 --> 00:03:28,807
它被称为礼物，但我们不会通过获得来创造它

74
00:03:28,875 --> 00:03:31,276
它就像我们对文档所做的一样。

75
00:03:31,344 --> 00:03:33,945
我们要用这个初始化器创建它，

76
00:03:34,014 --> 00:03:37,582
UIAlertController标题消息preferredStyle。所以

77
00:03:37,651 --> 00:03:40,118
标题就是你可以在左边看到的标题，

78
00:03:40,187 --> 00:03:41,986
标题所在的图像，对吗？

79
00:03:42,055 --> 00:03:45,290
这是Redeploy Cassini顶级的小东西，然后

80
00:03:45,358 --> 00:03:48,393
消息传到卡西尼的命令下面

81
00:03:48,462 --> 00:03:51,396
指导系统。然后preferredStyle也是

82
00:03:51,464 --> 00:03:54,766
actionSheet或alert。所以，这就是它的样子

83
00:03:54,834 --> 00:03:58,503
actionSheet。现在，你创建你的actionSheet和

84
00:03:58,572 --> 00:04:01,573
那么你想添加动作，这些动作对应

85
00:04:01,641 --> 00:04:04,509
按钮。所以，我们在那里有四项行动

86
00:04:04,577 --> 00:04:07,745
例如我们要在这里控制卡西尼，等等

87
00:04:07,814 --> 00:04:10,648
我们会有四次我们要调用addAction。

88
00:04:10,717 --> 00:04:14,519
addAction的参数只有一个参数，

89
00:04:14,587 --> 00:04:18,390
这是一个UIAlertAction。这是另一个对象和

90
00:04:18,459 --> 00:04:20,992
让我们来看看初始化器

91
00:04:21,061 --> 00:04:23,728
UIAlertAction。它需要一个标题，这将是

92
00:04:23,797 --> 00:04:26,698
出现在按钮上的标题，一种风格，我们会谈谈

93
00:04:26,767 --> 00:04:29,701
关于这一刻的风格，然后是处理程序和

94
00:04:29,770 --> 00:04:32,370
一个处理程序只是你要给它的一个闭包。它需要

95
00:04:32,439 --> 00:04:35,106
作为一个参数的行动，以便它在你的右手边，

96
00:04:35,174 --> 00:04:37,809
当你按下按钮时你会做任何事情

97
00:04:37,877 --> 00:04:39,777
点击。所以，这个alert在行动中，

98
00:04:39,846 --> 00:04:44,549
工作表有一个非常简单的API，你只需把这些按钮和

99
00:04:44,618 --> 00:04:47,585
每个人都随身携带的代码。

100
00:04:47,654 --> 00:04:51,590
所以这个处理程序，我们的第一个按钮，轨道土星，

101
00:04:51,658 --> 00:04:54,125
只是一个正常的按钮，所以它的风格是

102
00:04:54,194 --> 00:04:58,230
UIAlertActionStyle.default。在那里的处理程序，

103
00:04:58,298 --> 00:05:01,032
我只是要绕土星进入轨道。和

104
00:05:01,101 --> 00:05:03,969
那是某人，大概是按下了这个按钮一次，

105
00:05:04,038 --> 00:05:06,137
卡西尼做到了，现在完成了，

106
00:05:06,205 --> 00:05:08,974
但它在一个点上做到了。所以这只是正常的

107
00:05:09,042 --> 00:05:12,143
默认情况下，这里的行动是对土星的轨道，对吧？

108
00:05:12,211 --> 00:05:15,279
我现在可以添加另一个动作，也许探索泰坦，

109
00:05:15,348 --> 00:05:17,582
好吧，这不是卡西尼的使命，但是

110
00:05:17,651 --> 00:05:20,751
也许我们可以允许它，如果我们让，登录人。

111
00:05:20,820 --> 00:05:24,222
因此，在那里的处理程序，我已经要求他们登录进行验证

112
00:05:24,290 --> 00:05:28,627
他们真的想把卡西尼转移到泰坦队，对吗？

113
00:05:28,695 --> 00:05:31,563
下一个，太阳的特写呢？

114
00:05:31,632 --> 00:05:34,265
那么，如果我真的想发送，这卡西尼闭包

115
00:05:34,334 --> 00:05:37,068
太阳，那几乎肯定会毁掉卡西尼。

116
00:05:37,137 --> 00:05:40,304
这就是为什么它有一个不同的风格，其中

117
00:05:40,373 --> 00:05:43,908
是破坏性的，你看到它说的风格。破坏性的？所以

118
00:05:43,977 --> 00:05:48,313
一个具有破坏性的物品会以红色文字显示出来

119
00:05:48,382 --> 00:05:52,116
那里，这是任何选择，将使我们，

120
00:05:52,185 --> 00:05:57,288
发生了一些重大的不可恢复的行为。

121
00:05:57,357 --> 00:05:58,573
你会从数据库中删除一些东西。

122
00:05:58,574 --> 00:05:59,790
例如，

123
00:05:59,859 --> 00:06:02,961
这可能是一种破坏性行为，显然会崩溃

124
00:06:03,029 --> 00:06:06,497
卡西尼进入太阳，这将是一个破坏性的行动，

125
00:06:06,566 --> 00:06:09,301
所以这就是破坏性的风格。和

126
00:06:09,369 --> 00:06:11,636
那么，最后，我们在底部有这个取消行动，

127
00:06:11,705 --> 00:06:13,271
你看它有点分开了？

128
00:06:13,340 --> 00:06:14,572
它的风格不同，

129
00:06:14,641 --> 00:06:17,642
.cancel，这就是它导致它被分离的原因。但非常

130
00:06:17,710 --> 00:06:20,778
关于.cancel的另一件重要的事情是，在iPad上，

131
00:06:20,847 --> 00:06:23,849
这件事不会从底部滑落。它会

132
00:06:23,917 --> 00:06:25,917
出现在我们还没有谈到的popover中，

133
00:06:25,985 --> 00:06:27,652
星期三我们会谈谈所有的事情。

134
00:06:27,720 --> 00:06:31,022
但一个popover也是模式，有点接管屏幕，

135
00:06:31,091 --> 00:06:33,825
但它出现在一个小窗口里，在那里，

136
00:06:33,894 --> 00:06:35,726
你不能有取消按钮，

137
00:06:35,795 --> 00:06:39,398
因为触摸某个地方而导致popover被取消。

138
00:06:39,466 --> 00:06:40,932
如果你想取消它，一个popover会出现，

139
00:06:41,001 --> 00:06:42,834
你触摸别的地方，所以你不需要取消，

140
00:06:42,903 --> 00:06:45,704
你不想取消按钮。这就是为什么它很重要

141
00:06:45,772 --> 00:06:48,406
注意你的哪些按钮是取消按钮，所以

142
00:06:48,475 --> 00:06:50,375
当这种情况出现在流行时，

143
00:06:50,443 --> 00:06:54,446
此处的操作表将不包括该取消按钮。

144
00:06:54,514 --> 00:06:56,948
好的，所以我们添加了我们的四个按钮，

145
00:06:57,017 --> 00:06:59,584
现在我们希望这个东西能够滑到底部

146
00:06:59,653 --> 00:07:02,154
让用户选择并执行相应的操作

147
00:07:02,222 --> 00:07:04,589
处理程序，我们用相同的方法做到这一点，

148
00:07:04,658 --> 00:07:07,625
当下。这是一个ViewController方法，

149
00:07:07,694 --> 00:07:10,595
大概是那里的ViewController，你可以看到

150
00:07:10,664 --> 00:07:13,565
它有卡西尼的照片。那个ViewController

151
00:07:13,634 --> 00:07:16,367
正在介绍这个action sheet，它是，你知道，

152
00:07:16,436 --> 00:07:19,870
目前的视图控制器，动画真实，几乎总是，

153
00:07:19,939 --> 00:07:22,974
然后完成处理程序，如果你想为哪个将

154
00:07:23,043 --> 00:07:26,277
当动画结束时被调用。就是这样了，

155
00:07:26,346 --> 00:07:27,712
超级容易使用alert。

156
00:07:27,781 --> 00:07:31,349
现在让我们来谈谈，顺便说一下，这是一个操作表。

157
00:07:31,417 --> 00:07:34,285
因此，让我们来谈谈它在iPad上的外观，但是，

158
00:07:34,354 --> 00:07:37,522
我说这是一个popover，这是它的样子。

159
00:07:37,590 --> 00:07:40,091
在这种情况下，你看到那个小重新部署按钮？

160
00:07:40,160 --> 00:07:41,959
它的字体很小，但是

161
00:07:42,028 --> 00:07:44,762
它说重新部署在iPad的右上角。

162
00:07:44,831 --> 00:07:48,633
当我点击它时，这个动作表就表现得很好，

163
00:07:48,701 --> 00:07:51,669
首先，我如何让它呈现如此？

164
00:07:51,738 --> 00:07:53,905
其次，我怎样才能让它指向

165
00:07:53,974 --> 00:07:56,808
小重新部署按钮。所以我必须这样做

166
00:07:56,877 --> 00:08:00,111
的东西。我要做的第一件事就是让它出现

167
00:08:00,179 --> 00:08:03,114
像一个popover。为此，我设置了alert，

168
00:08:03,183 --> 00:08:05,616
这是一个视图控件记住，我设置

169
00:08:05,685 --> 00:08:10,188
它是modalPresentationStyle是.popover。这就是了

170
00:08:10,256 --> 00:08:12,890
让它代表一个popover。但事实并非如此

171
00:08:12,959 --> 00:08:15,593
相当不够，因为我不得不在这一点上提出一个视图

172
00:08:15,662 --> 00:08:18,463
重新部署酒吧按钮项目。我这样做的方式

173
00:08:18,532 --> 00:08:21,999
是我得到alert弹出式演示控制器，

174
00:08:22,068 --> 00:08:25,504
如果你不把它当作弹出窗口，这将是零。

175
00:08:25,572 --> 00:08:28,239
在popover演示文稿中的其中一个变量

176
00:08:28,307 --> 00:08:31,242
控制器是呈现它的barButton项目。

177
00:08:31,311 --> 00:08:33,077
你也可以指定一个矩形，

178
00:08:33,146 --> 00:08:34,478
一个任意的矩形和

179
00:08:34,547 --> 00:08:38,083
当它出现时，这个小三角形就会指向它。

180
00:08:38,151 --> 00:08:41,085
您还可以指定小箭头的方向

181
00:08:41,154 --> 00:08:45,056
允许指向，左，右，上或下。就这样

182
00:08:45,125 --> 00:08:48,693
你可以控制这个弹出窗口的方式。

183
00:08:48,761 --> 00:08:51,295
这有意义吗？现在你可能会说，

184
00:08:51,364 --> 00:08:56,267
好吧，如果我在iPad上，那么我需要提出这个问题，

185
00:08:56,335 --> 00:08:58,169
对？因为显然在iPhone上我不想要

186
00:08:58,237 --> 00:09:01,038
这东西是一个popover。但实际上，你没有

187
00:09:01,107 --> 00:09:04,509
要这样做，因为这个完全相同的代码仍然会滑动

188
00:09:04,577 --> 00:09:07,712
从iPhone的底部。现在，为什么会发生？

189
00:09:07,781 --> 00:09:10,614
我们特意询问了popover演示风格

190
00:09:10,683 --> 00:09:13,518
那里，我们指定了barButton项目和所有。

191
00:09:13,587 --> 00:09:18,089
那么，iOS会自动做我们称之为适应的事情

192
00:09:18,158 --> 00:09:21,359
对环境的影响。特质环境，

193
00:09:21,428 --> 00:09:23,360
正确，紧凑的宽度和/或没有，和

194
00:09:23,429 --> 00:09:26,497
所有我们之前谈到的东西，也是平台

195
00:09:26,566 --> 00:09:29,567
它在某种程度上。所以这里注意到，

196
00:09:29,636 --> 00:09:33,337
以及我在iPhone上，我不会做弹出。其实，

197
00:09:33,406 --> 00:09:36,474
我们会谈论你可以在iPhone上做弹出，但是

198
00:09:36,542 --> 00:09:39,244
你必须做非凡的事情来做到这一点。所以

199
00:09:39,312 --> 00:09:40,912
在事件的正常情况下，它不会弹出窗口，

200
00:09:40,981 --> 00:09:44,615
所以这是正常的方式。所以

201
00:09:44,684 --> 00:09:45,850
如果你正在做一个popover，并且

202
00:09:45,919 --> 00:09:48,286
你有一个在iPad和iPhone上运行的通用应用程序，

203
00:09:48,354 --> 00:09:52,156
你会把这个模态演示文件放在那里。

204
00:09:52,225 --> 00:09:58,262
好吧，让我们来谈谈alert。

205
00:09:58,331 --> 00:10:02,600
同样确切的构造函数，您只需说出首选样式

206
00:10:02,669 --> 00:10:06,838
alert，同样的确切添加动作。和

207
00:10:06,906 --> 00:10:08,539
在这里我添加我的取消按钮，

208
00:10:08,608 --> 00:10:11,943
我将它标记为.cancel加上导入alert，因为它

209
00:10:12,012 --> 00:10:15,046
在任何情况下都不会隐藏取消按钮

210
00:10:15,114 --> 00:10:19,751
在iPad和iPhone上完全一样。然后我是

211
00:10:19,819 --> 00:10:22,887
要在这里添加另一个动作，这是我的登录按钮。

212
00:10:22,956 --> 00:10:25,756
现在，我的登录按钮将使用该文本字段，

213
00:10:25,825 --> 00:10:28,492
你看到那个文本字段？所以，我怎么得到一个文本

214
00:10:28,561 --> 00:10:30,861
字段出现在我的戒备中间？

215
00:10:30,930 --> 00:10:34,065
那么，我只是说alert.addTextField，和

216
00:10:34,134 --> 00:10:37,268
该添加文本字段的参数是闭包

217
00:10:37,337 --> 00:10:38,937
将文本字段传递给您和

218
00:10:39,005 --> 00:10:42,440
允许您配置它。这是一个密码

219
00:10:42,509 --> 00:10:44,809
将卡西尼重新部署到太阳，泰坦，或者

220
00:10:44,878 --> 00:10:48,713
一些东西。所以我希望它有安全的文本输入，所以

221
00:10:48,781 --> 00:10:51,649
我正在使用文本字段var，有安全的文本输入

222
00:10:51,718 --> 00:10:54,718
这是文本输入特征协议的一部分

223
00:10:54,787 --> 00:10:58,188
文本字段实现。你可以不止一次这样做，

224
00:10:58,257 --> 00:10:59,690
你可以有多个文本字段。

225
00:10:59,759 --> 00:11:03,594
我建议反对这一点，我一般不推荐

226
00:11:03,663 --> 00:11:06,664
使用alert作为登录屏幕。不要这样做

227
00:11:06,733 --> 00:11:07,398
你的最终项目。

228
00:11:07,467 --> 00:11:08,399
如果您有登录屏幕，

229
00:11:08,468 --> 00:11:12,169
使其成为您的用户界面的正常组成部分，不要让它成为alert。

230
00:11:12,238 --> 00:11:15,973
但无论如何，一旦你得到这个文本字段添加这个和

231
00:11:16,042 --> 00:11:19,143
配置，那么当某人如何获得文本

232
00:11:19,212 --> 00:11:22,213
输入文字。那么在你的动作处理器中

233
00:11:22,281 --> 00:11:26,550
在那里登录，我只是要使用它的变种

234
00:11:26,619 --> 00:11:29,653
alert称为文本字段，它是所有文本的数组

235
00:11:29,722 --> 00:11:32,189
领域。我只有一个，所以我会得到第一个和

236
00:11:32,258 --> 00:11:33,725
那么我会从中获取文本。

237
00:11:35,361 --> 00:11:36,161
不能更简单。

238
00:11:37,764 --> 00:11:41,766
好吧，我几乎毫不犹豫地告诉你alert

239
00:11:41,834 --> 00:11:43,968
在那里的文本字段，因为它让你说，

240
00:11:44,036 --> 00:11:45,970
这是从用户获取文本的好方法，但是

241
00:11:46,039 --> 00:11:50,107
alert再次具有破坏性，所以不要使用它们。

242
00:11:50,176 --> 00:11:53,111
好吧，我将以同样的方式呈现

243
00:11:53,179 --> 00:11:56,948
我用这种方法呈现了action sheet，

244
00:11:57,017 --> 00:11:59,817
其中呈现。只是所有的礼物都会呈现

245
00:11:59,885 --> 00:12:03,021
模态视图控制器？当然这是一种模式

246
00:12:03,089 --> 00:12:05,790
因为整个屏幕变暗了，除了

247
00:12:05,859 --> 00:12:10,061
这个中间的盒子。好，如我所说，

248
00:12:10,130 --> 00:12:13,431
在iPad上，alert看起来完全一样。

249
00:12:13,500 --> 00:12:18,402
没有区别。所以这是alert，所以让我们放

250
00:12:18,471 --> 00:12:21,305
表情符号艺术中的一个alert，只是我们可以看到这个行动。

251
00:12:21,374 --> 00:12:25,844
这是我要提出的alert。现在，EmojiArt，

252
00:12:25,912 --> 00:12:29,214
如果您将任何图像拖入EmojiArt，它将起作用。

253
00:12:29,282 --> 00:12:31,148
那是因为我有这个图像获取器，

254
00:12:31,217 --> 00:12:31,950
记住那和

255
00:12:32,018 --> 00:12:35,086
图像获取器允许您指定备份图像。

256
00:12:35,154 --> 00:12:38,556
所以如果我无法从URL中获取图片

257
00:12:38,625 --> 00:12:39,924
与图像提取器，没有问题，

258
00:12:39,993 --> 00:12:42,326
我将使用备份映像并在磁盘上创建一个映像

259
00:12:42,395 --> 00:12:43,795
用它作为URL。

260
00:12:43,863 --> 00:12:47,765
那么该解决方案在iCloud驱动器中效果不佳。

261
00:12:47,834 --> 00:12:50,969
因为我在iPad上创建了EmojiArt文档，

262
00:12:51,037 --> 00:12:53,304
我拖着一些我无法得到它的URL的东西

263
00:12:53,372 --> 00:12:56,206
我只是把图像放在本地。我把它放在iCloud Drive上，

264
00:12:56,275 --> 00:12:59,243
我去看看我的iPhone，我看着它，我看不到它。

265
00:12:59,312 --> 00:13:02,413
因为它使用的是我iPad上的备份图片。所以

266
00:13:02,482 --> 00:13:05,983
我要修理我的EmojiArt只是为了不接受

267
00:13:06,052 --> 00:13:09,086
那些事。所以如果你拖入我无法得到的东西

268
00:13:09,155 --> 00:13:10,555
其来自URL的图像，

269
00:13:10,623 --> 00:13:13,257
我只是会拒绝它。现在我可以安静地

270
00:13:13,326 --> 00:13:16,594
拒绝它。用户可能会喜欢，发生了什么事

271
00:13:16,663 --> 00:13:18,829
上？我一直拖着这个，它不会承担。

272
00:13:18,898 --> 00:13:20,431
但是如果我提醒一下，那会更好

273
00:13:20,500 --> 00:13:23,668
说，我无法从该网址获取图片，抱歉，没关系

274
00:13:23,736 --> 00:13:26,771
这就是我们要做的。但是，一旦我习惯了

275
00:13:26,840 --> 00:13:30,541
那么，我可能不希望它每次都出现。

276
00:13:30,610 --> 00:13:33,611
因为当我拖入一张不好的图像时，我确实得到了反馈，

277
00:13:33,679 --> 00:13:35,079
它什么都不做。

278
00:13:35,148 --> 00:13:37,381
最终我会学习，我不能拖入其中，

279
00:13:37,450 --> 00:13:39,250
我将不得不挑选别的东西。所以

280
00:13:39,318 --> 00:13:41,151
我要让我的alert有两个按钮。

281
00:13:41,220 --> 00:13:44,822
一个是不断告诫我，另一个是

282
00:13:44,890 --> 00:13:47,491
停止警告我这件事。这是唯一的两个

283
00:13:47,560 --> 00:13:50,227
我的alert上的按钮。alert否则就是要说

284
00:13:50,296 --> 00:13:51,763
我无法从该网址获取图片。

285
00:13:51,831 --> 00:13:54,699
所以这就是我们要建立的，所以让我们去做。

286
00:13:58,170 --> 00:14:00,738
对于我们的emojiArt，我们来了。所以这里是emojiArt，

287
00:14:00,806 --> 00:14:03,441
如果你还记得，我们会尽我们所有的形象贬低

288
00:14:03,509 --> 00:14:07,244
在这里我们草稿交互的代表在这里。

289
00:14:07,313 --> 00:14:08,479
这里是imageFetcher，

290
00:14:08,548 --> 00:14:12,383
这是我们获取网址时所丢弃的内容，我们将其一起提取

291
00:14:12,452 --> 00:14:15,586
imageFetcher。但是，如果我们得到一张图片，我们将其用作

292
00:14:15,654 --> 00:14:18,755
备用图片。所以我们不会再这样做了，

293
00:14:18,824 --> 00:14:22,393
实际上，我会一起停止使用imageFetcher。

294
00:14:22,461 --> 00:14:25,329
所以我只是要评论一下imageFetcher。代替

295
00:14:25,398 --> 00:14:28,132
我要做的是你在做作业时做了什么，

296
00:14:28,201 --> 00:14:31,135
希望。我们上周做了什么，或者

297
00:14:31,203 --> 00:14:33,170
前一周，在ImageViewController中，

298
00:14:33,239 --> 00:14:35,740
我只是直接拿这个东西。

299
00:14:35,808 --> 00:14:37,608
现在我必须要注意的一件事是我没有

300
00:14:37,677 --> 00:14:42,312
想阻止主队列。而这个闭包，就是那个

301
00:14:42,381 --> 00:14:46,751
加载对象，复数，我在会议上做的。这个

302
00:14:46,820 --> 00:14:50,687
是一种方便的方法，它调用主队列。

303
00:14:50,756 --> 00:14:53,357
所以这个闭包就在这个主队列上。所以我不这样做

304
00:14:53,426 --> 00:14:56,894
想要的是，我想派遣主队列。所以我

305
00:14:56,962 --> 00:15:01,765
会做DispatchQueue.global队列。我会得到

306
00:15:01,834 --> 00:15:05,803
做userInitiated，因为用户确实放弃了这一点

307
00:15:05,872 --> 00:15:08,439
大概是要求我现在就去做。

308
00:15:08,507 --> 00:15:11,142
我要异步执行此操作

309
00:15:11,210 --> 00:15:15,846
块。而我要在这个区块做的是去尝试和

310
00:15:15,915 --> 00:15:18,949
获取该图像。所以我会说，如果我可以让图像

311
00:15:19,018 --> 00:15:24,688
数据等于试图要求数据获取内容

312
00:15:24,757 --> 00:15:28,559
这个网址，但我实际上会使用图片网址。

313
00:15:28,628 --> 00:15:32,263
当你在作业中学习时，有时你需要按摩

314
00:15:32,332 --> 00:15:35,733
那个网址有点让正确的东西从那里出来。

315
00:15:35,802 --> 00:15:39,737
然后我会让image = UIImage

316
00:15:39,805 --> 00:15:43,841
数据，如果可以的话，imageData。如果我成功了

317
00:15:43,910 --> 00:15:44,676
要做到这一切，

318
00:15:44,744 --> 00:15:46,410
我在另一个线程中完成了所有这一切

319
00:15:46,478 --> 00:15:50,915
很好，我不会阻止用户界面。现在我可以使用这个URL

320
00:15:50,984 --> 00:15:52,483
绝对正常。当然，

321
00:15:52,552 --> 00:15:56,888
我想现在派遣回主队列。好吧？

322
00:15:56,956 --> 00:16:01,059
因为我会做UI的事情，这就是我要说的，

323
00:16:01,127 --> 00:16:06,096
self.emojiArtBackgroundImage = [url，image]。

324
00:16:06,165 --> 00:16:11,069
我也要去做docself.documentChanged。

325
00:16:13,472 --> 00:16:17,107
这是调用过去被称为保存的方法。

326
00:16:17,176 --> 00:16:19,676
然后在最后一次讲座之后，我告诉你我要走了

327
00:16:19,745 --> 00:16:22,446
使用委托来自动跟踪更改。

328
00:16:22,515 --> 00:16:23,381
那么这是我的一个变化

329
00:16:23,449 --> 00:16:25,182
必须跟踪。如果您更改背景图像，

330
00:16:25,251 --> 00:16:27,050
我必须让文件知道它已经改变了。

331
00:16:27,119 --> 00:16:29,520
我们将稍稍查看文档更改

332
00:16:29,589 --> 00:16:32,256
稍后的演示，今天。这与保存完全一样，

333
00:16:32,325 --> 00:16:34,157
我只是将它更名为文档更改。但

334
00:16:34,226 --> 00:16:37,128
我们绝对想在这里做到这一点。现在，这是蹭。

335
00:16:37,197 --> 00:16:40,797
这是警戒魔法。如果我不能那样做，

336
00:16:40,866 --> 00:16:43,800
如果我无法从那里获得那张图片。现在我

337
00:16:43,869 --> 00:16:47,638
想要发出alert而不是使用该备份映像。所以

338
00:16:47,707 --> 00:16:52,610
我要在这里说，self.presentBadURLWarning，

339
00:16:52,679 --> 00:16:56,647
而且我会实际传递网址。

340
00:16:56,716 --> 00:16:58,482
现在，我为什么要传递该网址？

341
00:16:58,550 --> 00:17:01,518
我不会因时间原因来做这件事，但你知道是什么

342
00:17:01,587 --> 00:17:04,689
将是一件非常酷的事情，有人在拖东西，

343
00:17:04,757 --> 00:17:07,258
它提出了alert。他们就像，不要再警告我。

344
00:17:07,326 --> 00:17:10,661
他们说停止。但随后他们又拖入另一个

345
00:17:10,729 --> 00:17:13,864
它不起作用。然后他们尝试一个不同的和

346
00:17:13,933 --> 00:17:18,035
它不起作用。它们就像是破碎的。他们已经

347
00:17:18,104 --> 00:17:20,838
有人忘记了他们说停止警告我。

348
00:17:20,906 --> 00:17:22,940
所以不知何故，你可能想要这个alert来

349
00:17:23,009 --> 00:17:26,644
回来。在某个时候，对吧？什么将是一个很酷的方式

350
00:17:26,713 --> 00:17:31,082
要做到这一点？如果他们拖动相同的网址两次，那么怎么样。

351
00:17:31,150 --> 00:17:34,351
因为那是他们说的，把它拖进去。它不起作用。

352
00:17:34,420 --> 00:17:37,355
为什么它不工作？让我再尝试一次。那么如果他们正在尝试

353
00:17:37,423 --> 00:17:39,657
他们可能再次忘记了这种alert。

354
00:17:39,725 --> 00:17:41,692
也许，也许不是，但很可能。

355
00:17:41,761 --> 00:17:44,428
所以这是你可以在你的UI中做的事情

356
00:17:44,497 --> 00:17:47,130
有点棘手，这使他们能够转变那样的东西

357
00:17:47,199 --> 00:17:49,633
无需转到设置的某个地方

358
00:17:49,702 --> 00:17:51,568
打开它，这真的很麻烦。

359
00:17:51,637 --> 00:17:55,005
这只是用他们自然的东西

360
00:17:55,074 --> 00:17:58,208
这样做。在用户界面中，你可以做出这样的决定。

361
00:17:58,277 --> 00:17:59,243
所以我只是想给你一个经典的样子

362
00:17:59,244 --> 00:18:00,210
有道理吗?

363
00:18:00,279 --> 00:18:02,880
那个例子。所以这就是为什么我可以通过这个URL，

364
00:18:02,949 --> 00:18:05,716
因为我可能想检查它是否是相同的URL。

365
00:18:05,785 --> 00:18:08,419
现在我今天不会这样做，因为时间有限。

366
00:18:08,488 --> 00:18:11,189
但我只是想给你一个你可以做到的想法。

367
00:18:11,257 --> 00:18:14,124
好的，让我们在这里做我们的私人功能，

368
00:18:14,193 --> 00:18:16,360
presentBadURL警告URL。

369
00:18:18,631 --> 00:18:19,864
我在这里要做什么？

370
00:18:19,932 --> 00:18:22,232
我要创建这个alert并呈现它。

371
00:18:22,301 --> 00:18:24,335
这就是我们来这里的原因，是了解alert。

372
00:18:24,403 --> 00:18:27,504
所以创建alert就是创建视图控制器。

373
00:18:27,573 --> 00:18:31,909
所以让alert = UIAlertController。

374
00:18:31,978 --> 00:18:34,778
为什么他们不叫它UIAlertViewController，

375
00:18:34,847 --> 00:18:38,616
我不知道。他们没有。所以UIAlertController和

376
00:18:38,685 --> 00:18:41,252
它的构造函数在这里，我们总是想要这个

377
00:18:41,320 --> 00:18:44,054
在这里。你可以看到这个是NS编码器的东西

378
00:18:44,123 --> 00:18:47,290
了解之前。这是一种旧式的东西。

379
00:18:47,359 --> 00:18:51,161
我们总是希望这一个在这里，这给了我们标题，

380
00:18:51,230 --> 00:18:53,697
那里会传递的信息。

381
00:18:53,766 --> 00:18:57,468
风格，无论是action sheet还是alert。和

382
00:18:57,537 --> 00:18:59,536
所以我们的标题在这里，发生了什么？

383
00:18:59,605 --> 00:19:02,005
那么，他们丢下了一张图片。我们无法获取数据。

384
00:19:02,074 --> 00:19:06,944
所以我会把这个事情称为图像传输失败，也许。

385
00:19:07,013 --> 00:19:12,416
在这里选择好的用语其实非常重要，

386
00:19:12,484 --> 00:19:14,619
因为你不想把你的用户吓跑。我的天哪，

387
00:19:14,687 --> 00:19:16,387
我做了什么或什么？你想尝试和

388
00:19:16,455 --> 00:19:18,889
给他们一些赋予他们权力的东西，

389
00:19:18,958 --> 00:19:21,692
这样的项目有些权威，别担心，

390
00:19:21,760 --> 00:19:24,662
这发生过。我明白了，这是你的选择。

391
00:19:24,730 --> 00:19:26,497
但不是那种技术性太强的东西，

392
00:19:26,566 --> 00:19:30,067
什么？就像我们说的那样，无法从URL加载。

393
00:19:30,136 --> 00:19:32,803
好的用户甚至不知道什么网址。所以

394
00:19:32,871 --> 00:19:34,338
你不想把URL放在这里。

395
00:19:34,407 --> 00:19:35,906
你明白我在说什么了吗？所以

396
00:19:35,974 --> 00:19:38,675
图像传输，当他们拖延大概他们是

397
00:19:38,744 --> 00:19:42,079
试图转移该图像。你知道，这是个好名字。

398
00:19:42,148 --> 00:19:45,749
也许我们甚至可能想说，可能是图像丢失失败。

399
00:19:45,818 --> 00:19:47,818
你知道，这是你用户测试的那种东西

400
00:19:47,886 --> 00:19:49,653
你尝试并得到正确的话。当然，

401
00:19:49,722 --> 00:19:51,889
另一件事是我们想要本地化。

402
00:19:51,958 --> 00:19:54,792
我希望在感恩节之后的一周会说话，

403
00:19:54,861 --> 00:19:57,461
了解如何将您的应用本地化为其他语言。因为

404
00:19:57,530 --> 00:20:00,163
我们希望我们的应用以尽可能多的语言运行，所以

405
00:20:00,232 --> 00:20:02,866
我们必须使该字符串能够本地化。

406
00:20:02,935 --> 00:20:05,903
iOS中的操作非常简单，但我们将会学习

407
00:20:05,971 --> 00:20:08,639
那在几个星期。现在，这里的信息在哪里

408
00:20:08,707 --> 00:20:10,540
我会告诉他们更多关于发生的事情。

409
00:20:10,609 --> 00:20:15,078
所以在这里我有点说这里发生了什么，这是

410
00:20:15,147 --> 00:20:20,350
我无法从其源代码传输丢弃的图像。

411
00:20:20,419 --> 00:20:22,086
同样，我没有提到URL或

412
00:20:22,154 --> 00:20:25,356
类似的东西。我只是这样做。和

413
00:20:25,425 --> 00:20:27,824
当然这是一个alert，而不是一个action sheet，所以

414
00:20:27,893 --> 00:20:30,995
我们会这么说。所以这创建了这个视图控制器，

415
00:20:31,063 --> 00:20:35,499
然后我只想呈现我是一个视图控制器

416
00:20:35,568 --> 00:20:39,870
这里，现在。所以我可以自己调用这个方法，

417
00:20:39,939 --> 00:20:41,839
它是一个视图控制器方法，存在。

418
00:20:41,908 --> 00:20:45,075
我要提出alert，动画真实，并且

419
00:20:45,144 --> 00:20:48,678
我没有任何完成的事情，我想这样做，我会

420
00:20:48,747 --> 00:20:52,783
离开那个。但当然，我需要在这里添加我的按钮。

421
00:20:52,851 --> 00:20:53,784
那么我们有什么按钮？

422
00:20:53,853 --> 00:20:57,020
好吧，记住我会一直警告我并停下来

423
00:20:57,089 --> 00:21:00,257
警告我。好的，我们先做一个警告。

424
00:21:00,326 --> 00:21:03,226
所以我只是说alert.addAction和

425
00:21:03,295 --> 00:21:06,897
记住你可以看到的行动带给我们一个参数，

426
00:21:06,966 --> 00:21:10,635
这是一个UIAlertAction。那只有一个初始化器，

427
00:21:10,703 --> 00:21:13,370
这就是这一个。所以做到这一点

428
00:21:13,439 --> 00:21:18,509
你可以在这里看到更好的。好吧，

429
00:21:18,578 --> 00:21:21,778
所以它想要标题。这是按钮的标题。所以

430
00:21:21,847 --> 00:21:25,649
这是我要警告的地方

431
00:21:25,718 --> 00:21:29,720
此人。而这种风格只是默认的，

432
00:21:29,789 --> 00:21:32,890
这是正常的默认按钮。保持警告不是

433
00:21:32,958 --> 00:21:34,891
有什么特别的，它不会改变什么，真的。

434
00:21:34,960 --> 00:21:36,193
我们只是继续警告他们。

435
00:21:36,262 --> 00:21:37,961
我其实并不需要一个处理程序，

436
00:21:38,030 --> 00:21:39,296
因为我不会做任何事情，

437
00:21:39,364 --> 00:21:40,764
如果你一直说保持警告我，

438
00:21:40,833 --> 00:21:42,132
因为这是我默认做的。

439
00:21:42,201 --> 00:21:47,438
所以我只是要摆脱这一点，这是我的行动。所以

440
00:21:47,507 --> 00:21:50,941
很多时间取消按钮和好的按钮，

441
00:21:51,009 --> 00:21:53,010
他们没有任何行动，他们什么都不做。和

442
00:21:53,078 --> 00:21:55,645
就是说，这就像一个好方法。但

443
00:21:55,714 --> 00:22:01,519
我们的其他按钮alert添加行动，UIAlertAction。

444
00:22:01,587 --> 00:22:03,888
这个确实有一个处理程序，并且

445
00:22:03,956 --> 00:22:07,958
让我们来谈谈我们将如何实现这一点。

446
00:22:11,063 --> 00:22:14,231
让我们看看，现在它在一个页面上。所以在这里，这个

447
00:22:14,300 --> 00:22:17,968
字符串是停止警告。现在，如果我只是停止警告和

448
00:22:18,037 --> 00:22:21,038
保持警惕，这是不够的信息

449
00:22:21,106 --> 00:22:22,272
人们了解。

450
00:22:22,341 --> 00:22:25,409
你是什​​么意思停止警告？你知道我的意思？所以

451
00:22:25,478 --> 00:22:28,079
我实际上想在这里添加一些我的信息。

452
00:22:28,147 --> 00:22:32,916
我要说的是，

453
00:22:32,985 --> 00:22:36,487
在未来显示此警告？

454
00:22:36,555 --> 00:22:40,024
现在，保持警告和停止警告更有意义。

455
00:22:41,227 --> 00:22:44,528
但是，你不希望这是肯定的

456
00:22:44,596 --> 00:22:47,698
没有。在alert中有按钮，是和不是。

457
00:22:47,767 --> 00:22:50,567
这迫使人仔细阅读和

458
00:22:50,636 --> 00:22:53,971
解析你所说的信息。他们没有得到任何双重

459
00:22:54,040 --> 00:22:56,473
检查他们是否按下yes或no之前阅读。

460
00:22:56,542 --> 00:23:00,176
所以总是试着选择比描述更具描述性的东西

461
00:23:00,245 --> 00:23:03,747
是或否，如保持此警告，请停止此警告。

462
00:23:03,816 --> 00:23:05,215
好的，你仍然必须简短，

463
00:23:05,284 --> 00:23:07,751
你不希望这些按钮上有十个字。

464
00:23:07,820 --> 00:23:09,553
所以这是简洁和妥协之间的妥协

465
00:23:09,621 --> 00:23:11,054
确保该人理解。

466
00:23:11,123 --> 00:23:14,391
现在我会称这种破坏性的，因为它会发生

467
00:23:14,459 --> 00:23:17,294
阻止它做非常多的事情

468
00:23:17,363 --> 00:23:19,963
永久除非我去哪里添加该功能

469
00:23:20,032 --> 00:23:23,400
我比较网址并重新打开。所以我要设置这个

470
00:23:23,469 --> 00:23:25,970
破坏性。所以它会变成红色。它会

471
00:23:26,038 --> 00:23:28,339
在用户按下之前让用户思考一下，

472
00:23:28,407 --> 00:23:31,609
这正是我想要的。我们的经理人怎么样？

473
00:23:31,677 --> 00:23:35,446
这里。所以处理程序把这个动作传回给我们。和

474
00:23:35,514 --> 00:23:38,448
我们通常不需要这样做，因为

475
00:23:38,517 --> 00:23:42,018
我们可以使用闭包捕获来捕获它，

476
00:23:42,087 --> 00:23:47,224
我们捕获这个小动作。虽然，你知道，因为你

477
00:23:47,293 --> 00:23:49,893
通常像这样添加它，你实际上并没有本地的

478
00:23:49,962 --> 00:23:52,328
var这个动作。所以它通过它有点不错。

479
00:23:52,397 --> 00:23:55,166
无论如何我们都不需要它。我们所需要做的就是设置

480
00:23:55,234 --> 00:23:57,801
一些变种说，压制这些警告。

481
00:23:57,870 --> 00:24:03,173
所以我会说自己。 suppressBadURLWarnings = true，

482
00:24:03,242 --> 00:24:08,011
所以我需要一个变种。所以我会把它放在这里，

483
00:24:08,080 --> 00:24:12,149
私人变种，我想我复制并粘贴它，是的，我做到了。

484
00:24:12,217 --> 00:24:14,118
等于，当然它会开始假，

485
00:24:14,187 --> 00:24:15,385
我们不会压制它。

486
00:24:15,454 --> 00:24:22,226
而我要做的就是，如果这是真的，不要做这种方法，

487
00:24:22,294 --> 00:24:27,564
所以我会说如果suppressBadURLWarnings，

488
00:24:27,633 --> 00:24:33,103
不是那么做。所以

489
00:24:33,172 --> 00:24:36,239
就是这样，这就是整个实施过程，

490
00:24:36,308 --> 00:24:42,946
让我们看看这个工作。这里是我们的应用程序，

491
00:24:43,014 --> 00:24:46,717
让我们在这里打开我们的Apple Bees文档。在这里

492
00:24:46,785 --> 00:24:50,887
是，并且让我们尝试拖拽图像，这是有效的。

493
00:24:50,956 --> 00:24:53,423
我觉得这个有效，这个有一个URL。

494
00:24:53,492 --> 00:24:56,860
所以我们把它拖入，它装载它，很好，它工作，

495
00:24:56,929 --> 00:24:59,863
它有一个高分辨率的图像，这很好。

496
00:24:59,932 --> 00:25:01,865
如果我们拖入一个不起作用的东西，

497
00:25:01,934 --> 00:25:05,168
这个怎么样？这一次碰巧没有一个好的

498
00:25:05,237 --> 00:25:08,071
网址，好吧，我们在这里得到了一个提醒。

499
00:25:08,140 --> 00:25:11,074
无法传输从源中删除的图像，

500
00:25:11,143 --> 00:25:14,044
在将来显示此警告，保持警告或

501
00:25:14,112 --> 00:25:17,581
停止警告，所以我会保持警告。那很好，

502
00:25:17,650 --> 00:25:21,251
让我们试试另一个，这下面这个怎么样？

503
00:25:21,320 --> 00:25:24,355
那也不好，现在我厌倦了这个警告，所以

504
00:25:24,423 --> 00:25:28,458
我会说，停止警告我。现在让我们试试

505
00:25:28,527 --> 00:25:32,162
在这里再次拖拽这个坏的一个，

506
00:25:32,231 --> 00:25:36,333
没有警告。好的，就这样，

507
00:25:36,401 --> 00:25:38,869
让我们回到我们的幻灯片，并且

508
00:25:38,938 --> 00:25:42,072
操作表完全一样，对吗？

509
00:25:42,140 --> 00:25:45,843
你会在那里做同样的事情。

510
00:25:45,911 --> 00:25:51,515
好的，我们的下一个主题是通知和KVO。

511
00:25:51,583 --> 00:25:55,152
所以，如果你记得回到MVC的演讲，我就是这么做的

512
00:25:55,220 --> 00:25:58,055
开始，就像第二次讲座一样。我有这个小小的

513
00:25:58,124 --> 00:26:00,657
广播电台，那里的橙色小东西。

514
00:26:00,726 --> 00:26:04,862
我说，模型无法与其控制器通话，所以它

515
00:26:04,930 --> 00:26:07,531
必须使用其他机制。为什么模型不能说话

516
00:26:07,600 --> 00:26:11,402
到控制器？因为这个模型是独立于UI的

517
00:26:11,470 --> 00:26:13,570
该组件基本上取决于UI。

518
00:26:13,639 --> 00:26:16,005
所以他们无法向这个方向说话。

519
00:26:16,074 --> 00:26:18,541
控制器可以与模型交谈，但不能以其他方式进行交谈，

520
00:26:18,610 --> 00:26:21,378
所以我们有这种盲目和结构化的方式来做到这一点。

521
00:26:21,447 --> 00:26:24,248
顺便说一下，一个视图可能也想用这个

522
00:26:24,316 --> 00:26:26,850
因为视图，广播电台与其控制器交谈

523
00:26:26,919 --> 00:26:28,618
也无法与其控制器通话

524
00:26:28,687 --> 00:26:32,322
不同的原因。该视图是通用的，并且是控制器

525
00:26:32,391 --> 00:26:35,725
是特定的UI。所以没有办法像通用项目

526
00:26:35,794 --> 00:26:38,661
按钮可以知道关于特定控制器的任何信息

527
00:26:38,730 --> 00:26:41,631
因此，出于这两个原因，观看模型不能与之交谈

528
00:26:41,700 --> 00:26:44,334
控制器，控制器与他们交谈是可以的，但是

529
00:26:44,403 --> 00:26:45,369
不要这样做。所以

530
00:26:45,437 --> 00:26:48,005
他们都可以使用这个电台模式。还有

531
00:26:48,073 --> 00:26:50,974
真的有两种方式来做广播电台，通知和广播

532
00:26:51,043 --> 00:26:54,144
KVO，KVO代表关键价值观察。

533
00:26:54,212 --> 00:26:57,213
所以我们要谈谈这个电台，顺便说一句，

534
00:26:57,282 --> 00:26:59,983
只有我叫它广播电台，它不叫广播电台

535
00:27:00,052 --> 00:27:02,586
在文档中。但广播电台是一个很好的比喻

536
00:27:02,654 --> 00:27:05,789
这些之间正在进行的沟通

537
00:27:05,858 --> 00:27:10,661
的东西。好的，这是第一个通知

538
00:27:10,729 --> 00:27:13,931
这些。所以通知本质上是公正的

539
00:27:13,999 --> 00:27:17,667
一种你将要注册一个闭包以便在什么时候被调用的方法

540
00:27:17,736 --> 00:27:22,072
有人在一个指定的电台上播出。就是这样

541
00:27:22,140 --> 00:27:25,509
很简单，你可以看到它是如何立即失明的。

542
00:27:25,578 --> 00:27:27,377
没人知道谁是类，

543
00:27:27,446 --> 00:27:31,681
我们在这里谈论的是这个电台。和

544
00:27:31,750 --> 00:27:32,449
它非常灵活，

545
00:27:32,518 --> 00:27:35,318
因为你只是在那里放一个闭包，然后就调用

546
00:27:35,387 --> 00:27:37,854
当有人在那个广播电台上播出时。和

547
00:27:37,923 --> 00:27:41,659
也可以在收音机上播放音乐

548
00:27:41,727 --> 00:27:44,461
站。换句话说，当你播放时，

549
00:27:44,529 --> 00:27:47,630
你也可以在整个广播电台放置信息，

550
00:27:47,699 --> 00:27:48,798
这有点酷。

551
00:27:48,867 --> 00:27:51,901
好吧，所以这就是我想说的功能

552
00:27:51,970 --> 00:27:54,471
听一个广播电台的样子，这个

553
00:27:54,540 --> 00:27:59,543
你在这里看到的代码。所有这些东西都是通过

554
00:27:59,611 --> 00:28:03,447
这件事就在这里NotificationCenter.default。

555
00:28:03,516 --> 00:28:05,181
您会看到NotificationCenter.default，

556
00:28:05,250 --> 00:28:08,285
我在这里使用它。所以NotificationCenter是一件事情

557
00:28:08,354 --> 00:28:10,988
你用来同时注册收听广播电台，

558
00:28:11,057 --> 00:28:13,456
并在广播电台播出。和

559
00:28:13,525 --> 00:28:16,960
我们总是使用这个默认的共享实例，

560
00:28:17,028 --> 00:28:19,162
有点像用户默认，记得一个？

561
00:28:19,230 --> 00:28:22,565
我们有userdefault.standard，我们只用了共享的，

562
00:28:22,634 --> 00:28:24,734
这里同样的事情。所以

563
00:28:24,803 --> 00:28:28,138
这个方法说你想听就叫做addObserver。

564
00:28:28,206 --> 00:28:31,608
你基本上要观察这个电台，

565
00:28:31,677 --> 00:28:34,244
聆听是否有任何广播

566
00:28:34,312 --> 00:28:37,080
那里。你会发现它有一个返回值，这是

567
00:28:37,149 --> 00:28:40,851
类型的NSObjectProtocol，我会在一秒钟之内报道。

568
00:28:40,920 --> 00:28:43,653
但首先让我们看看这个事情的参数。

569
00:28:43,722 --> 00:28:46,656
首先，我们有forName，你看到这个，对，forName，

570
00:28:46,725 --> 00:28:50,293
Notification.Name，这是电台的名称。和

571
00:28:50,362 --> 00:28:52,629
注意它的类型不是字符串，

572
00:28:52,697 --> 00:28:56,733
它是Notification.Name。所以，如果你，当你命名它时，

573
00:28:56,801 --> 00:28:59,402
如果你需要创建你自己的Notification.Name

574
00:28:59,471 --> 00:29:02,105
想在你自己的电台上播出。这很好，

575
00:29:02,174 --> 00:29:05,142
你想给你的电台一个独特的名字。但

576
00:29:05,210 --> 00:29:08,278
如果你想看，找到存在的广播电台

577
00:29:08,347 --> 00:29:12,315
已经在iOS中，并且有几十个。 iOS非常

578
00:29:12,384 --> 00:29:14,618
擅长在很多广播电台进行广播。

579
00:29:14,687 --> 00:29:16,153
你可以看看文档

580
00:29:16,221 --> 00:29:18,721
Notification.Name，你会看到它们在那里列出。

581
00:29:18,790 --> 00:29:22,358
他们在播放时做了什么，那种东西。

582
00:29:22,427 --> 00:29:24,661
所以这就是为什么他们让它不是一个字符串，

583
00:29:24,729 --> 00:29:27,664
但是您可以查看文档中的类型。

584
00:29:27,733 --> 00:29:30,700
好的，接下来的事情是这个对象Any ?.

585
00:29:30,769 --> 00:29:33,570
这是谁在这个电台上播出，

586
00:29:33,639 --> 00:29:35,739
因为不像真正的电台，

587
00:29:35,808 --> 00:29:39,242
多个人可以以相同的频率进行广播，

588
00:29:39,311 --> 00:29:42,178
这完全是允许的。这只是说谁

589
00:29:42,247 --> 00:29:45,716
正在播出，你是谁播出的

590
00:29:45,784 --> 00:29:49,386
接收你的闭包在这里被调用。和

591
00:29:49,454 --> 00:29:51,254
那么你看到那里，我们有队列，

592
00:29:51,322 --> 00:29:54,391
这OperationQueue。这就是你想要的队列

593
00:29:54,460 --> 00:29:58,462
闭包被执行。现在，这可能是零，但是

594
00:29:58,530 --> 00:30:01,365
你几乎从不想零。毫无意义的是，

595
00:30:01,433 --> 00:30:07,804
在与广播公司同一队列中执行我的闭包。

596
00:30:07,873 --> 00:30:11,041
除非你是广播公司，否则你通常不需要这样做，

597
00:30:11,109 --> 00:30:12,976
如果它是你自己的代码，并且你正在进行广播，

598
00:30:13,045 --> 00:30:14,411
也许你想要那个。但

599
00:30:14,480 --> 00:30:15,979
如果你正在从iOS收听东西，那么

600
00:30:16,048 --> 00:30:18,548
例如，不，你可能想要主队列。现在，

601
00:30:18,616 --> 00:30:22,318
注意操作队列，而不是调度队列，并且

602
00:30:22,387 --> 00:30:24,521
当我谈到调度队列时，我实际上已经提到过这个问题。

603
00:30:24,590 --> 00:30:27,857
有一个面向对象的API来完成这一切

604
00:30:27,926 --> 00:30:31,061
派遣的东西，称为操作和OperationQueue。

605
00:30:31,129 --> 00:30:33,363
那么，这是使用该面向对象的API，

606
00:30:33,432 --> 00:30:34,431
如果你想要主队列，

607
00:30:34,500 --> 00:30:36,667
这是你想要99％的时间，

608
00:30:36,735 --> 00:30:39,336
只是说OperationQueue.main。就像你说的一样

609
00:30:39,404 --> 00:30:43,239
DispatchQueue.main，你可以说OperationQueue.main。和

610
00:30:43,308 --> 00:30:46,576
那么这个addObserver的最后一个参数就是闭包你

611
00:30:46,644 --> 00:30:49,046
想要执行。而这个闭包只有一个参数，

612
00:30:49,114 --> 00:30:52,548
这是一个通知。通知只是一点点

613
00:30:52,617 --> 00:30:55,786
该对象具有例如无线电台的名称

614
00:30:55,854 --> 00:30:58,488
和广播者是谁。但它也有一个非常

615
00:30:58,557 --> 00:31:01,224
重要的信息称为userInfo。

616
00:31:01,293 --> 00:31:05,162
userInfo是正在播放给你的音乐，

617
00:31:06,298 --> 00:31:07,163
它几乎总是，

618
00:31:07,232 --> 00:31:10,567
它是一种类型，但它几乎总是一本字典。

619
00:31:10,635 --> 00:31:13,136
当你看文档通知

620
00:31:13,205 --> 00:31:14,871
名字找到所有的广播电台。

621
00:31:14,940 --> 00:31:17,507
他们会说，当我们播放时，

622
00:31:17,576 --> 00:31:21,110
我们在字典中包含以下关键字，这个

623
00:31:21,179 --> 00:31:25,815
信息。所以这是理解的一个非常重要的部分，

624
00:31:25,884 --> 00:31:28,418
是你的闭包有这一个参数，通知。

625
00:31:28,486 --> 00:31:31,287
您查看该通知中的var userInfo以获取

626
00:31:31,356 --> 00:31:34,858
现在正在通过广播电台播放的音乐，

627
00:31:34,926 --> 00:31:37,160
好吧？现在我们来谈谈那个回报值，

628
00:31:37,229 --> 00:31:38,761
你在那里看到那个观察者？

629
00:31:38,830 --> 00:31:41,832
注意，真正奇怪的类型NSObjectProtocol，

630
00:31:41,900 --> 00:31:44,600
什么是NSObjectProtocol？

631
00:31:44,669 --> 00:31:47,470
NSObjectProtocol是NSObject发生的协议

632
00:31:47,539 --> 00:31:51,074
实行。它是NSObject功能的一个子集

633
00:31:51,143 --> 00:31:54,811
某些对象实现的不是子类

634
00:31:54,880 --> 00:31:58,314
NSObject的。所以，你知道，这种，这是众所周知的

635
00:31:58,383 --> 00:32:01,985
一套东西。但是，这在这里完全没有关系。

636
00:32:02,054 --> 00:32:05,188
没关系。那件事可能还有其他任何一点

637
00:32:05,257 --> 00:32:08,191
就像你担心的那样。所有这一切，这个观察者的事情是

638
00:32:08,259 --> 00:32:12,395
一个只是跟踪的cookie，基本上就是这样

639
00:32:12,464 --> 00:32:15,431
观察是这个东西。所以，它只是一个cookie

640
00:32:15,500 --> 00:32:18,668
你要坚持。你只用它做一件事，

641
00:32:18,737 --> 00:32:22,038
这是停止观察。这就是你说的

642
00:32:22,107 --> 00:32:25,242
我不想再听那个广播电台。和

643
00:32:25,310 --> 00:32:28,678
你可以通过询问NotificationCenter.default来做到这一点

644
00:32:28,747 --> 00:32:32,415
删除观察者，这个cookie。它会停止收听。所以

645
00:32:32,484 --> 00:32:35,384
我们将在第二秒向您展示一个例子。

646
00:32:35,453 --> 00:32:39,923
快速上Notification.Name，所有的通知名称，

647
00:32:39,992 --> 00:32:43,459
他们收集他们作为静态让，静态的小让

648
00:32:43,528 --> 00:32:48,131
Notification.Name类中的常量Notification.Names。

649
00:32:48,200 --> 00:32:51,735
顺便说一句，你经常会看到它叫做NSNotification.Name。

650
00:32:51,803 --> 00:32:52,802
这是一回事。

651
00:32:52,871 --> 00:32:55,771
他们的字面意思是相互混淆。你懂，

652
00:32:55,840 --> 00:32:57,941
在Swift世界中，我们称之为Notification.Name，

653
00:32:58,009 --> 00:33:00,810
并且在Objective-C世界中，NSNotification.Name。

654
00:33:00,879 --> 00:33:04,581
好吧，他们是一样的东西。再一次，如果你想

655
00:33:04,650 --> 00:33:08,151
创建自己的广播电台，我们实际上，或者我建议

656
00:33:08,220 --> 00:33:11,254
创建一个扩展到Notification.Name和

657
00:33:11,323 --> 00:33:14,590
添加你自己的静态让这是你的东西，等于，

658
00:33:14,659 --> 00:33:19,295
Notification.Name，一些字符串，你想要的任何字符串。

659
00:33:19,364 --> 00:33:21,898
这样你就可以收集完全一样的东西

660
00:33:21,967 --> 00:33:25,101
作为所有其他通知名称的API领域。

661
00:33:25,170 --> 00:33:28,338
当我们进行演示时，你会看到。好，如此

662
00:33:28,407 --> 00:33:31,675
这里有一个收听广播电台的例子。

663
00:33:31,743 --> 00:33:32,609
什么是一个很好的例子？

664
00:33:32,677 --> 00:33:34,410
这是一个很好的例子。记得，

665
00:33:34,479 --> 00:33:37,080
滑块说，设置您的字体大小，可访问性

666
00:33:37,148 --> 00:33:40,283
滑盖的？你可以做得更大更小？那么，你可以

667
00:33:40,352 --> 00:33:43,786
找出，因为有一个电台广播

668
00:33:43,855 --> 00:33:47,257
随时变化。所以这是一件了不起的事。

669
00:33:47,325 --> 00:33:50,260
如果你的UI中有一些字体是基于的

670
00:33:50,329 --> 00:33:53,697
例如，我们谈到了做一件很酷的事情

671
00:33:53,765 --> 00:33:56,632
在表情符号艺术的顶部具有集合视图，

672
00:33:56,701 --> 00:34:00,704
基于这个滑块，它的表情符号变得更大或更小。

673
00:34:00,772 --> 00:34:02,472
这不会很难做到。我不是

674
00:34:02,540 --> 00:34:05,308
要做它作为演示，但你可以做一个练习。

675
00:34:05,376 --> 00:34:09,079
我们必须做的主要事情是让我们的单元格大小

676
00:34:09,148 --> 00:34:13,950
是的，通过做我们的固定到这个字体大小

677
00:34:14,019 --> 00:34:16,886
小字体度量缩放。我们也必须拥有

678
00:34:16,955 --> 00:34:20,123
我们的集合视图的高度的布局约束

679
00:34:20,191 --> 00:34:23,159
我们希望在代码中设置为单元格的高度。

680
00:34:23,227 --> 00:34:26,062
因为请记住，我们的单元格不能比我们的大

681
00:34:26,131 --> 00:34:28,698
集合视图。所以我们必须做出集合视图

682
00:34:28,766 --> 00:34:31,168
更大和单元格。但我们可以轻松地做到这一点。

683
00:34:31,236 --> 00:34:33,102
但如果我们这样做了，我们肯定会想成为

684
00:34:33,171 --> 00:34:34,537
听这个电台。

685
00:34:34,606 --> 00:34:36,772
因为每次字体改变时，

686
00:34:36,841 --> 00:34:40,143
当然，我们必须重新布置我们的集合视图，

687
00:34:40,211 --> 00:34:42,278
好吧？所以这就是它的样子。

688
00:34:42,347 --> 00:34:44,781
我们得到NotificationCenter.default。

689
00:34:44,849 --> 00:34:47,884
我们创建了这个观察者变量，我们设置了这个变量

690
00:34:47,953 --> 00:34:51,121
的addObserver。那个广播电台的名字是

691
00:34:51,189 --> 00:34:55,758
Notification.Name.UIContentSi- zeCategoryDidChange。

692
00:34:55,827 --> 00:34:57,861
这是一种满口，但这就是它的原因。

693
00:34:57,929 --> 00:35:01,197
我们正在从UIApplication.shared那里收听。

694
00:35:01,266 --> 00:35:03,432
这是应用程序对象。我会在那里谈论这件事

695
00:35:03,501 --> 00:35:06,636
本讲座结束。你也可以放在那里。

696
00:35:06,705 --> 00:35:09,305
因为基本上如果有人播出那个事情改变了，

697
00:35:09,374 --> 00:35:12,408
你有兴趣。所以在这里说零可能会很好。

698
00:35:12,477 --> 00:35:14,977
这意味着如果有人播放它。然后

699
00:35:15,046 --> 00:35:18,548
课程OperationQueue.main。我说或无，但我们真的会

700
00:35:18,617 --> 00:35:21,484
想要.main在那里。因为我们真的不知道什么线程

701
00:35:21,553 --> 00:35:23,720
这个iOS会广播这个。

702
00:35:23,788 --> 00:35:26,323
所以我们希望确保我们在主线上

703
00:35:26,391 --> 00:35:30,160
做我们的东西，然后闭包。现在在我们的

704
00:35:30,229 --> 00:35:33,196
闭包我们导致我们的集合视图重绘。

705
00:35:33,265 --> 00:35:36,766
无论我们做什么都很好。并且还要注意，

706
00:35:36,834 --> 00:35:39,135
有一些东西，在这个电台播放一些音乐。

707
00:35:39,204 --> 00:35:43,439
也就是说，您可以找出内容大小类别。所以

708
00:35:43,508 --> 00:35:45,775
所有这些缓和者都有名字，

709
00:35:45,844 --> 00:35:50,213
在滑块那里，像UIContentSizeCategorySmall一样，

710
00:35:50,281 --> 00:35:54,517
UIContentSizeLarge，UIContentSizeCategoryAccessib-

711
00:35:54,585 --> 00:35:56,452
ilityLarge，甚至更大。

712
00:35:56,521 --> 00:35:58,521
而且有非常大的，特别大的，我不知道。

713
00:35:58,590 --> 00:36:01,690
那里有各种不同的地方，你可以

714
00:36:01,759 --> 00:36:04,026
看看你是否想要。但你可能不会。

715
00:36:04,095 --> 00:36:06,596
您可能正在收集示例中

716
00:36:06,665 --> 00:36:08,731
根据字体指标调整字体大小。

717
00:36:08,800 --> 00:36:11,434
请记住我们如何从UI度量标准中缩放字体。

718
00:36:11,502 --> 00:36:15,605
你只会导致重新计算，好吗？现在，

719
00:36:15,674 --> 00:36:19,375
注意到我在那里坚持var观察者。接着

720
00:36:19,444 --> 00:36:22,979
我完成后将其删除。所以，这是一个很好的问题。

721
00:36:23,048 --> 00:36:27,316
何时添加以及何时删除观察。好吧，差不多

722
00:36:27,385 --> 00:36:29,886
你一直在做这件事，作为你正在做的事情的一部分

723
00:36:29,954 --> 00:36:32,822
在ViewController中。所以一个完美的时间和

724
00:36:32,890 --> 00:36:36,392
大概90％的时间，当你得到viewWillAppear或

725
00:36:36,461 --> 00:36:39,529
viewDidAppear，你添加观察者。和

726
00:36:39,598 --> 00:36:42,398
然后在viewWillDisappear或viewDidDisappear上，

727
00:36:42,467 --> 00:36:45,635
你删除了观察者。这就说得通了？

728
00:36:45,704 --> 00:36:48,504
因为你只是对真正获得这些尺寸感兴趣

729
00:36:48,573 --> 00:36:51,441
在屏幕上进行更改。

730
00:36:51,509 --> 00:36:52,675
当然，当你离开屏幕时，尺寸可能会改变。

731
00:36:52,676 --> 00:36:53,842
现在，如果你这样做，

732
00:36:53,912 --> 00:36:55,311
所以当你得到viewWillAppear时，

733
00:36:55,380 --> 00:36:57,780
你可能也想看看尺码类别，

734
00:36:57,849 --> 00:36:59,782
你可以做的。 UIApplication有一个变种

735
00:36:59,851 --> 00:37:02,418
那。然后调整你的集合视图

736
00:37:02,487 --> 00:37:05,221
在出现之前。但这对你来说有点浪费

737
00:37:05,290 --> 00:37:08,091
一直在听这个东西，改变一切

738
00:37:08,159 --> 00:37:10,359
当你甚至没有在屏幕上。所以viewWillAppear，

739
00:37:10,428 --> 00:37:13,429
viewDidDisappear是放置添加观察者的好地方，

740
00:37:13,498 --> 00:37:16,765
删除观察者对。总是配对这些东西。别

741
00:37:16,834 --> 00:37:22,605
忘记删除观察者。如何自己播放

742
00:37:22,674 --> 00:37:25,508
广播电台。你是怎样做的？你这样做

743
00:37:25,577 --> 00:37:27,577
NotificationCenter.default也是如此。

744
00:37:27,646 --> 00:37:30,680
那里的方法叫post。第一个参数，

745
00:37:30,748 --> 00:37:32,715
这个名字是电台的名字。

746
00:37:32,784 --> 00:37:35,585
你可以做出来。我们已经讨论过如何做到这一点。

747
00:37:35,654 --> 00:37:38,755
对象，就是你。这是谁发送的。平时

748
00:37:38,823 --> 00:37:40,890
那是自我。你可以制作你想要的任何物体。

749
00:37:40,958 --> 00:37:43,393
但是，这是通知中心的职责

750
00:37:43,461 --> 00:37:44,627
报告为发件人，

751
00:37:44,696 --> 00:37:48,197
广播员。然后是userInfo，就是这样

752
00:37:48,266 --> 00:37:51,034
你的音乐。这就是几乎总是，你会想要的

753
00:37:51,102 --> 00:37:53,502
把它作为AnyHashable事物的字典

754
00:37:53,571 --> 00:37:56,639
到一个Anys。所以它非常灵活，你可以放任何东西

755
00:37:56,707 --> 00:38:00,510
你想在那里。现在，只要你调用这个方法，

756
00:38:00,578 --> 00:38:04,648
它会立即致电所有闭包

757
00:38:04,716 --> 00:38:07,683
将addObserver添加到您的电台，

758
00:38:07,752 --> 00:38:12,388
提出以下警告。它只会立即

759
00:38:12,457 --> 00:38:15,357
调用它们如果他们指定了队列nil。

760
00:38:15,426 --> 00:38:17,960
因此，它会执行同样的闭包

761
00:38:18,029 --> 00:38:21,130
像这样排队。那么它立即执行。

762
00:38:21,198 --> 00:38:23,800
如果他们指定了与主队列不同的队列，

763
00:38:23,869 --> 00:38:27,069
那么这将会发布他们的闭包执行。

764
00:38:27,138 --> 00:38:29,405
它会尽快执行

765
00:38:29,474 --> 00:38:33,175
队列开始闭包。

766
00:38:33,244 --> 00:38:37,079
那就是通知。好的，KVO。现在我会

767
00:38:37,148 --> 00:38:39,949
在这上面花两张幻灯片。但我想强调一下，

768
00:38:40,018 --> 00:38:43,452
这不是一个重要的事情，你会这样做。

769
00:38:43,521 --> 00:38:46,656
大多数地方，我甚至不谈这个。但

770
00:38:46,724 --> 00:38:49,024
我有点决定把它扔在这个季度

771
00:38:49,093 --> 00:38:51,928
你可以知道它存在那里。

772
00:38:51,997 --> 00:38:54,630
这不是真正做事的主要方式。

773
00:38:54,699 --> 00:38:57,032
通知更主要的方式。

774
00:38:57,101 --> 00:39:00,136
这主要不那么重要。这是因为，这是因为

775
00:39:00,205 --> 00:39:03,506
它的应用有点有限。

776
00:39:03,575 --> 00:39:07,576
那么什么是KVO？这里的基本想法是，当它到来时

777
00:39:07,645 --> 00:39:12,048
直到它，这是注册闭包的想法

778
00:39:12,116 --> 00:39:16,619
当NSObject的子类上的属性被执行时

779
00:39:16,688 --> 00:39:19,822
变化。这几乎就是这样。

780
00:39:19,891 --> 00:39:23,826
现在让我们来谈谈我刚刚放在那里的一些警告。

781
00:39:23,895 --> 00:39:27,096
为了使KVO工作，你不能只拥有任何属性和

782
00:39:27,164 --> 00:39:30,099
你改变它并且有人可以注册一个闭包。

783
00:39:30,168 --> 00:39:32,369
考虑这样做的开销。

784
00:39:32,437 --> 00:39:33,903
你不会希望为每个属性。

785
00:39:33,972 --> 00:39:36,706
很多属性可能是内联行为

786
00:39:36,774 --> 00:39:37,440
由编译器。

787
00:39:37,508 --> 00:39:40,309
所以你无法做到这一点。所以

788
00:39:40,378 --> 00:39:42,612
有一个机制需要做到这一点。

789
00:39:42,681 --> 00:39:45,414
现在NSObject，请记住NSObject是什么，对吧？

790
00:39:45,483 --> 00:39:48,051
它是所有iOS类的根源，对吧？所以

791
00:39:48,119 --> 00:39:51,721
UIViewController，UIView，它们都从NSObject继承。

792
00:39:51,790 --> 00:39:54,290
所以NSObject提出了这个机制

793
00:39:54,359 --> 00:39:57,193
这使得有可能将属性注入其中。

794
00:39:57,261 --> 00:40:00,930
所以这就是为什么我说这是NSObject的子类，

795
00:40:00,998 --> 00:40:03,666
但是，您可以将此机制置于您自己的对象中。

796
00:40:03,735 --> 00:40:06,402
这并不困难，我不会掩饰它，但是

797
00:40:06,471 --> 00:40:09,372
人们通常不会。他们只是使用机制

798
00:40:09,441 --> 00:40:12,808
通过拥有他们的东西来使用NSObject，不管它是什么，

799
00:40:12,877 --> 00:40:15,745
他们的类，NSObject的子类。所以

800
00:40:15,814 --> 00:40:17,580
这是首先要理解的。

801
00:40:17,648 --> 00:40:19,716
那里有一些你会有的机制

802
00:40:19,784 --> 00:40:21,851
如果你不想子类化NSObject，就实现它。

803
00:40:23,321 --> 00:40:26,255
这有什么好处，KVO有什么好处？好，

804
00:40:26,324 --> 00:40:28,724
对于和通知相同的东西来说，它有点不错。

805
00:40:28,793 --> 00:40:31,427
事物之间盲目的结构化沟通，

806
00:40:31,496 --> 00:40:34,196
特别是在模型与其控制器之间。

807
00:40:34,265 --> 00:40:36,365
而且在一个视图和他们的控制者之间，或者

808
00:40:36,434 --> 00:40:38,534
即使是在视图和自身之间，你也会看到

809
00:40:38,603 --> 00:40:42,739
演示在这里。并非每个物业都与KVO合作，

810
00:40:42,808 --> 00:40:44,607
正如我所说，这将是荒谬的。对于

811
00:40:44,676 --> 00:40:46,008
一个属性与它一起工作，

812
00:40:46,077 --> 00:40:48,077
你不仅需要NSObject机制，而且还需要NSObject机制

813
00:40:48,146 --> 00:40:51,480
该属性必须是所谓的关键值编码

814
00:40:51,549 --> 00:40:53,516
兼容。现在，这意味着什么，

815
00:40:53,585 --> 00:40:56,853
该属性可以通过发送设置值来设置

816
00:40:56,921 --> 00:41:00,723
键，其中键是该属性的关键路径，并且

817
00:41:00,791 --> 00:41:02,892
获取钥匙的价值来获得它。换一种说法，

818
00:41:02,960 --> 00:41:05,895
有这些功能，为键和值设定值

819
00:41:05,963 --> 00:41:08,831
关键，你可以调用来获得属性的价值。

820
00:41:08,900 --> 00:41:11,367
这在物体上必须是可能的，

821
00:41:11,436 --> 00:41:13,903
如果你想这样做，那必须工作。和

822
00:41:13,972 --> 00:41:16,872
这就是所谓的关键值编码，关键值编码

823
00:41:16,941 --> 00:41:19,842
兼容。因此，属性必须如此，现在，

824
00:41:19,910 --> 00:41:23,646
你必须做一些工作才能做到这一点。属性

825
00:41:23,714 --> 00:41:26,182
不要奇迹般地做出这种工作，你通常不得不这样做

826
00:41:26,250 --> 00:41:28,717
为key实现类似于value的值并为其设置value

827
00:41:28,786 --> 00:41:31,887
做这项工作的关键。现在，有几个属性

828
00:41:31,956 --> 00:41:36,559
分散在整个iOS是关键的价值观察，

829
00:41:36,628 --> 00:41:38,861
与关键价值观察一起工作。最为显着地，

830
00:41:38,930 --> 00:41:42,965
在UI视图中，中心和框架是关键值观察。

831
00:41:43,033 --> 00:41:46,235
所以你可以观察中心或框架，和/或框架

832
00:41:46,304 --> 00:41:48,338
一个视图，你可以找出它何时移动，所以

833
00:41:48,406 --> 00:41:52,007
这有点酷。此外，大部分属性都在

834
00:41:52,076 --> 00:41:55,077
UIView下的CALayer，请记住我们的位置

835
00:41:55,146 --> 00:41:56,545
把边界放在视图周围，

836
00:41:56,614 --> 00:41:58,648
回到任务三或类似的东西？

837
00:41:58,716 --> 00:42:02,618
该层为UIView做了很多绘图，

838
00:42:02,687 --> 00:42:06,722
该层主要是遵守关键值。那么你

839
00:42:06,791 --> 00:42:09,392
可以观察在该层发生的事情。和

840
00:42:09,461 --> 00:42:11,393
例如，它们散布在其他地方，

841
00:42:11,462 --> 00:42:15,398
核心数据。还记得核心数据，面向对象的数据库吗？

842
00:42:15,466 --> 00:42:17,933
关键价值观可能真的很大。

843
00:42:18,002 --> 00:42:21,304
你可以看到你的数据库中发生的一切

844
00:42:21,372 --> 00:42:25,307
通过使用关键值观察来以每个属性为基础。所以

845
00:42:25,376 --> 00:42:29,078
有一些框架实际上使用KVO很多。但

846
00:42:29,147 --> 00:42:32,014
大多数情况下，我们不主要使用它

847
00:42:32,083 --> 00:42:34,684
那么多。当然，你可以制作你自己的

848
00:42:34,752 --> 00:42:36,886
实现这个东西的NSObject子类。

849
00:42:36,954 --> 00:42:39,354
但这超出了这个课程的范围，而且

850
00:42:39,423 --> 00:42:42,258
再次，模板大小不是，这不是一个巨大的交易。

851
00:42:42,326 --> 00:42:45,394
好的，那么如何工作，KVO是什么样的？

852
00:42:45,463 --> 00:42:48,497
NSObject有一个非常重要的方法

853
00:42:48,566 --> 00:42:51,134
为你提供，称为观察。所以

854
00:42:51,202 --> 00:42:54,570
观察采用keyPath作为参数和闭包，并且

855
00:42:54,639 --> 00:42:58,240
它会在keyPath更改时执行该闭包。

856
00:42:58,309 --> 00:43:01,477
仅适用于符合键值的keyPath，

857
00:43:01,545 --> 00:43:05,214
键值编码合规。注意它返回

858
00:43:05,283 --> 00:43:07,683
我们的观察，

859
00:43:07,752 --> 00:43:09,918
你看到了吗？这与通知有点不同，

860
00:43:09,987 --> 00:43:13,956
尽管如此，你从不说，删除该cookie的观察者。

861
00:43:14,025 --> 00:43:17,159
相反，当这个cookie离开堆时，

862
00:43:17,228 --> 00:43:20,262
它停止观察。所以只要你想要这个

863
00:43:20,331 --> 00:43:23,265
观察闭包要观察那东西，

864
00:43:23,334 --> 00:43:25,935
把这个cookie放在堆里。只要你放弃它

865
00:43:26,003 --> 00:43:30,339
走出堆，它会停止观察。现在，

866
00:43:30,408 --> 00:43:32,574
当然，你看到你的结论的参数，

867
00:43:32,643 --> 00:43:35,377
你会看到被观察到的东西，被观察到的回传

868
00:43:35,446 --> 00:43:37,313
给你。你也会得到这个东西的改变，

869
00:43:37,382 --> 00:43:41,617
该更改的类型为NSKeyValueObservedChange。和

870
00:43:41,685 --> 00:43:44,954
这是一个小对象，你可以获得旧的价值

871
00:43:45,022 --> 00:43:47,089
事物，改变事物的新价值，

872
00:43:47,158 --> 00:43:49,691
那种东西。它只是基本告诉你

873
00:43:49,760 --> 00:43:51,059
发生的变化，

874
00:43:51,128 --> 00:43:53,328
导致你的闭包被调用。

875
00:43:53,397 --> 00:43:57,199
这个KeyPath参数不是一个字符串，以前是旧的

876
00:43:57,268 --> 00:44:01,003
天。现在，它实际上是Swift中的一个类型化的东西，而且

877
00:44:01,071 --> 00:44:04,806
它有特殊的语法，即反斜杠，类型，点，

878
00:44:04,875 --> 00:44:09,645
属性的名称。现在，Swift会推断出类型

879
00:44:09,714 --> 00:44:13,749
你，所以我们几乎总是说反斜杠点的属性。所以

880
00:44:13,818 --> 00:44:15,918
例如，如果我们想观察中心还是

881
00:44:15,987 --> 00:44:21,523
一个视图的框架，我们会说观察\ .frame。

882
00:44:21,592 --> 00:44:26,295
这将会观察视图的框架。好吧，

883
00:44:26,364 --> 00:44:28,530
所以我有这些事情的演示，

884
00:44:28,599 --> 00:44:31,934
通知和KVO，让我们来看看这些。

885
00:44:32,003 --> 00:44:35,571
我要在这里做的是，在上次演讲后记得，

886
00:44:35,639 --> 00:44:39,342
我说过，我们不想在EmojiArt中有一个保存按钮。

887
00:44:39,411 --> 00:44:40,209
我们会摆脱这一点，

888
00:44:40,278 --> 00:44:42,144
没有理由有保存按钮。真，

889
00:44:42,212 --> 00:44:45,080
当我们点击保存时，我们只是告诉我们的UI文档，

890
00:44:45,149 --> 00:44:48,951
改变了一些东西，所以你应该尽快自动保存。

891
00:44:49,019 --> 00:44:51,854
真的，我们想要看我们的EmojiArt视图，

892
00:44:51,923 --> 00:44:54,490
每当表情符号被添加或调整大小或

893
00:44:54,559 --> 00:44:57,126
移动，我们想通知控制器。

894
00:44:57,195 --> 00:44:59,628
所以控制器可以告诉它的文档，改变了一些东西，

895
00:44:59,697 --> 00:45:01,530
那么我们可以放弃保存按钮。

896
00:45:01,599 --> 00:45:03,232
那么，上次讲课后，

897
00:45:03,301 --> 00:45:05,267
我告诉过你我会这么做，而且我做到了。

898
00:45:05,336 --> 00:45:09,004
所以发布的内容在这里，我用什么

899
00:45:09,073 --> 00:45:12,208
是代表团。它专门做了因为我想要你

900
00:45:12,277 --> 00:45:14,910
看看自己的代表是什么样子。

901
00:45:14,979 --> 00:45:16,779
你一直在使用滚动视图的委托，

902
00:45:16,847 --> 00:45:19,448
表视图的委托，集合视图的委托。

903
00:45:19,517 --> 00:45:22,585
我希望你看到，想让你做出自己的代表，

904
00:45:22,654 --> 00:45:25,354
所以我创建了一个EmojiArtViewDelegate，并且

905
00:45:25,423 --> 00:45:27,556
我会简单告诉你我在那里做了什么。

906
00:45:27,625 --> 00:45:31,293
所以这很好，但今天，我要做的是

907
00:45:31,362 --> 00:45:34,663
改用通知。因为你可以形象，

908
00:45:34,732 --> 00:45:36,332
代表发生的任何事情，

909
00:45:36,401 --> 00:45:38,634
那是盲目的结构沟通。那么，我们可以做

910
00:45:38,702 --> 00:45:40,937
只要有电台通知，

911
00:45:41,005 --> 00:45:44,039
这是EmojiArt视图改变了收音机

912
00:45:44,108 --> 00:45:47,076
站。一个控制器只会收听，每次都收听

913
00:45:47,145 --> 00:45:49,878
它听到了一个广播，它会告诉它的UI文档，

914
00:45:49,947 --> 00:45:53,015
改变了一些东西，这就是我在电台上听到的。

915
00:45:53,084 --> 00:45:55,751
这就是我们要做的，然后KVO，

916
00:45:55,820 --> 00:45:57,552
KVO在这里有很大的用处。

917
00:45:57,621 --> 00:46:00,456
就是现在，我不得不在我手势所在的位置下山，

918
00:46:00,524 --> 00:46:03,125
记住，我拖动了一些手势代码。我不得不进去

919
00:46:03,193 --> 00:46:05,894
在那里，每一次手势都改变了位置

920
00:46:05,963 --> 00:46:08,697
一个表情符号，我不得不告诉我的代表改变了一些东西，

921
00:46:08,766 --> 00:46:11,433
告诉我。所以我在那里有很多代码，所以

922
00:46:11,502 --> 00:46:13,569
我只是想把所有的代码都撕掉。

923
00:46:13,638 --> 00:46:16,606
相反，我会观察我的表情的中心

924
00:46:16,674 --> 00:46:19,241
当我的表情符号移动，或者甚至当他们调整大小时，

925
00:46:19,309 --> 00:46:22,077
因为当他们调整大小时，他们必须重新定位，

926
00:46:22,146 --> 00:46:24,546
对？因为他们从左上角增长，

927
00:46:24,615 --> 00:46:26,248
所以我必须保持重新定位

928
00:46:26,317 --> 00:46:28,251
我再次设置中心。所以

929
00:46:28,319 --> 00:46:30,786
我只是想观察一下，当发生这种情况时，

930
00:46:30,855 --> 00:46:33,255
那么我会在我的电台上播放。所以

931
00:46:33,324 --> 00:46:36,392
它会将该代码收集到一个地方，并将其保留

932
00:46:36,460 --> 00:46:40,729
以凌乱的方式遍布我的代码。

933
00:46:40,798 --> 00:46:43,832
但在我们做这些事之前，我会做一个简单的事情

934
00:46:43,901 --> 00:46:47,202
通知的事情，这是我只是要观察

935
00:46:47,271 --> 00:46:50,839
我的UI文档状态正在改变。你知道我们的用户界面

936
00:46:50,908 --> 00:46:53,976
文件经过这些文件状态，正常，

937
00:46:54,045 --> 00:46:57,580
闭包的，当它正在阅读时可用的进度

938
00:46:57,648 --> 00:47:00,749
写作，保存，错误，记住所有这些状态？

939
00:47:00,818 --> 00:47:03,552
那么，我们会看到发生，只是为了得到

940
00:47:03,621 --> 00:47:07,690
对通知进行热身，看看是什么样子。所以

941
00:47:07,759 --> 00:47:10,158
让我们做那个，我要去这里，

942
00:47:10,227 --> 00:47:13,729
这里的viewWillAppear，在这里，并闭包。对，如此

943
00:47:13,798 --> 00:47:16,632
这里是我们的文档在这里打开和闭包。所以

944
00:47:16,700 --> 00:47:22,070
我要在这里做的是，当我的文件第一次出现时，

945
00:47:22,139 --> 00:47:26,342
我将开始观看我的文档。它播放

946
00:47:26,411 --> 00:47:29,779
一个电台告诉我它的状态何时改变。

947
00:47:29,847 --> 00:47:31,547
那么，看起来像什么呢，好吧，

948
00:47:31,616 --> 00:47:33,849
再次，我需要捕获返回值。

949
00:47:33,918 --> 00:47:36,985
所以，我会调用给我的documentObserver等于，

950
00:47:37,054 --> 00:47:39,856
让我们继续并为此做出变化。

951
00:47:39,924 --> 00:47:43,659
私人var documentObserver，记住，它

952
00:47:43,727 --> 00:47:47,863
一个NSObjectProtocol，可选。再次，这是cookie，

953
00:47:47,932 --> 00:47:50,432
我们永远不会发送信息给这个。我们没有

954
00:47:50,501 --> 00:47:54,369
甚至不知道它响应的消息。所以我们会，

955
00:47:54,438 --> 00:47:57,839
在这里创建这个文档观察者，我会这样做

956
00:47:57,908 --> 00:48:01,743
NotificationCenter.default这就是我们所做的一切

957
00:48:01,812 --> 00:48:06,382
东东。并做addObserver，所以这里是addObserver forName，

958
00:48:06,450 --> 00:48:08,817
使这一点更容易阅读，

959
00:48:08,886 --> 00:48:14,123
是我想在这里做的。我希望他们有

960
00:48:14,192 --> 00:48:17,726
我可以做一个小小的命令键为我做这个。

961
00:48:17,795 --> 00:48:21,263
好的，所以我们要听文件状态

962
00:48:21,332 --> 00:48:23,799
广播电台。所以我们找到它的名字。

963
00:48:23,867 --> 00:48:27,002
我只是要输入Notification.Name。和

964
00:48:27,071 --> 00:48:30,839
你会看到有多少电台

965
00:48:30,908 --> 00:48:36,512
iOS版。很多，好吗？你可以看看所有这些和

966
00:48:36,581 --> 00:48:39,115
他们播放什么，他们播放什么音乐以及所有这些

967
00:48:39,183 --> 00:48:41,484
的东西。我们已经谈到了其中的一些事情，

968
00:48:41,552 --> 00:48:45,954
例如键盘。这里有一个键盘皮，DidHide，

969
00:48:46,023 --> 00:48:50,793
将会呈现。然后当然内容类别的大小

970
00:48:50,862 --> 00:48:54,096
改变的事情，对吧？那里有。

971
00:48:54,165 --> 00:48:58,901
所以，我们想要的是UIDocumentStateChanged，

972
00:48:58,970 --> 00:49:02,338
你看到那里的第一个？所以UIDocumentStateChanged

973
00:49:02,407 --> 00:49:04,139
那是我们想听的电台。

974
00:49:04,208 --> 00:49:07,710
我们只对我们的文档广播感兴趣。

975
00:49:09,113 --> 00:49:11,247
这是发件人。这就是我们想要播放的内容。

976
00:49:11,315 --> 00:49:16,218
我们当然想成为这里的主队。和

977
00:49:16,286 --> 00:49:19,154
这是当某人将要执行的闭包

978
00:49:19,223 --> 00:49:21,690
就此进行广播。这是我们的通知。现在

979
00:49:21,759 --> 00:49:24,259
这个通知我认为它确实有一些音乐

980
00:49:24,328 --> 00:49:26,895
在那里，这可能是文档状态。但

981
00:49:26,964 --> 00:49:29,031
我甚至不需要它，因为我的文档就在这里。

982
00:49:29,100 --> 00:49:32,534
所以我只会抓住它的状态。我只是想说

983
00:49:32,603 --> 00:49:37,940
print.documentState更改为。和

984
00:49:38,008 --> 00:49:45,414
我们会说是self.documentState。其实我

985
00:49:45,482 --> 00:49:48,617
所以在documentState中添加了一点扩展

986
00:49:48,686 --> 00:49:51,553
它会很好地打印出来.normal.close，

987
00:49:51,622 --> 00:49:54,222
那些东西。现在您可以随时开始聆听

988
00:49:54,291 --> 00:49:56,826
在一个电台上，你必须立即想到什么时候

989
00:49:56,894 --> 00:49:59,094
我要不要在这个电台上收听？

990
00:49:59,163 --> 00:50:02,297
那么，在我打开文档之前我就开始了，但是

991
00:50:02,366 --> 00:50:05,800
我等着看到会出现。所以我会停下来，

992
00:50:05,869 --> 00:50:07,903
我可以停下来看看会不会消失或

993
00:50:07,972 --> 00:50:08,770
视图确实消失了，但是

994
00:50:08,839 --> 00:50:10,672
当我的文档完整时，我实际上会停止

995
00:50:10,741 --> 00:50:12,374
闭包。一旦完全闭包，

996
00:50:12,443 --> 00:50:15,277
我当然不想再看着它了。所以

997
00:50:15,346 --> 00:50:18,313
让我们在这里闭包。这是密切的，

998
00:50:18,382 --> 00:50:20,949
这里是我们闭包的地方。现在我们不使用

999
00:50:21,018 --> 00:50:25,387
闭包时发生的小成功闭包。

1000
00:50:25,455 --> 00:50:30,326
但我要用它来明星。在太空成功，

1001
00:50:30,394 --> 00:50:35,397
返回。在这里，我要去除观察

1002
00:50:35,466 --> 00:50:39,435
这个documentObserver。所以我只想在这里说，

1003
00:50:39,503 --> 00:50:44,406
如果我可以让观察者，服务器等于我的documentObserver。

1004
00:50:44,475 --> 00:50:48,710
然后我会问NotificationCenter.default

1005
00:50:48,779 --> 00:50:51,213
中心删除该观察者。

1006
00:50:51,281 --> 00:50:57,085
换句话说，停止观察。每个人都很酷

1007
00:50:57,154 --> 00:51:00,755
接着就，随即？每个人都明白我在这里说的话

1008
00:51:00,824 --> 00:51:05,393
这是闭包文件后完成的吗？所以

1009
00:51:05,462 --> 00:51:07,897
一旦它闭包，那样我们就可以观察它

1010
00:51:07,965 --> 00:51:13,736
收盘。这样会很好。所以让我们来运行这个和

1011
00:51:13,804 --> 00:51:16,438
看我们的控制台，所以我把我的控制台放在这里。

1012
00:51:16,507 --> 00:51:20,209
其实，这是我的控制台在这里。好，如此

1013
00:51:20,278 --> 00:51:26,581
让我们跑吧。好的，所以这里是我们的应用程序。所以我们

1014
00:51:26,650 --> 00:51:28,684
还没有打开任何文件。所以我们在这里没有任何东西。

1015
00:51:28,752 --> 00:51:32,621
我要继续清理我的控制台。

1016
00:51:32,689 --> 00:51:34,022
所以我们还没有打开任何文件。

1017
00:51:34,091 --> 00:51:35,724
所以我们没有得到任何文件交换。

1018
00:51:35,792 --> 00:51:38,860
所以我要打开我们的Apple Bees。这是我们的Apple Bee。

1019
00:51:38,929 --> 00:51:42,230
而看，documentState日期变为正常，对吧？

1020
00:51:42,299 --> 00:51:43,565
因为我们打开了文件，

1021
00:51:43,634 --> 00:51:47,102
现在它正常了。现在，如何把东西放进去

1022
00:51:47,171 --> 00:51:50,539
这里可能是一个苹果，就像那样。现在，在哪里，

1023
00:51:50,608 --> 00:51:53,809
现在国家会发生什么？好吧，

1024
00:51:53,878 --> 00:51:56,211
最终它会自动保存。它做到了，

1025
00:51:56,280 --> 00:51:58,580
我不知道，一分钟或类似的事情。但

1026
00:51:58,649 --> 00:52:01,082
当它自动保存时，我们会注意到，因为它正在进行

1027
00:52:01,151 --> 00:52:04,787
去提供可用的状态进度。它是，

1028
00:52:04,855 --> 00:52:07,489
进度可用，然后恢复正常。因为

1029
00:52:07,557 --> 00:52:09,358
进展是可用的，因为它正在节省和

1030
00:52:09,426 --> 00:52:12,327
它可以告诉你它保存的进度，并且

1031
00:52:12,396 --> 00:52:16,031
然后恢复正常。我会告诉你另一个窍门。这里，

1032
00:52:16,100 --> 00:52:20,869
顺便说一下，你可以通过威胁强制自动保存

1033
00:52:20,937 --> 00:52:24,707
切换到另一个应用程序。看这个，我要拖

1034
00:52:24,775 --> 00:52:27,175
从底部开始，我将切换到另一个应用程序。

1035
00:52:27,244 --> 00:52:30,512
这导致了自动保存。现在，它并没有在这里做，因为

1036
00:52:30,581 --> 00:52:32,514
我们没有做任何改变。但这是一个好方法

1037
00:52:32,583 --> 00:52:35,150
以确保你正在改变东西的作品。

1038
00:52:35,218 --> 00:52:38,787
所以看这个，现在我要在这里添加一些东西。

1039
00:52:38,856 --> 00:52:42,257
现在当我做这个威胁时，

1040
00:52:42,326 --> 00:52:46,828
它被保存了。看看那里发生了什么？所以当你威胁到

1041
00:52:46,897 --> 00:52:48,797
切换到另一个应用程序自动保存将自动保存。

1042
00:52:48,866 --> 00:52:51,033
因为它只是害怕，我的天哪，我可能会被杀死或

1043
00:52:51,101 --> 00:52:53,101
谁知道什么，我更好地保存。所以

1044
00:52:53,170 --> 00:52:56,605
这是一个很好的诀窍知道什么时候这样做。和

1045
00:52:56,673 --> 00:53:01,310
如果我们闭包这个，那么我们将状态改为闭包。所以

1046
00:53:01,379 --> 00:53:03,012
这很酷。我们刚刚听了那个电台，

1047
00:53:03,080 --> 00:53:04,913
我们只是报道发生了什么。

1048
00:53:04,982 --> 00:53:07,649
好的，现在让我们继续

1049
00:53:07,718 --> 00:53:10,952
有我们的emoji artview是一个广播公司。

1050
00:53:11,021 --> 00:53:15,257
我们在这里收听广播公司的UIDocument

1051
00:53:15,326 --> 00:53:17,993
我们是无线电台的用户。

1052
00:53:18,062 --> 00:53:19,728
现在让我们走另一条路吧，让我们有一个广播。

1053
00:53:19,797 --> 00:53:22,698
所以我要去表情符号艺术，以及我要去的地方

1054
00:53:22,766 --> 00:53:25,133
我在哪里做我的代表团，

1055
00:53:25,202 --> 00:53:28,570
我将使用通知。所以我们先来回顾一下

1056
00:53:28,639 --> 00:53:32,274
我上次演讲后执行了什么任务。

1057
00:53:32,343 --> 00:53:36,378
好吧，现在，就像UIScrollView，UITableView一样，

1058
00:53:36,446 --> 00:53:39,848
等等，我不得不为委派添加一个协议。

1059
00:53:39,917 --> 00:53:41,683
现在我的委员会协议被称为

1060
00:53:41,752 --> 00:53:45,487
EmojiArtViewDelegate只有一个功能

1061
00:53:45,556 --> 00:53:48,256
emojiArtViewChanged。当然ScrollView有一大堆

1062
00:53:48,325 --> 00:53:51,326
其中。 DidScroll，放大视图，表格视图

1063
00:53:51,395 --> 00:53:54,897
代表有很多事情。所有这些行的高度

1064
00:53:54,965 --> 00:53:58,199
其他事情。我们只有一个，就是这个。现在注意

1065
00:53:58,268 --> 00:54:02,370
我将此限制为仅由类实现。

1066
00:54:02,439 --> 00:54:06,374
我为什么这样做？由于委托方法或var，

1067
00:54:06,443 --> 00:54:11,013
在我看来，代表var是我想要的。和

1068
00:54:11,081 --> 00:54:13,748
它很weak，它必须能够堆积如山，

1069
00:54:13,817 --> 00:54:15,317
然后获得释放和

1070
00:54:15,386 --> 00:54:18,720
设置为零，当没有其他人对它感兴趣时。我为什么

1071
00:54:18,789 --> 00:54:22,557
让这个weak？那么，想象一下，我的控制器设置

1072
00:54:22,626 --> 00:54:26,361
本身作为代表，这很可能。很可能。

1073
00:54:26,430 --> 00:54:29,765
如果发生了，现在我们会有一个记忆周期

1074
00:54:29,834 --> 00:54:32,100
因为我的视图会指向控制器。

1075
00:54:32,168 --> 00:54:34,702
当然，控制者指出了它的全部视图。

1076
00:54:34,771 --> 00:54:36,204
所以现在他们正在指向对方。

1077
00:54:36,273 --> 00:54:38,006
他们将互相留在堆中。

1078
00:54:38,075 --> 00:54:40,208
通过使这个代表变weak，它是如此

1079
00:54:40,277 --> 00:54:43,578
这不再会发生。

1080
00:54:43,647 --> 00:54:45,914
所以没有内存循环，因为视图不是

1081
00:54:45,983 --> 00:54:48,817
保持控制器在内存cuz这是一个weak

1082
00:54:48,886 --> 00:54:52,254
指向它的指针。所以我加了这个var，这个weak var，所以

1083
00:54:52,323 --> 00:54:54,789
现在任何想知道我是否已经改变的人都可以设置

1084
00:54:54,858 --> 00:54:56,958
他们自己作为代表，当然还有控制器

1085
00:54:57,027 --> 00:55:02,730
要做到这一点。然后，每当我改变像右下

1086
00:55:02,799 --> 00:55:07,102
这里。如果我有这个消息，我只是把这个消息发给了我的代表。

1087
00:55:07,171 --> 00:55:09,905
我的代表可能是零，我不必有代表。

1088
00:55:09,973 --> 00:55:10,672
我只是发送它

1089
00:55:10,741 --> 00:55:13,575
当然，我是发件人，对吧？委托方法，我们

1090
00:55:13,644 --> 00:55:16,444
所有人都会把自己作为第一个参数。你做

1091
00:55:16,513 --> 00:55:18,179
知道？你已经注意到我确定使用ScrollView和

1092
00:55:18,248 --> 00:55:20,415
TabelView和集合。他们总是发送自己，

1093
00:55:20,484 --> 00:55:24,319
这只是为了方便起见，以便你在那里。

1094
00:55:24,388 --> 00:55:26,788
所以我也这样做。现在这不是唯一的变化，

1095
00:55:26,857 --> 00:55:29,390
这是我正在放弃的一个。当然，如果我放弃一个新的

1096
00:55:29,459 --> 00:55:32,694
表情符号，这是一个变化，但我也必须去这里

1097
00:55:32,763 --> 00:55:34,730
手势。这就是我之前谈论的，

1098
00:55:34,798 --> 00:55:35,731
这有点烦人

1099
00:55:35,799 --> 00:55:39,033
就像我选择并移动视图一样。我不得不说，好吧，

1100
00:55:39,102 --> 00:55:42,137
如果这是该手势的结束，那么发送它。

1101
00:55:42,205 --> 00:55:45,274
而且在这里我调整了大小。我不得不说，

1102
00:55:45,342 --> 00:55:47,009
好吧，如果它是调整大小的结束，发送它。

1103
00:55:47,077 --> 00:55:48,577
现在我想摆脱这些和

1104
00:55:48,645 --> 00:55:51,179
我将能够与KVO合作，但我们会让他们参加

1105
00:55:51,248 --> 00:55:55,551
那里现在。那就是代表团。就是这样

1106
00:55:55,619 --> 00:55:58,754
在这个视图方面是必要的。然后在控制器方面，

1107
00:55:58,822 --> 00:56:02,891
我做的是当我在这里创建emojiArtView的时候，

1108
00:56:02,960 --> 00:56:05,627
我以自己为代表。

1109
00:56:05,695 --> 00:56:07,729
那么，如果我将成为它的代表，

1110
00:56:07,798 --> 00:56:11,166
这意味着我必须实施EmojiArtViewDelegate

1111
00:56:11,235 --> 00:56:13,968
像那些实现scrollviews委托。

1112
00:56:14,037 --> 00:56:16,638
这意味着我必须实际执行那个

1113
00:56:16,707 --> 00:56:19,174
就在我的emojiArtViewDelegate方法中

1114
00:56:19,243 --> 00:56:22,844
实施了，我做了什么？我调用给documentChanged，

1115
00:56:22,912 --> 00:56:26,815
什么是文件更改？这里是文件更改，

1116
00:56:26,884 --> 00:56:30,118
这是以前称为Save的方法。

1117
00:56:30,187 --> 00:56:32,621
因为我这样做，我就放弃了我的保存按钮

1118
00:56:32,689 --> 00:56:35,324
只是叫和保存。这里的内容正是如此

1119
00:56:35,392 --> 00:56:37,492
与过去一样。只需更新我的文件

1120
00:56:37,561 --> 00:56:39,994
模型成为我的模型，然后更新已更改的文档

1121
00:56:40,063 --> 00:56:43,298
计数。这是我所做的一切。那是代表团，

1122
00:56:43,367 --> 00:56:45,467
这就是它的全部。你看看它是如何工作的？

1123
00:56:45,535 --> 00:56:47,769
很简单，我们不会，

1124
00:56:47,838 --> 00:56:50,706
我们不再使用授权。

1125
00:56:50,774 --> 00:56:52,674
我们会留下代表团的视图，但

1126
00:56:52,743 --> 00:56:54,576
我们不会在我们的控制器中使用它。

1127
00:56:54,645 --> 00:56:55,844
相反，我们要用一个电台。

1128
00:56:55,912 --> 00:56:57,779
所以让我们回到我们的artview和

1129
00:56:57,848 --> 00:57:00,315
在电台播出。而我只是会去做

1130
00:57:00,383 --> 00:57:02,250
它在我与我的代表交谈的任何地方。

1131
00:57:02,319 --> 00:57:04,652
相反，我会在一个电台上播放。

1132
00:57:04,721 --> 00:57:08,223
我只是想说NotificationCenter.default.p-

1133
00:57:08,292 --> 00:57:10,358
ost，这就是我们播放的方式。

1134
00:57:10,427 --> 00:57:14,395
我必须给它一个名字，谁在广播。好，

1135
00:57:14,464 --> 00:57:17,232
谁在广播是我，我们要做什么

1136
00:57:17,300 --> 00:57:22,304
一个名字？那么，正如我所建议的那样，我建议去这里和

1137
00:57:22,372 --> 00:57:26,641
做一个扩展notification.name和

1138
00:57:26,710 --> 00:57:31,613
添加你自己的静态让我调用给EmojiArtView

1139
00:57:31,681 --> 00:57:35,617
确实改变了通知并将其设置为等于

1140
00:57:35,686 --> 00:57:40,856
一个你想在这里使用任何字符串的notification.name。

1141
00:57:40,924 --> 00:57:42,824
我可能会在这里使用相同的字符串。

1142
00:57:42,893 --> 00:57:45,460
它不一定是相同的字符串，但我会和

1143
00:57:45,529 --> 00:57:46,628
这现在将如此

1144
00:57:46,697 --> 00:57:48,964
你可以做notification.name.emojiartvie-

1145
00:57:49,032 --> 00:57:51,967
wdidchange。这是我们电台的名字。

1146
00:57:52,035 --> 00:57:55,003
记住电台是Notification.Names，所以

1147
00:57:55,071 --> 00:57:59,107
这是。所以现在，我可以在这里下去

1148
00:57:59,176 --> 00:58:05,947
说我想我的名字是Notification.Name.EmojiArtVie-

1149
00:58:06,016 --> 00:58:12,253
wDidChange。顺便说一下，斯威夫特当然可以推断出这一点。

1150
00:58:12,322 --> 00:58:15,056
所以我们可以这样做，这就是我们要做的，而且

1151
00:58:15,125 --> 00:58:17,459
在Notification.Name的东西中输入所有的东西

1152
00:58:17,527 --> 00:58:20,328
没有很好的理由。就是这样，这就是我们需要的

1153
00:58:20,397 --> 00:58:22,864
做的是做到这一点。当然，我们需要在这里做，

1154
00:58:22,933 --> 00:58:25,333
但我们必须再次在这里做出姿态。

1155
00:58:25,402 --> 00:58:29,204
并且在我们这个代表在这里的同一个地方做，

1156
00:58:29,273 --> 00:58:31,406
这另一个在哪里呢？

1157
00:58:31,475 --> 00:58:33,341
好吧，再次，这有点烦人，

1158
00:58:33,410 --> 00:58:35,844
我们会用KVO来解决这个问题。但现在，我们正在播出

1159
00:58:35,913 --> 00:58:37,846
在这个广播电台每当有什么变化

1160
00:58:37,915 --> 00:58:40,415
我们调整了某些东西，我们放弃了一些东西，不管怎样

1161
00:58:40,484 --> 00:58:42,583
现在，在我们的控制器中回到这里，

1162
00:58:42,652 --> 00:58:44,619
我不再是一个代表。

1163
00:58:44,687 --> 00:58:47,255
所以我要去这里，摆脱这一切。

1164
00:58:47,323 --> 00:58:50,492
所以我不会再把自己定位为这里的代表。

1165
00:58:50,560 --> 00:58:54,496
完全摆脱这一点，我不再执行

1166
00:58:54,565 --> 00:58:58,566
EmojiArtView委托。我不再那么说了

1167
00:58:58,635 --> 00:59:01,202
我实现了EmojiartView委托。

1168
00:59:01,271 --> 00:59:04,072
所以，现在我已经脱离了我的视图。

1169
00:59:04,141 --> 00:59:06,942
相反，我会听那个电台，所以

1170
00:59:07,010 --> 00:59:10,212
我该怎么做？那一个，让我们开始聆听

1171
00:59:10,280 --> 00:59:13,548
一旦文件被打开。在文档打开之前

1172
00:59:13,616 --> 00:59:16,651
会无用听我的表情艺术字。再一次，

1173
00:59:16,720 --> 00:59:20,054
我会在这里需要另一个小观察员。

1174
00:59:20,123 --> 00:59:23,491
所以我会把这个叫做emojiArtviewObserver因为它

1175
00:59:23,560 --> 00:59:27,062
这就是它将要观察的表情符号。

1176
00:59:27,131 --> 00:59:30,332
我会说emojiArtViewObserver，去吧，

1177
00:59:30,401 --> 00:59:35,369
在这里闭包里面，因为这是完成闭包

1178
00:59:35,438 --> 00:59:40,943
开幕。所以我会说self.emojiArtViewObserver

1179
00:59:41,011 --> 00:59:45,280
=通知中心，我们就是这样听的。

1180
00:59:45,349 --> 00:59:50,218
Default.addObserver，与我们添加观察者的方式相同

1181
00:59:50,287 --> 00:59:55,157
UIDocumentState。我们再来分析一下，

1182
00:59:55,225 --> 00:59:59,761
所以我们可以清楚地看到这一切。好，如此

1183
00:59:59,830 --> 01:00:05,300
名称是notification.Name.EmojiArtVie-

1184
01:00:05,369 --> 01:00:09,937
wDidChange。再一次，我们不需要那样做

1185
01:00:10,006 --> 01:00:13,107
这样做，我们会清楚地看到它。对象是我的

1186
01:00:13,176 --> 01:00:17,612
EmojiArtView，这是我感兴趣听的唯一一个

1187
01:00:17,681 --> 01:00:20,815
关于emojiArt，你确实改变了广播。

1188
01:00:20,884 --> 01:00:25,620
Queue，当然是Queue.Mean，因为我只是，

1189
01:00:25,688 --> 01:00:29,858
虽然令人惊讶的是，这不需要主要。

1190
01:00:29,927 --> 01:00:32,627
因为我要做的就是告诉我的文档，

1191
01:00:32,696 --> 01:00:35,797
这是我模型的一部分，扩展了我的模型的一部分。

1192
01:00:35,865 --> 01:00:39,167
我只是想告诉它它改变了。那不是什么

1193
01:00:39,235 --> 01:00:42,304
用户界面，所以我不一定要在这里做。我可以

1194
01:00:42,372 --> 01:00:45,473
放在这里，无论我是什么线程都很安全

1195
01:00:45,542 --> 01:00:48,776
广播。现在我碰巧知道我的emojiArtView

1196
01:00:48,845 --> 01:00:51,913
正在从主线播放，对吗？因为它

1197
01:00:51,982 --> 01:00:54,115
当它下降或有人调整大小时，显然，

1198
01:00:54,184 --> 01:00:57,952
我在那里的主队。所以这并不重要，但是，

1199
01:00:58,021 --> 01:01:00,155
无论如何。好吧，我们走吧，

1200
01:01:00,224 --> 01:01:03,124
现在我们收到了这个通知。原来是这样

1201
01:01:03,193 --> 01:01:07,128
我们的EmojiArtView播放时不播放任何音乐。

1202
01:01:07,197 --> 01:01:10,031
它可以，它可能会向您发送它添加的标签或

1203
01:01:10,099 --> 01:01:12,567
改变或什么的。但它不，没关系。

1204
01:01:12,636 --> 01:01:16,671
我们不在乎，因为我们想知道的就是这个

1205
01:01:16,740 --> 01:01:20,575
改变了，所以我们可以说documentChanged，对吧？那是

1206
01:01:20,644 --> 01:01:24,446
现在呢，当然，我们需要停止听这个。

1207
01:01:24,515 --> 01:01:26,047
什么时候该做这件事？

1208
01:01:26,116 --> 01:01:28,516
当你靠近时我会这样做。

1209
01:01:28,585 --> 01:01:31,152
无论你是否成功闭包，我都会去做

1210
01:01:31,221 --> 01:01:33,254
因为我会被解雇。所以

1211
01:01:33,323 --> 01:01:35,624
我绝对不会在这里聆听。

1212
01:01:35,692 --> 01:01:40,028
我只是想说如果我可以让观察员，

1213
01:01:40,096 --> 01:01:46,200
观察者=我的emojiArt.View观察者，艺术观察者。

1214
01:01:46,269 --> 01:01:50,439
然后，我要问通知中心，

1215
01:01:50,507 --> 01:01:55,310
默认的一个，删除该观察者。和

1216
01:01:55,379 --> 01:01:58,513
就是这样，所以这比代表团简单得多，

1217
01:01:58,581 --> 01:02:00,648
在双方。我更容易做到这一点。

1218
01:02:00,717 --> 01:02:02,050
你不必实现另一种方法。

1219
01:02:02,118 --> 01:02:03,218
您不必将自己设置为委派。

1220
01:02:03,287 --> 01:02:03,985
你不必这样做。

1221
01:02:04,054 --> 01:02:06,020
你只是开始聆听并停止聆听和

1222
01:02:06,089 --> 01:02:09,023
你会发现。所以这就是我们使用通知的原因

1223
01:02:09,092 --> 01:02:11,726
很多时候我们已经使用过其他时间

1224
01:02:11,794 --> 01:02:14,662
代表团，其他类也是如此。

1225
01:02:14,731 --> 01:02:17,399
好吧，让我们看看我们是否破坏了任何东西。穿过我们的

1226
01:02:17,467 --> 01:02:20,167
手指把代表团完全从我们的国家移走

1227
01:02:20,236 --> 01:02:23,371
模式emoji.Art.ViewController没有破坏任何东西。

1228
01:02:23,440 --> 01:02:25,440
幸运的是，我们有其他观察正在进行，所以

1229
01:02:25,509 --> 01:02:27,709
我们可以告诉你。所以这里是苹果蜜蜂，

1230
01:02:27,777 --> 01:02:31,412
让我们调出我们的控制台，改成正常的，

1231
01:02:31,481 --> 01:02:34,582
那很好。现在，希望当我们放下东西时，

1232
01:02:34,651 --> 01:02:37,251
希望这导致了广播电台的广播

1233
01:02:37,320 --> 01:02:39,654
发生，以便我们注意到有些不同。

1234
01:02:39,723 --> 01:02:43,058
希望这会在一瞬间自动保存，

1235
01:02:43,126 --> 01:02:45,727
我们可以威胁要强制这个问题

1236
01:02:45,795 --> 01:02:49,831
去别的地方。呃，它做到了。所以，它一定是

1237
01:02:49,900 --> 01:02:53,000
我们的电台工作。我们注意到这种变化，

1238
01:02:53,069 --> 01:02:56,637
否则我们不会在那里自动保存。好的

1239
01:02:56,706 --> 01:03:00,308
我们要做的最后一件事就是使用KVO来剔除一些

1240
01:03:00,376 --> 01:03:04,111
该代码调用委托并下载

1241
01:03:04,180 --> 01:03:07,615
我的手势视图。基本上我想要做的就是去

1242
01:03:07,683 --> 01:03:12,053
我的手势在这里，我想删除此代码。

1243
01:03:12,121 --> 01:03:14,822
看，这是我告诉我的代表和代理的代码

1244
01:03:14,891 --> 01:03:17,259
在电台上张贴时，在这种情况下，

1245
01:03:17,327 --> 01:03:19,760
一些感动。所以我想要那个，

1246
01:03:19,829 --> 01:03:23,198
然后在这里调整大小，这是当我们调整大小时，

1247
01:03:23,266 --> 01:03:26,434
我想要这个。所以我只是要删除它。

1248
01:03:26,503 --> 01:03:31,139
但我显然，当我改变时仍然需要告诉别人。

1249
01:03:31,207 --> 01:03:34,809
所以我要回到我的ArtView这里。而且一旦我

1250
01:03:34,877 --> 01:03:38,813
添加一个标签，我将会看到该标签

1251
01:03:38,882 --> 01:03:42,217
其中心在变化。如果它的中心发生变化，我会走

1252
01:03:42,285 --> 01:03:44,952
通知我的代表并在我的电台上播放。

1253
01:03:45,021 --> 01:03:47,221
基本上就是要在这里做到这一点。

1254
01:03:47,290 --> 01:03:50,325
那么我们该怎么做？最棘手的事情是，

1255
01:03:50,394 --> 01:03:54,562
其实很简单。我们只是要标签

1256
01:03:54,631 --> 01:03:58,466
观察和

1257
01:03:58,534 --> 01:04:03,738
什么属性观察/。中央。

1258
01:04:05,609 --> 01:04:08,309
当我们观察时，我们会得到一个闭包。闭包的要去

1259
01:04:08,378 --> 01:04:13,247
把标签传递给我们，而那个小小的物体变了，

1260
01:04:13,316 --> 01:04:15,917
在那里。我们可以在这里做任何我们想做的事。

1261
01:04:15,986 --> 01:04:18,619
我们想做什么？我们想要这样做。

1262
01:04:18,688 --> 01:04:23,358
告诉我们的代表并告诉广播电台一些事情

1263
01:04:23,427 --> 01:04:27,528
改变。但记住观察返回一个cookie。和

1264
01:04:27,597 --> 01:04:30,698
只要我们想要，我们必须将cookie保存在堆中

1265
01:04:30,767 --> 01:04:33,534
这发生。所以我会通过一点点来做到这一点

1266
01:04:33,603 --> 01:04:38,306
私人变种，我要调用给我的标签意见。

1267
01:04:38,375 --> 01:04:43,711
这将是一个与UIViews作为密钥和字典

1268
01:04:43,780 --> 01:04:49,851
这些NSKeyValueObservations作为值。现在放

1269
01:04:49,920 --> 01:04:53,221
这本词典里的东西会把东西堆在一堆。

1270
01:04:53,290 --> 01:04:56,291
但是只要这个EmojiArtView在堆中。

1271
01:04:56,359 --> 01:04:58,259
只要这个EmojiArtView离开堆

1272
01:04:58,328 --> 01:05:00,328
这将离开堆和所有的观察

1273
01:05:00,397 --> 01:05:03,197
将离开堆，宇 - 胡。所以这就是伟大的

1274
01:05:03,266 --> 01:05:05,099
这不需要做那个远程观察，

1275
01:05:05,168 --> 01:05:07,969
像通知一样去除观察者的事情。因为

1276
01:05:08,038 --> 01:05:10,437
当事情自然而然地离开了观察

1277
01:05:10,506 --> 01:05:15,176
自然停止。但是，如果我们不离开堆，那会怎么样

1278
01:05:15,245 --> 01:05:18,312
我们删除该子视图。我们没有任何，

1279
01:05:18,381 --> 01:05:21,415
实际上有任何用户界面来删除我们的emojis。

1280
01:05:21,484 --> 01:05:23,451
他们曾经在那里，他们永远在那里。但

1281
01:05:23,519 --> 01:05:26,120
我们可以设想出一些这样的姿势

1282
01:05:26,189 --> 01:05:29,157
删除它们，所以我们希望那一天和那天

1283
01:05:29,226 --> 01:05:32,193
我想确保我们删除它。所以，首先让我们放

1284
01:05:32,262 --> 01:05:35,529
观察，KeyValueObservations在这里。

1285
01:05:35,598 --> 01:05:40,301
我会说labelObservations

1286
01:05:40,369 --> 01:05:45,240
分标签=这个观察。

1287
01:05:45,308 --> 01:05:50,145
所以这个labelObservation为这个标签，对吧。现在我

1288
01:05:50,213 --> 01:05:54,549
不得不每当这个视图从父视图中删除，

1289
01:05:54,618 --> 01:05:58,152
我不得不让这个观察结果离开堆。

1290
01:05:58,221 --> 01:06:00,221
换句话说，我将不得不从这里删除它。

1291
01:06:00,290 --> 01:06:02,657
每个人都明白吗？那我该怎么做？

1292
01:06:02,726 --> 01:06:06,494
幸运的是，有一种很好的方法叫做

1293
01:06:06,563 --> 01:06:10,865
willRemoveSubview。而且当然，

1294
01:06:10,933 --> 01:06:14,135
我们会调用给super.willRemoveSubview。和

1295
01:06:14,204 --> 01:06:17,338
这会随时调用一个视图从我身上移除，

1296
01:06:17,407 --> 01:06:20,774
这是完美的。我要在这里说的是我只是

1297
01:06:20,843 --> 01:06:25,212
要检查以确保这个视图被删除

1298
01:06:25,281 --> 01:06:29,150
实际上是在标签观察层中。所以我

1299
01:06:29,219 --> 01:06:35,990
会说如果LabelObservations子视图不等于零，

1300
01:06:36,058 --> 01:06:41,062
换句话说，它会有一个观察。

1301
01:06:41,131 --> 01:06:43,998
然后，我要将labelObservation设置为

1302
01:06:44,067 --> 01:06:47,635
该子视图为零。繁荣，它只是离开了堆。

1303
01:06:47,703 --> 01:06:51,105
一旦我清除了这件事，它就消失了。

1304
01:06:51,174 --> 01:06:53,508
它停止观察哪一个正是我想要的，

1305
01:06:53,577 --> 01:06:54,776
每个人都有这个？

1306
01:06:54,845 --> 01:06:56,877
所以这就是我们需要做的。

1307
01:06:56,946 --> 01:07:02,483
让我们确保我们在这里没有破坏任何东西。可以，然后呢

1308
01:07:02,552 --> 01:07:05,319
我们在这里得到了我们的Apple Bees。让我们改变一些事情。

1309
01:07:05,388 --> 01:07:07,855
好吧，让我们把这个八球移到这里。

1310
01:07:07,924 --> 01:07:10,091
然后我们试着威胁，

1311
01:07:10,160 --> 01:07:14,061
哎呀，让我们把控制台放在这里。 [不可思议]在这里，

1312
01:07:14,130 --> 01:07:19,233
好吧，让我们威胁要去别的地方。

1313
01:07:19,302 --> 01:07:24,505
Woo-hoo，它会自动保存！它再次运作。好吧，

1314
01:07:24,574 --> 01:07:29,477
听起来不错？回到我们的幻灯片。

1315
01:07:29,545 --> 01:07:34,482
好的时机在这里。现在你还记得

1316
01:07:34,551 --> 01:07:37,185
我们讨论了视图控制器生命周期的权利？

1317
01:07:37,254 --> 01:07:39,453
视图会出现，视图确实出现，所有这些东西。

1318
01:07:39,522 --> 01:07:42,323
那么同样的事情发生在你的应用程序中

1319
01:07:42,392 --> 01:07:44,425
而且它在这里通过这张图表。

1320
01:07:44,494 --> 01:07:47,061
所以，我要谈谈它是如何转变的

1321
01:07:47,129 --> 01:07:48,296
所有这些阶段，但

1322
01:07:48,365 --> 01:07:51,065
首先我要谈谈阶段。首先，

1323
01:07:51,134 --> 01:07:55,569
有前景无效，这是你的代码的地方

1324
01:07:55,638 --> 01:07:59,073
运行，但你没有得到任何UI事件。那么你

1325
01:07:59,142 --> 01:08:01,943
不能做任何事情。所以你只能做一些准备

1326
01:08:02,011 --> 01:08:05,880
在这个空间工作。然后有前景主动。

1327
01:08:05,949 --> 01:08:07,848
这是你习惯的正常状态。

1328
01:08:07,917 --> 01:08:10,484
获取UI事件，视图控制器进入屏幕，

1329
01:08:10,553 --> 01:08:11,886
继续，你正在做你所有的东西。

1330
01:08:11,954 --> 01:08:14,288
这是您的应用的正常运行状态。

1331
01:08:14,357 --> 01:08:18,292
然后是背景。在后台你的代码是

1332
01:08:18,361 --> 01:08:21,061
运行，你没有得到任何UI事件，

1333
01:08:21,130 --> 01:08:22,863
你永远不会住在这里很久，

1334
01:08:22,932 --> 01:08:27,035
也许30秒。所以这是暂时的状态，所以任何事情

1335
01:08:27,103 --> 01:08:30,338
你在背景状态下做得很快。和

1336
01:08:30,406 --> 01:08:33,974
那么你进入这个状态暂停。这里你的代码是

1337
01:08:34,043 --> 01:08:36,911
没有运行。理解你的代码是很重要的

1338
01:08:36,980 --> 01:08:41,516
应用程序随处运行你的应用没有获得任何CPU周期。

1339
01:08:41,584 --> 01:08:43,685
现在关于这个状态的重要性在于

1340
01:08:43,753 --> 01:08:49,323
你可能会在这个状态下随时被杀。好吧，

1341
01:08:49,392 --> 01:08:52,060
所以让我们来谈谈我们如何过渡到这里。一

1342
01:08:52,128 --> 01:08:55,029
转换正在启动您的应用程序。所以当你启动你的

1343
01:08:55,098 --> 01:08:57,665
应用程序，你从没有运行你的二进制文件甚至没有运行

1344
01:08:57,734 --> 01:09:01,602
简要地执行前景非活动状态，

1345
01:09:01,670 --> 01:09:04,171
和前景激活状态。所以你确实通过了

1346
01:09:04,240 --> 01:09:06,741
该前景处于非活动状态，在您跑步的路上短暂停留

1347
01:09:06,809 --> 01:09:09,410
当你启动。现在，另一个重要的是你

1348
01:09:09,479 --> 01:09:11,279
切换到另一个应用程序，对吧？

1349
01:09:11,347 --> 01:09:13,380
所以你是活跃的应用程序，有人在使用你，并且

1350
01:09:13,449 --> 01:09:15,616
然后他们切换到其他应用程序。

1351
01:09:15,685 --> 01:09:19,287
当发生这种情况时，您可以进入前景无效状态

1352
01:09:19,355 --> 01:09:22,857
只是一会儿，然后一路下降到背景，

1353
01:09:22,926 --> 01:09:25,960
你在背景中坐了30秒，然后

1354
01:09:26,029 --> 01:09:28,329
那么你移动到暂停。和

1355
01:09:28,398 --> 01:09:30,698
现在从暂停或者你重新激活，

1356
01:09:30,767 --> 01:09:35,870
如果他们回到你身边，或者你在某个时候遇害。

1357
01:09:35,938 --> 01:09:38,539
那些是直接的。当你遇害时，

1358
01:09:38,608 --> 01:09:41,275
你直接从挂起到未运行。

1359
01:09:41,344 --> 01:09:43,811
你不会通过某种你可以运行的状态

1360
01:09:43,879 --> 01:09:47,515
码。让我们来谈谈

1361
01:09:47,583 --> 01:09:50,952
你如何得到所有这些转换的通知。

1362
01:09:51,020 --> 01:09:54,388
会发生什么，你应该做什么。现在，

1363
01:09:54,457 --> 01:09:55,590
所有这些我要告诉你的事情，

1364
01:09:55,658 --> 01:09:59,160
顺便说一下，并不是那么重要。因为很多

1365
01:09:59,229 --> 01:10:02,930
事情照顾你。例如，UIDocument，

1366
01:10:02,999 --> 01:10:05,466
你会注意到当我们威胁到另一个应用时，

1367
01:10:05,535 --> 01:10:09,303
它自动保存。它知道这些转变。它在做

1368
01:10:09,372 --> 01:10:10,905
对你来说，所以你甚至不需要做任何事情。

1369
01:10:10,973 --> 01:10:13,273
这在iOS中很多事情都是如此。所以

1370
01:10:13,342 --> 01:10:14,876
我会告诉你所有这些事情。

1371
01:10:14,944 --> 01:10:16,277
而你这样做的方式，但大多数时候，

1372
01:10:16,346 --> 01:10:18,646
你甚至不需要做任何事情。你只需要

1373
01:10:18,715 --> 01:10:20,581
知道这些转变正在发生。

1374
01:10:20,650 --> 01:10:23,217
好的，所以第一次过渡是从未运行

1375
01:10:23,286 --> 01:10:26,287
进入这个不活动状态，这个前景无效。

1376
01:10:26,355 --> 01:10:29,791
这有点像准备你的应用程序。当这个情况发生时，

1377
01:10:29,859 --> 01:10:31,592
就像我在这里发生的所有事情一样

1378
01:10:31,660 --> 01:10:34,996
谈谈你的AppDelegate.swift中的方法，你知道的

1379
01:10:35,064 --> 01:10:38,365
我们继续坚持支持的继子

1380
01:10:38,434 --> 01:10:42,270
文件。其实我们上次看过它。记住它已经

1381
01:10:42,338 --> 01:10:46,507
你打开URL的东西？记住我们

1382
01:10:46,576 --> 01:10:48,943
那里有我们正在谈论的那个小代码，

1383
01:10:49,012 --> 01:10:51,512
即UI文档浏览器视图控制器，处理开放

1384
01:10:51,581 --> 01:10:54,015
我们的网址？所以我们看了看。但

1385
01:10:54,083 --> 01:10:55,182
那里有很多方法。

1386
01:10:55,251 --> 01:10:58,619
这就是他们所说的所有这些转变

1387
01:10:58,687 --> 01:11:00,554
方法在那里。你会看到那里有存根。

1388
01:11:00,623 --> 01:11:04,192
如果你去看看那里有存根，那就有了

1389
01:11:04,260 --> 01:11:06,126
评论了一些有点儿告诉你的东西。

1390
01:11:06,195 --> 01:11:08,696
所以这里都有很好的记录。

1391
01:11:08,765 --> 01:11:11,299
顺便说一下，所有这些转换也是

1392
01:11:11,367 --> 01:11:14,101
在电台播出。所以

1393
01:11:14,170 --> 01:11:16,103
你可以注册并放入一个闭包

1394
01:11:16,172 --> 01:11:17,471
希望这种转变发生，

1395
01:11:17,540 --> 01:11:20,641
闭包可以执行，好吗？所以这很重要

1396
01:11:20,710 --> 01:11:23,244
也要知道。对于第一个不太有用的

1397
01:11:23,312 --> 01:11:25,979
应用程序将完成与选项启动。

1398
01:11:26,048 --> 01:11:28,683
并且应用程序用应用程序完成了启动，

1399
01:11:28,751 --> 01:11:31,251
因为这是你第一次真正写你的

1400
01:11:31,320 --> 01:11:36,224
自己的代码。注意那个东西有一个小字典

1401
01:11:36,292 --> 01:11:39,260
通过了，对吧？应用程序将会并且完成

1402
01:11:39,328 --> 01:11:41,962
启动选项。那本字典告诉你

1403
01:11:42,031 --> 01:11:45,566
你为什么被推出。现在，你为什么要启动？

1404
01:11:45,634 --> 01:11:47,901
那么，用户当然可能已经触及你的图标。

1405
01:11:47,970 --> 01:11:50,604
这是大部分时间。但你也可以启动

1406
01:11:50,673 --> 01:11:52,806
因为有人希望你打开一个文件。

1407
01:11:52,875 --> 01:11:53,941
我们是EmojiArt，和

1408
01:11:54,010 --> 01:11:55,743
有人希望我们打开EmojiArt文档和

1409
01:11:55,811 --> 01:11:58,746
我们没有跑步，我们可以开始这样做。您

1410
01:11:58,815 --> 01:12:02,483
也可以设置用户在何时启动的东西

1411
01:12:02,551 --> 01:12:05,986
走过一台干洗店。你可以实际注册

1412
01:12:06,055 --> 01:12:10,691
在世界的一个地方，走过，繁荣，你会得到启动。

1413
01:12:10,759 --> 01:12:13,894
你也可以有这个活动延续的事情，

1414
01:12:13,963 --> 01:12:16,631
你在iPad上使用表情符艺术的地方，

1415
01:12:16,700 --> 01:12:18,932
然后你切换到你的iPhone。

1416
01:12:19,001 --> 01:12:20,802
然后在角落里有一个你按下的小图标。

1417
01:12:20,870 --> 01:12:22,303
现在你回到了表情符号艺术中。

1418
01:12:22,371 --> 01:12:25,973
那么可能不得不推出你。你可能会得到

1419
01:12:26,042 --> 01:12:29,543
推送通知。您正在使用Cloud Kit

1420
01:12:29,612 --> 01:12:32,179
你的数据库改变了，你会醒来说，嘿，看，

1421
01:12:32,248 --> 01:12:34,615
你有一个推送通知给你。所以

1422
01:12:34,683 --> 01:12:37,685
你有很多原因被唤醒并启动，

1423
01:12:37,754 --> 01:12:40,520
该字典将包含所有信息

1424
01:12:40,589 --> 01:12:44,525
你需要知道为什么。它曾经是一个应用程序

1425
01:12:44,594 --> 01:12:47,695
将会并且完成发射。我们建立了我们的UI。

1426
01:12:47,764 --> 01:12:50,831
我们创建了一个分割视图。我们创建了一个导航控件。

1427
01:12:50,900 --> 01:12:53,534
我们放了一个视图控制器。我们再也不这样做了。

1428
01:12:53,603 --> 01:12:55,569
我只提到这一点，因为，你的最终项目，

1429
01:12:55,638 --> 01:12:58,038
你会出去和谷歌的东西，看看互联网。和

1430
01:12:58,107 --> 01:13:01,108
你会看到人们说，去创建一个分裂的视图

1431
01:13:01,177 --> 01:13:03,911
ApplicationDidFinishLaunching与选项。没有，

1432
01:13:03,979 --> 01:13:06,347
我们不这样做。故事板，这就是我们如何做到的。

1433
01:13:06,416 --> 01:13:09,250
那些答案是故事板。要么

1434
01:13:09,318 --> 01:13:13,054
从未获得故事板故事的人。我们建立我们的

1435
01:13:13,122 --> 01:13:16,790
故事板中的UI，而不是这些方法中的方法。

1436
01:13:16,859 --> 01:13:20,761
好的，下一次过渡实际上即将到来

1437
01:13:20,830 --> 01:13:22,830
来自另一侧的无效状态。

1438
01:13:22,899 --> 01:13:24,398
你是活跃的应用程序，和

1439
01:13:24,467 --> 01:13:26,200
不是你不会成为活跃的应用程序。

1440
01:13:26,268 --> 01:13:28,202
可能是因为用户点击了另一个应用程序。

1441
01:13:28,271 --> 01:13:30,737
这一个是ApplicationWillResignActive，

1442
01:13:30,806 --> 01:13:32,873
因为那就是发生了什么。

1443
01:13:32,942 --> 01:13:36,744
在这里你想把它当作暂停按钮。

1444
01:13:36,812 --> 01:13:39,346
你想暂停你的应用中发生的任何事情

1445
01:13:39,415 --> 01:13:42,349
这里。假设我使用Asteroids游戏的例子。

1446
01:13:42,418 --> 01:13:45,419
你的射击小行星。你想要整个Asteroid字段

1447
01:13:45,487 --> 01:13:50,291
当你得到这个时暂停。然后是下一个

1448
01:13:50,359 --> 01:13:54,829
这里是一个无效的主动，即，取消暂停。

1449
01:13:56,699 --> 01:13:58,865
所以这是ApplicationDidBecomeActive。所以

1450
01:13:58,934 --> 01:14:02,069
你有点想停下来，在这里休息一下。现在，

1451
01:14:02,138 --> 01:14:04,338
有很多应用程序，这是没有道理的。你永远不会停顿或

1452
01:14:04,407 --> 01:14:07,341
取消暂停。他们不是那样的应用程序。他们，他们只是

1453
01:14:07,410 --> 01:14:08,876
他们是什么，所以你不必做任何事情。

1454
01:14:08,945 --> 01:14:11,779
但是，如果你有一个应用程序，那么事情就会有意义

1455
01:14:11,848 --> 01:14:14,515
暂停，这是你在这两个地方暂停和取消暂停的地方

1456
01:14:14,584 --> 01:14:19,486
的东西。现在，这个，就在这里，是一个人

1457
01:14:19,555 --> 01:14:22,323
点击另一个应用程序，你已经经历了积极的，不活跃的，

1458
01:14:22,391 --> 01:14:24,558
现在你正在转向这种背景状态。

1459
01:14:24,627 --> 01:14:26,593
这是ApplicationDidEnterBackground。

1460
01:14:26,662 --> 01:14:30,330
现在是时候把这些舱口封好了。

1461
01:14:30,399 --> 01:14:33,934
闭包你的文件，让自己处于一种可能的状态

1462
01:14:34,003 --> 01:14:36,637
被杀害。你已经有大约30秒的时间准备好了

1463
01:14:36,706 --> 01:14:38,538
杀害。你可能不会被杀死，

1464
01:14:38,607 --> 01:14:42,143
但你可能会。所以你不想打开任何文件，

1465
01:14:42,211 --> 01:14:44,411
如果它们被闭包，它们会被损坏，或者

1466
01:14:44,480 --> 01:14:49,049
未保存的数据在您的应用程序中，闭包这里的东西。和

1467
01:14:49,118 --> 01:14:51,752
你需要30秒才能做到这一点。你可以要求延期，

1468
01:14:51,820 --> 01:14:54,054
时间很短，但如果你问得太多，

1469
01:14:54,123 --> 01:14:56,457
系统将停止授予您这些例外，

1470
01:14:56,526 --> 01:14:57,324
扩展。

1471
01:14:57,392 --> 01:15:00,027
所以想想，你有30秒左右

1472
01:15:00,096 --> 01:15:06,099
让你的孵化在这里。下一个是这里

1473
01:15:06,168 --> 01:15:07,801
ApplicationWillEnterForegro- und。

1474
01:15:07,870 --> 01:15:09,737
所以，在这里，你走下了背景视图，

1475
01:15:09,806 --> 01:15:12,740
你打开舱门，你又被激活了。

1476
01:15:12,809 --> 01:15:15,576
你没有死。在这里，你想要打破僵局

1477
01:15:15,645 --> 01:15:19,013
舱口盖。打开你闭包的东西。

1478
01:15:19,081 --> 01:15:20,681
现在，很多时候你不需要在这里做任何事情，

1479
01:15:20,750 --> 01:15:23,517
因为你打开了你闭包的东西

1480
01:15:23,586 --> 01:15:26,153
无论如何，按照要求在舱口下面打水。

1481
01:15:26,221 --> 01:15:27,622
如果您尝试访问文件和

1482
01:15:27,690 --> 01:15:30,057
它不是开放的，好吧，你会打开它。所以，

1483
01:15:30,125 --> 01:15:31,792
通常你不需要在这里做任何事情，而且

1484
01:15:31,861 --> 01:15:35,162
我有点建议以这种方式编写代码。所以你

1485
01:15:35,230 --> 01:15:39,400
并不是真的不得不打开舱门。所以

1486
01:15:39,468 --> 01:15:41,235
那是所有发生的事情。

1487
01:15:41,303 --> 01:15:43,904
所有那些你得到广播电台，所有这些

1488
01:15:43,973 --> 01:15:47,274
在应用程序委托中可以执行的方法。

1489
01:15:47,343 --> 01:15:50,144
但是AppDelegate也会在其中做一些其他的事情。

1490
01:15:50,213 --> 01:15:53,748
例如，我们上次看到的开放URL的东西，

1491
01:15:53,816 --> 01:15:56,517
它也可以做后台抓取。

1492
01:15:56,585 --> 01:15:57,417
这很酷。

1493
01:15:57,486 --> 01:15:58,886
假设你有一个Twitter客户端，或者

1494
01:15:58,954 --> 01:16:01,789
类似的东西，当有人启动你的应用程序，

1495
01:16:01,857 --> 01:16:03,791
你想向他们展示最新的推文。好，

1496
01:16:03,860 --> 01:16:07,061
你实际上可以说你的应用程序来获取最新的推文

1497
01:16:07,129 --> 01:16:09,429
在后台，即使你的应用程序没有运行。和

1498
01:16:09,498 --> 01:16:11,999
会发生什么，它会启动，但它不会来

1499
01:16:12,067 --> 01:16:14,101
屏幕，你将处于该背景状态

1500
01:16:14,170 --> 01:16:15,335
一点点时间，

1501
01:16:15,404 --> 01:16:17,805
你可以在那里提出几个网络请求

1502
01:16:17,874 --> 01:16:20,808
你的30秒或其他。然后你回去睡觉。

1503
01:16:20,877 --> 01:16:23,477
所以，你可以用AppDelegate来做到这一点。它也管理

1504
01:16:23,545 --> 01:16:26,280
数据保护。我不知道你是否知道这一点，但是，

1505
01:16:26,349 --> 01:16:29,382
当你的设备被锁定在锁定屏幕上时，应用程序不能

1506
01:16:29,451 --> 01:16:33,020
看数据。它是加密的。它是完全加密的，所以你，

1507
01:16:33,089 --> 01:16:35,422
如果他们想要，应用程序无法做任何事情。

1508
01:16:35,490 --> 01:16:38,525
所以，AppDelegate会告诉你发生了什么

1509
01:16:38,594 --> 01:16:42,496
当你可以访问这些文件时，就是这样的。还有

1510
01:16:42,565 --> 01:16:46,100
一个UIApplication，AppDelegate委托它。

1511
01:16:46,168 --> 01:16:48,035
我们从来没有分类UIApplication，

1512
01:16:48,103 --> 01:16:51,338
我们使用AppDelegate来配置它的功能。

1513
01:16:51,407 --> 01:16:53,774
但是，UIApplication确实有一些有趣的事情。

1514
01:16:53,843 --> 01:16:58,479
就像，它有一个方法，所以你可以在另一个应用程序中打开一个URL。

1515
01:16:58,548 --> 01:17:01,948
所以，你的图片库，也许你要求打开

1516
01:17:02,017 --> 01:17:05,119
一个表情符艺术文件。您可以使用该打开的URL进行询问。

1517
01:17:05,187 --> 01:17:07,621
这里是您注册推送通知的地方。

1518
01:17:07,690 --> 01:17:09,489
所以，如果你需要的话，这是你必须做的事情

1519
01:17:09,558 --> 01:17:11,625
云套件的事情来通知你。你必须注册

1520
01:17:11,694 --> 01:17:14,595
在那里推送通知。您可以设置获取间隔

1521
01:17:14,664 --> 01:17:16,630
我提到的背景提取。

1522
01:17:16,699 --> 01:17:18,899
如果你在这里，这是你要求更多时间的地方

1523
01:17:18,968 --> 01:17:20,968
背景模式，你需要一点点

1524
01:17:21,037 --> 01:17:24,271
更多时间完成。这在UI应用程序中发生。

1525
01:17:24,340 --> 01:17:27,974
你的设备左上角的小旋转器说

1526
01:17:28,043 --> 01:17:31,812
有网络活动，这是由此控制的

1527
01:17:31,881 --> 01:17:33,947
布尔。不幸的是它是一个布尔。

1528
01:17:34,016 --> 01:17:36,417
所以如果你有多个线程作为网络，

1529
01:17:36,485 --> 01:17:38,886
他们必须分享这个布尔，这有点烦人，

1530
01:17:38,954 --> 01:17:41,521
但。你也可以找出关于事物，

1531
01:17:41,590 --> 01:17:44,291
比如我有多少时间需要在后台运行？

1532
01:17:44,360 --> 01:17:46,994
你知道什么是首选的内容大小类别，

1533
01:17:47,062 --> 01:17:49,496
字体大小的滑块？我在什么状态？

1534
01:17:49,565 --> 01:17:50,564
我在前台，

1535
01:17:50,633 --> 01:17:51,899
背景，我在哪里？

1536
01:17:51,968 --> 01:17:55,602
你可以用UIApplication找到所有这些东西。所有

1537
01:17:55,671 --> 01:17:58,606
正确，快速Info.plist，我们已经在您的Info.plist中看到了

1538
01:17:58,674 --> 01:18:01,976
家庭作业。您使用它来添加应用程序传输安全性，

1539
01:18:02,044 --> 01:18:06,446
对？你可以直接用XML编辑，

1540
01:18:06,515 --> 01:18:09,150
你只需右键点击它并切换到源XML，

1541
01:18:09,218 --> 01:18:12,485
你可以做到这一点。

1542
01:18:12,554 --> 01:18:15,122
将会从某个做某事的人那里得到一小段XML，

1543
01:18:15,190 --> 01:18:17,624
在plist中启用某些东西，然后粘贴它

1544
01:18:17,693 --> 01:18:20,727
这里。但通常我们甚至不编辑plist的东西

1545
01:18:20,796 --> 01:18:23,630
直接像我们使用App Transport Security一样。

1546
01:18:23,699 --> 01:18:25,399
我们在项目设置中编辑它，

1547
01:18:25,468 --> 01:18:27,634
就像我们对文档类型所做的那样，对吧？

1548
01:18:27,703 --> 01:18:29,936
表情符号艺术视图的文档类型，以及

1549
01:18:30,005 --> 01:18:33,941
你的图片库。我们在项目设置中编辑了所有内容。

1550
01:18:34,010 --> 01:18:37,912
项目设置主要是编辑Info.plist

1551
01:18:37,980 --> 01:18:40,881
间接的影响。最后，我们有能力。

1552
01:18:40,950 --> 01:18:42,516
我们通过Cloud Kit讨论了这个问题。

1553
01:18:42,585 --> 01:18:45,219
有一些事情，那就是使用它们

1554
01:18:45,288 --> 01:18:48,889
必须打开它们。这个功能选项卡里面

1555
01:18:48,958 --> 01:18:51,725
你的项目设置是这样的。

1556
01:18:51,794 --> 01:18:55,462
其中一些需要服务器，如Apple Pay，

1557
01:18:55,531 --> 01:18:59,934
和iCloud以及Game Center。有些人不喜欢地图和

1558
01:19:00,002 --> 01:19:04,071
内部应用音频，家庭套件，这些都没有。

1559
01:19:04,140 --> 01:19:07,074
那些需要服务器的东西，你只能转

1560
01:19:07,143 --> 01:19:10,544
如果您是Apple开发人员计划的成员，请访问这些链接。

1561
01:19:10,612 --> 01:19:13,613
每年花费99美元。你可以看看为什么会这样，

1562
01:19:13,682 --> 01:19:16,383
因为要访问这些服务器技术，他们是有点儿

1563
01:19:16,452 --> 01:19:18,718
需要成为那个了解你的服务器的东西，

1564
01:19:18,787 --> 01:19:20,387
和这提供的东西。好，

1565
01:19:20,456 --> 01:19:23,723
有人有，他们必须知道你是真实的。

1566
01:19:23,792 --> 01:19:26,193
你不能只是一些随机的Apple ID。

1567
01:19:26,262 --> 01:19:27,794
你想在程序中注册。

1568
01:19:27,863 --> 01:19:31,999
99美元在我看来主要是管理费。

1569
01:19:32,068 --> 01:19:34,769
这对于功能的数量并不是很多钱

1570
01:19:34,837 --> 01:19:36,570
你得到所有这些服务器，

1571
01:19:36,639 --> 01:19:39,139
推送通知，所有这些东西。全都覆盖了

1572
01:19:39,208 --> 01:19:43,476
每年99美元的费用。我没有时间来涵盖所有这些，

1573
01:19:43,545 --> 01:19:45,612
但这是一个很好的去看看有趣的地方，

1574
01:19:45,681 --> 01:19:48,749
没有讲授的事情要做。去看看这个

1575
01:19:48,818 --> 01:19:51,018
列表，看看你是否能在那里找到有趣的事情。

1576
01:19:51,087 --> 01:19:54,288
好的，就是这样。在星期三，

1577
01:19:54,356 --> 01:19:57,191
我们要谈论超重要的话题，而我，这个

1578
01:19:57,259 --> 01:19:59,960
这是我在发布之前所报道的最后一个话题

1579
01:20:00,029 --> 01:20:02,730
你本周最后的项目，这是赛段。

1580
01:20:02,798 --> 01:20:05,833
我们知道表演赛段，并显示细节赛段，对吗？

1581
01:20:05,901 --> 01:20:08,068
导航控制器和分割视图控制器。

1582
01:20:08,136 --> 01:20:09,937
我们也知道一些模态赛段。

1583
01:20:10,005 --> 01:20:12,439
我们模特地摆上了我们的表情艺术文件。但

1584
01:20:12,508 --> 01:20:15,342
我们会学习流行于segue的，不仅仅是为了

1585
01:20:15,411 --> 01:20:17,877
alert，但一般会弹出segue的。也，

1586
01:20:17,946 --> 01:20:20,714
解开赛格的，并嵌入赛格的，两种下

1587
01:20:20,783 --> 01:20:23,517
赞赏赛格的，你可以做的很酷。

1588
01:20:23,585 --> 01:20:26,053
我们将学习所有关于这一点的知识，并且我将演示它

1589
01:20:26,122 --> 01:20:29,356
所有星期三也是如此。下周是感恩节。

1590
01:20:29,425 --> 01:20:32,292
所以，你休息一周。这将是伟大的，而且

1591
01:20:32,361 --> 01:20:35,462
那么我们会在一周后回来。好吧，

1592
01:20:35,530 --> 01:20:38,198
星期三见。 >>为

1593
01:20:38,267 --> 01:20:47,674
更多，请访问我们的stanford.edu。

