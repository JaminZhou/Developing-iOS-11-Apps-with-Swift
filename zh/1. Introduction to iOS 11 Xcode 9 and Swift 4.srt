1
00:00:00,401 --> 00:00:04,202
[MUSIC]

2
00:00:04,271 --> 00:00:09,341
斯坦福大学。 >>好的，那么欢迎，

3
00:00:09,409 --> 00:00:13,545
到斯坦福CS193P。这是开发应用程序

4
00:00:13,614 --> 00:00:15,914
iOS。希望你是在正确的地方。

5
00:00:15,983 --> 00:00:20,319
这是2017年的秋季。而且我会轻松通过

6
00:00:20,387 --> 00:00:22,754
几张幻灯片。然后我会坐下来

7
00:00:22,823 --> 00:00:25,256
做一个很好的参与演示，只是为了告诉你是什么感觉

8
00:00:25,325 --> 00:00:27,960
为iOS开发应用程序。这是最好的学习方式，

9
00:00:28,029 --> 00:00:30,094
这是为了告诉你如何去做。所以

10
00:00:30,163 --> 00:00:32,231
这将是我要先简要谈论的内容。

11
00:00:32,299 --> 00:00:33,465
那么你在这门课上学什么？

12
00:00:33,534 --> 00:00:35,901
当然，你会学习如何建立很酷的应用程序。

13
00:00:35,970 --> 00:00:39,304
iOS应用程序很酷。他们为什么很酷？

14
00:00:39,372 --> 00:00:42,540
那么，他们很酷，因为他们住在你的口袋里，你

15
00:00:42,609 --> 00:00:45,777
可以在那里把他们展示给你的朋友，也令人难以置信

16
00:00:45,845 --> 00:00:48,813
易于销售和在线销售您的应用程序，因为你有

17
00:00:48,882 --> 00:00:52,017
App Store。还有一个非常有活力的社区

18
00:00:52,086 --> 00:00:54,953
因为苹果总是在做虚拟的新鲜事物

19
00:00:55,021 --> 00:00:57,622
现实和机器学习以及所有这些东西。

20
00:00:57,691 --> 00:01:00,725
而且应用商店中有数百万个应用，所以有

21
00:01:00,794 --> 00:01:03,428
很多人在做这个东西但是你也会

22
00:01:03,497 --> 00:01:05,263
在这个班学习一点现实生活

23
00:01:05,332 --> 00:01:06,965
面向对象编程

24
00:01:07,034 --> 00:01:10,134
你们都在上网络和数据库

25
00:01:10,203 --> 00:01:13,238
图形，你的其他CS课。在这里，我们会

26
00:01:13,306 --> 00:01:15,807
在现实生活的平台上做所有这些事情。

27
00:01:15,876 --> 00:01:19,177
因为过去几周我们要做所有这些事情

28
00:01:19,246 --> 00:01:22,480
计算机科学的东西是真的。特别是

29
00:01:22,549 --> 00:01:25,684
面向对象编程，因为iOS是完全和

30
00:01:25,753 --> 00:01:29,053
完全面向对象。你不能开发

31
00:01:29,122 --> 00:01:32,357
iOS不是严肃的面向对象编程。

32
00:01:32,426 --> 00:01:34,960
这使我成为这门课的先决条件，

33
00:01:35,029 --> 00:01:37,496
这是面向对象编程。你必须的

34
00:01:37,564 --> 00:01:39,631
适合面向对象编程。

35
00:01:39,699 --> 00:01:42,835
肯定CS106 A和B，希望CS108，

36
00:01:42,903 --> 00:01:45,704
这是面向对象的编程

37
00:01:45,773 --> 00:01:48,573
斯坦福大学。另一件事你要舒服

38
00:01:48,641 --> 00:01:51,343
正在写很多代码。所有你在这个功课

39
00:01:51,412 --> 00:01:53,912
上课前几周有一点点阅读

40
00:01:53,981 --> 00:01:56,047
关于我们将要发展的语言。

41
00:01:56,116 --> 00:01:58,082
但主要是编程，编程和

42
00:01:58,151 --> 00:02:01,320
更多的编程。所以如果你不舒服写很多

43
00:02:01,388 --> 00:02:04,289
代码在这门课程里，你可能要等到

44
00:02:04,358 --> 00:02:07,059
你已经采取了其他一些要求你的课程

45
00:02:07,127 --> 00:02:09,962
在你潜入这里之前写很多代码。

46
00:02:10,030 --> 00:02:13,164
那么iOS中有什么？我该怎么教你？

47
00:02:13,233 --> 00:02:15,533
我把它分成四层。

48
00:02:15,602 --> 00:02:18,003
底层靠近硬件，而且

49
00:02:18,071 --> 00:02:21,840
顶层靠近用户。所以在最底层，

50
00:02:21,909 --> 00:02:25,710
你可能会惊讶地发现iOS是Unix。

51
00:02:25,779 --> 00:02:29,614
这是Unix的BSD变种。所有的东西

52
00:02:29,683 --> 00:02:34,453
基本上这是发生在C里的事情。

53
00:02:34,521 --> 00:02:38,156
Unix主要是用C编写的，其中大部分是C

54
00:02:38,225 --> 00:02:41,460
我不会在这一层教你任何东西。

55
00:02:41,528 --> 00:02:42,760
这是一个面向对象的课程，

56
00:02:42,829 --> 00:02:44,396
我们所做的一切都将是面向对象的。

57
00:02:44,465 --> 00:02:47,432
你不会看到我在那里教你什么，

58
00:02:47,501 --> 00:02:49,234
下一层称为核心服务层。

59
00:02:49,235 --> 00:02:50,968
好吧？

60
00:02:51,037 --> 00:02:54,939
这是一个面向对象的层，位于较低层

61
00:02:55,008 --> 00:02:59,377
服务。这我会教你。所以，如果我们想要

62
00:02:59,446 --> 00:03:02,547
做一些事情，如发现手机在这个星球上或者在哪里

63
00:03:02,616 --> 00:03:05,817
找出其方向或访问文件中的一些文件

64
00:03:05,886 --> 00:03:09,320
系统，我们将在这里使用这一层，我会的

65
00:03:09,389 --> 00:03:13,191
在教你这一层。核心服务层。

66
00:03:13,259 --> 00:03:17,428
下一层，这是一种不严格的分层，

67
00:03:17,497 --> 00:03:20,665
但是媒体层。别忘了你的iPhone

68
00:03:20,733 --> 00:03:24,369
本质上来说，它本来就是一部带有手机的iPod。所以

69
00:03:24,438 --> 00:03:27,739
它有各种媒体，视频，音频，

70
00:03:27,807 --> 00:03:31,543
许多不同的种类，图像，所有这些东西。和

71
00:03:31,611 --> 00:03:34,446
不幸的是，这是我很想教你的一层

72
00:03:34,515 --> 00:03:37,482
我不得不削减一些东西，所以我不会谈论太多

73
00:03:37,550 --> 00:03:40,718
这一层，不幸的。所以我知道你们中的一些人可能是

74
00:03:40,787 --> 00:03:43,354
想用TIE写一个3D音效的酷游戏

75
00:03:43,423 --> 00:03:46,224
战士从你的后面扯到前面。

76
00:03:46,292 --> 00:03:49,060
而这一切都是可能的，而且很简单，

77
00:03:49,128 --> 00:03:51,629
但在十个星期之内，我必须选择我要教你的东西，

78
00:03:51,698 --> 00:03:54,832
所以我会专注于核心服务。然后这层，

79
00:03:54,901 --> 00:03:58,803
这是Cocoa Touch。所以Cocoa Touch是iOS的UI层。

80
00:03:58,872 --> 00:04:00,305
这是按钮和

81
00:04:00,374 --> 00:04:02,507
滑块，所有这些东西都在

82
00:04:02,576 --> 00:04:05,943
这里也有非常强大的对象，比如Map Kit

83
00:04:06,012 --> 00:04:08,679
有一个对象，你可以放在你的应用程序

84
00:04:08,748 --> 00:04:11,583
这给了你几乎所有的功能

85
00:04:11,652 --> 00:04:15,053
地图的应用程序内的矩形，在你的窗口内。

86
00:04:15,121 --> 00:04:18,256
所以，你在这里讨论各种UI的东西

87
00:04:18,324 --> 00:04:21,660
我会尽我所能地尽可能多地覆盖它。所以

88
00:04:21,728 --> 00:04:23,929
这就是你要在这堂课中学到的东西。

89
00:04:23,997 --> 00:04:26,965
我们要开发的平台是Xcode 9，所以

90
00:04:27,034 --> 00:04:29,568
你们都需要下载Xcode 9，

91
00:04:29,637 --> 00:04:32,471
它是免费的，它只能在你的Mac上运行。

92
00:04:32,539 --> 00:04:35,140
而且，还有另一个小应用程序Instruments，但它是

93
00:04:35,208 --> 00:04:37,776
真的只是Xcode 9的一个附加组件。我们会做的

94
00:04:37,844 --> 00:04:41,212
在Xcode 9中的一切，源代码，编辑，调试，

95
00:04:41,281 --> 00:04:44,515
所有这些东西都会在Xcode 9中发生。你也是

96
00:04:44,584 --> 00:04:47,986
必须学习一门新的语言。 iOS有两种语言可以

97
00:04:48,054 --> 00:04:50,154
开发Objective-C和Swift。

98
00:04:50,223 --> 00:04:53,291
Swift是最新的，这是我要教你的。

99
00:04:53,360 --> 00:04:56,327
所有你在Swift学到的东西，关于iOS，

100
00:04:56,396 --> 00:04:59,264
将适用，如果你以后想学习Objective-C和

101
00:04:59,332 --> 00:05:02,367
为仍在使用Objective-C编写的公司工作，

102
00:05:02,436 --> 00:05:05,036
这是完全合法的语言写入

103
00:05:05,105 --> 00:05:06,838
但Swift是一种很酷的新语言，

104
00:05:06,906 --> 00:05:09,107
我想你真的，真的会喜欢它。

105
00:05:09,176 --> 00:05:12,310
如果你是一个严肃的计算机科学家，另一种语言是

106
00:05:12,378 --> 00:05:15,513
像大哈欠什么。只要告诉我语法是什么，

107
00:05:15,582 --> 00:05:18,316
告诉我他们关键的基本机制是什么

108
00:05:18,385 --> 00:05:21,319
用它来设计，我会学到它的。

109
00:05:21,388 --> 00:05:24,221
所以，如果你对语言没有这种态度，

110
00:05:24,290 --> 00:05:27,158
你会在现实世界中遇到麻烦

111
00:05:27,227 --> 00:05:29,161
作为程序员。当然，

112
00:05:29,229 --> 00:05:31,596
在iOS中有数以百万计的我们称之为框架（Frameworks）。

113
00:05:31,664 --> 00:05:33,331
框架只是对象的集合。

114
00:05:33,399 --> 00:05:36,234
就像UIKit中最大的一个，那就是按钮和

115
00:05:36,303 --> 00:05:38,769
滑块，和所有的东西是。Foundation是另一个

116
00:05:38,838 --> 00:05:41,640
大的一个。这就是我所处的很多核心服务的地方

117
00:05:41,708 --> 00:05:44,141
讲的是。但是Map Kit，Core Motion，

118
00:05:44,210 --> 00:05:46,478
核心数据，面向对象，数据库，各种各样的。

119
00:05:46,547 --> 00:05:49,513
我会尝试尽可能多地尝试。和

120
00:05:49,582 --> 00:05:53,652
最后但绝对不是不重要的，有一个设计策略

121
00:05:53,721 --> 00:05:56,754
构建您必须使用的iOS应用程序。

122
00:05:56,823 --> 00:05:59,290
这不像一个可选的，这是一个好主意，为什么不

123
00:05:59,359 --> 00:06:03,395
你这样设计？你必须这样设计。这叫

124
00:06:03,463 --> 00:06:06,331
MVC，模型视图控制器。有多少人，

125
00:06:06,399 --> 00:06:09,634
一些在其他方面做MVC的经验？好的，事实并非如此

126
00:06:09,703 --> 00:06:12,303
很多这个季度。通常我会得到一半的人，但是

127
00:06:12,372 --> 00:06:14,439
我将教导有关MVC的所有内容。

128
00:06:14,507 --> 00:06:17,342
电子星期三的开始将是一个完整的

129
00:06:17,411 --> 00:06:21,345
MVC覆盖。它是什么，它是如何工作的，所有的东西，

130
00:06:21,414 --> 00:06:25,584
好吧？所以现在，我要直接进入一个大的演示

131
00:06:25,652 --> 00:06:29,921
这是学习如何做iOS开发的最好方法

132
00:06:29,990 --> 00:06:32,557
与演示。看到它发生，我们要建立

133
00:06:32,625 --> 00:06:34,926
从头开始申请。这张幻灯片在这里，

134
00:06:34,995 --> 00:06:36,628
是一个幻灯片给你看，以后

135
00:06:36,696 --> 00:06:39,197
看，我学了所有这些东西，因为我应该有

136
00:06:39,266 --> 00:06:43,468
了解他们今天。这不是现在阅读的幻灯片。

137
00:06:43,536 --> 00:06:45,503
由于我不会回到幻灯片，

138
00:06:45,572 --> 00:06:48,139
让我只是说真正快速发生的事情。你准备

139
00:06:48,208 --> 00:06:50,008
今天有一个阅读任务。

140
00:06:50,077 --> 00:06:53,044
基本上开始阅读手册

141
00:06:53,113 --> 00:06:55,780
迅速。所以你可以学习这种新的语言。这将是所有

142
00:06:55,849 --> 00:06:58,950
超过三个，也许四个星期，所以你没有

143
00:06:59,019 --> 00:07:00,918
太多读一次。 >>但是

144
00:07:00,987 --> 00:07:03,588
那些阅读作业将是除了

145
00:07:03,657 --> 00:07:06,224
编程作业。阅读任务正在进行

146
00:07:06,293 --> 00:07:07,792
周一外出，周一又回来，

147
00:07:07,861 --> 00:07:08,993
他们将在下个星期一到期。和

148
00:07:09,062 --> 00:07:11,029
那么周三的节目任务就会结束

149
00:07:11,098 --> 00:07:12,997
那么他们一般会在下周三到期。

150
00:07:13,066 --> 00:07:15,599
好的，至少我们会从这个季度开始。

151
00:07:15,668 --> 00:07:17,636
星期五，我们有一个可选的部分，

152
00:07:17,704 --> 00:07:20,138
这意味着可选的，你不必去那里。

153
00:07:20,206 --> 00:07:22,841
我们将要讨论的主题是一些额外的，但是

154
00:07:22,910 --> 00:07:24,943
这个星期五是一个大的，它的提示和

155
00:07:25,011 --> 00:07:27,412
Xcode的技巧，包括如何使用调试器。

156
00:07:27,481 --> 00:07:29,747
所以如果你从来没有在Xcode中使用过调试器，

157
00:07:29,816 --> 00:07:31,115
这是一个很好的去，所以

158
00:07:31,184 --> 00:07:33,685
你可以看到如何使用调试器来解决你的问题。

159
00:07:33,754 --> 00:07:36,220
如果没有，你知道，这是一个调试器，如果你使用其他

160
00:07:36,289 --> 00:07:39,356
调试器，你可能可以想出来，但无论如何，它

161
00:07:39,425 --> 00:07:42,427
在那里说，这是在Hewlett 205，但我不认为

162
00:07:42,495 --> 00:07:44,962
有这样的房间我想这可能是在Hewlett 105。

163
00:07:45,031 --> 00:07:47,532
我不知道，看广场，我们会告诉你它在哪里。

164
00:07:47,601 --> 00:07:51,869
但是会在11:30到12:20之间。所以下周我们会的

165
00:07:51,938 --> 00:07:55,473
更多地谈论Swift，然后发布到所有的iOS，

166
00:07:55,541 --> 00:07:59,243
好吧？所以让我们直接跳到这里的演示。

167
00:07:59,312 --> 00:08:02,447
而且我很抱歉在这个演示中快速上演，

168
00:08:02,516 --> 00:08:03,848
因为我们有很多东西需要覆盖

169
00:08:03,916 --> 00:08:05,650
你会发现，在这个过程中，一般来说，

170
00:08:05,719 --> 00:08:08,153
我倾向于很快，因为我想教你很多

171
00:08:08,222 --> 00:08:13,057
这东西，我可能可以。好吧，

172
00:08:13,126 --> 00:08:16,728
Xcode中。这里是Xcode。我去了Mac App Store。

173
00:08:16,797 --> 00:08:19,030
我搜索Xcode，我发现它。我下载了它。

174
00:08:19,099 --> 00:08:21,866
它是免费的，它不花我一毛钱开发

175
00:08:21,935 --> 00:08:24,602
iOS版。当你第一次启动Xcode时，

176
00:08:24,671 --> 00:08:26,637
你会在这里得到这个东西。所以

177
00:08:26,706 --> 00:08:29,340
我们需要建立一个应用程序。现在，我决定告诉你的应用程序

178
00:08:29,408 --> 00:08:32,844
我要在现实生活中建造所以你看到这些

179
00:08:32,912 --> 00:08:36,681
我在这里非常巧妙地贴上卡片？这些卡

180
00:08:36,750 --> 00:08:39,584
打算让我玩一个名为Concentration的游戏。

181
00:08:39,653 --> 00:08:42,654
有多少人听说过游戏集中？Concentration

182
00:08:42,722 --> 00:08:45,389
不是很多。好吧，Concentration只是一纸牌牌

183
00:08:45,458 --> 00:08:48,059
游戏而已。在这些卡都面朝下的背后，

184
00:08:48,127 --> 00:08:50,395
有一些图片，目标是

185
00:08:50,463 --> 00:08:53,464
你匹配的图片了。所以有12张牌

186
00:08:53,533 --> 00:08:56,834
6对图片，所以我一次拿两张牌，

187
00:08:56,903 --> 00:08:58,602
如果他们匹配，我赢了，而且

188
00:08:58,671 --> 00:09:01,138
卡片消失。如果他们不匹配，

189
00:09:01,207 --> 00:09:04,008
我必须把他们放倒，然后再选两张牌

190
00:09:04,077 --> 00:09:06,778
这就是所谓的浓度因为我必须集中精力

191
00:09:06,847 --> 00:09:09,681
那些不匹配的，以后我可以回去了

192
00:09:09,750 --> 00:09:11,783
匹配他们。所以，让我们在这里翻一些卡。

193
00:09:11,852 --> 00:09:13,984
我要从这里开始。

194
00:09:14,053 --> 00:09:15,687
我真的不知道那里有什么，但让我们看看。

195
00:09:15,756 --> 00:09:20,491
好的，这个是一对紫色的蝙蝠。

196
00:09:20,560 --> 00:09:22,460
所以现在我试图找到另一对紫色的蝙蝠，

197
00:09:22,529 --> 00:09:25,529
让我们在这里尝试。我马上找到了他们，好吧。

198
00:09:25,598 --> 00:09:27,699
所以这是一场比赛，我得到了一些观点。

199
00:09:27,767 --> 00:09:31,535
这些来自板上。所以现在我正在寻找

200
00:09:31,604 --> 00:09:35,240
更多的比赛。好的，让我们在这里试试这个。它的

201
00:09:35,308 --> 00:09:39,977
一个幽灵。我在那里得到了幽灵。我们来试试这个。

202
00:09:40,046 --> 00:09:43,748
不，不匹配。这看起来像罗夏的东西，但是

203
00:09:43,817 --> 00:09:46,184
这是一个女巫。原来这是她扫帚上的女巫，

204
00:09:46,253 --> 00:09:48,786
如果你可以看到那里。所以，我没有得到任何要点

205
00:09:48,855 --> 00:09:51,522
这个，我不得不把这些退下来，选择另外两个

206
00:09:51,591 --> 00:09:52,991
牌。好的，我会把这些打倒。

207
00:09:53,060 --> 00:09:54,659
希望你们正在集中精力

208
00:09:54,728 --> 00:09:57,729
你可以记住这些东西是什么。我要试试这个

209
00:09:57,798 --> 00:10:01,298
一。那是一只猫，那种可爱的猫，还有

210
00:10:01,367 --> 00:10:07,071
我们再来挑一个，那这个怎么样？一个南瓜！

211
00:10:07,140 --> 00:10:10,208
好吧，在某些方面，这是不好的，

212
00:10:10,276 --> 00:10:12,276
因为我们有另一个不匹配

213
00:10:12,345 --> 00:10:14,245
但是据推测它有点不错，

214
00:10:14,314 --> 00:10:18,049
如果我们集中精力，我们知道四张牌在哪里。所以

215
00:10:18,117 --> 00:10:21,619
把这些放回去。选两个新的，和

216
00:10:21,688 --> 00:10:25,323
我会选择我以前没见过的牌，

217
00:10:25,391 --> 00:10:28,726
因为我已经知道这些卡在哪里了。

218
00:10:28,794 --> 00:10:31,395
好，那不会倒下。

219
00:10:31,464 --> 00:10:35,466
好的，这个怎么样？这个是女巫，

220
00:10:35,535 --> 00:10:38,837
女巫！好吧，现在如果我正在集中精力，

221
00:10:38,905 --> 00:10:42,173
我记得女巫在哪里，现在在哪里呢？是吗，

222
00:10:42,241 --> 00:10:46,945
我想，是这个吗？是吗？女巫，是的，好吧！

223
00:10:47,013 --> 00:10:50,548
所以我们匹配这些，而这些从板上消掉和这个

224
00:10:50,617 --> 00:10:54,519
只是继续，显然你选择的东西越少，

225
00:10:54,587 --> 00:10:58,155
好的，你选择的次数越少，就像这里是一只猫。

226
00:10:58,224 --> 00:11:00,625
那只猫在哪？我认为这是在这里。

227
00:11:00,693 --> 00:11:04,328
不，这不是一只猫。现在这种不匹配

228
00:11:04,397 --> 00:11:06,431
我应该可能会得到一个很大的惩罚，

229
00:11:06,499 --> 00:11:09,133
因为我以前见过的猫，就在这里。

230
00:11:09,202 --> 00:11:10,701
所以我应该匹配它，而我没有，

231
00:11:10,770 --> 00:11:14,004
我没有专注。所以这是我们要玩的游戏

232
00:11:14,073 --> 00:11:18,943
建立一个应用程序来做。好，有道理？简单的游戏。

233
00:11:19,012 --> 00:11:23,981
好吧，回到Xcode就在这里。现在这个Xcode，

234
00:11:24,050 --> 00:11:26,384
在这里弹出的闪屏。

235
00:11:26,452 --> 00:11:29,553
它包含了你一直在处理的所有应用程序

236
00:11:29,622 --> 00:11:32,289
在这里，然后它可以让你创建一个新的应用程序

237
00:11:32,358 --> 00:11:34,692
在这里说它创建一个新的Xcode项目。所以，

238
00:11:34,761 --> 00:11:36,527
我们将创建一个新的Xcode项目。

239
00:11:36,596 --> 00:11:39,764
我只是点击那个按钮。当你创建一个项目时，

240
00:11:39,833 --> 00:11:42,867
它会问你想建立什么样的项目？

241
00:11:42,936 --> 00:11:45,970
我们想要构建一个iOS应用程序，在顶部看到这里。

242
00:11:46,039 --> 00:11:48,640
我们可以构建一个手表应用程序或Apple TV应用程序，

243
00:11:48,708 --> 00:11:50,675
但是我们正在构建一个iOS应用程序

244
00:11:50,743 --> 00:11:53,544
这是说你想要什么样的iOS应用程序？

245
00:11:53,612 --> 00:11:57,382
所以这里是一个游戏，增强现实。我们总是会

246
00:11:57,450 --> 00:12:00,218
在左上角挑选这一个，单个视图的应用程序，

247
00:12:00,286 --> 00:12:03,154
因为这是最简单的起始模板，我想要

248
00:12:03,223 --> 00:12:05,322
教你如何编写代码来完成所有这些

249
00:12:05,391 --> 00:12:08,459
其他的。我不想让你点击一个模板，然后

250
00:12:08,528 --> 00:12:11,328
它只是显示你的游戏基础设施，或者

251
00:12:11,397 --> 00:12:13,131
随你。我想告诉你如何做到这一点。

252
00:12:13,199 --> 00:12:15,733
所以我们总是会选择单一视图的应用程序。

253
00:12:15,802 --> 00:12:18,970
当我们选择我们想要的应用程序时，会问我们一些

254
00:12:19,039 --> 00:12:21,138
像什么你想调用这个应用程序的问题？

255
00:12:21,207 --> 00:12:24,676
那么这个游戏叫Concentration，所以我会去的

256
00:12:24,744 --> 00:12:27,878
说Concentration。下一个是Team团队。

257
00:12:27,947 --> 00:12:31,816
这是开发团队的工作。那是你。现在

258
00:12:31,885 --> 00:12:35,019
当它在上面会说增加团或创建团队

259
00:12:35,088 --> 00:12:38,723
那里。对我来说，它知道这是我，当你这样做的时候，

260
00:12:38,792 --> 00:12:42,026
所有你需要创建一个开发团队是

261
00:12:42,094 --> 00:12:44,195
一个苹果ID。你不必支付任何钱。

262
00:12:44,264 --> 00:12:46,797
任何Apple ID都可以，经过这个过程。

263
00:12:46,866 --> 00:12:49,634
你会创建一个开发团队。下一个，

264
00:12:49,702 --> 00:12:52,536
是这个组织名称。这可以是任何你想要的。

265
00:12:52,605 --> 00:12:55,239
它只是显示在您的Swift文件的版权，

266
00:12:55,308 --> 00:13:00,010
好吧？但是这个，这是非常重要的

267
00:13:00,079 --> 00:13:04,015
唯一标识你。所以一个真正简单的方法来

268
00:13:04,084 --> 00:13:06,450
那么如果你是斯坦福大学的学生呢

269
00:13:06,519 --> 00:13:09,487
edu.stanford.cs193p，你的SUNet ID。

270
00:13:09,555 --> 00:13:11,789
在那里，而不是演讲，把你的SUNET ID。

271
00:13:11,858 --> 00:13:14,759
这显然会识别你。如果你不是斯坦福大学的话

272
00:13:14,828 --> 00:13:17,594
学生，你必须自己解决，而且

273
00:13:17,663 --> 00:13:19,664
那么我告诉你的语言，这两种语言，

274
00:13:19,733 --> 00:13:22,100
我们将在Swift中完成我们所有的开发工作。您可以

275
00:13:22,168 --> 00:13:24,902
甚至在同一个应用程序中混合使用Swift和Objective-C。

276
00:13:24,971 --> 00:13:27,638
他们是非常互操作的。 Swift完全是用来设计的

277
00:13:27,707 --> 00:13:30,708
Objective-C，所以这不是问题。所以我们会永远

278
00:13:30,777 --> 00:13:33,010
在这里选择Swift，我们不会做任何这些

279
00:13:33,079 --> 00:13:34,812
东西在前两周下来，

280
00:13:34,881 --> 00:13:37,648
但是我们最终会得到它，面向对象的数据库和

281
00:13:37,717 --> 00:13:39,717
测试，我们最终会做这些事情。

282
00:13:39,786 --> 00:13:40,985
所以我要点击下一步。

283
00:13:41,054 --> 00:13:43,454
现在问我要在哪里存储你的项目？

284
00:13:43,523 --> 00:13:46,423
我强烈建议你把它放在你的主目录下，

285
00:13:46,492 --> 00:13:49,693
在名为Developer的文件夹中，这是一种规范

286
00:13:49,762 --> 00:13:51,728
人们把他们的项目的地方。

287
00:13:51,797 --> 00:13:55,033
你所有的项目都会收集在这里，好吧，集中注意力

288
00:13:55,101 --> 00:13:57,368
那么我们将在本季度晚些时候做的其他的。

289
00:13:58,304 --> 00:13:59,537
这个源代码管理，

290
00:13:59,605 --> 00:14:02,774
我们将在本季度晚些时候再谈谈，但是

291
00:14:02,842 --> 00:14:06,477
我们在第一周没有这样做。好的，在这里，

292
00:14:06,546 --> 00:14:10,381
你的第一个iOS应用程序现在我们在中间看到了什么

293
00:14:10,450 --> 00:14:13,150
Xcode，有多少人在Xcode中做了些什么

294
00:14:13,219 --> 00:14:15,787
之前？好吧，大约一半的人，所以这很常见。

295
00:14:15,855 --> 00:14:19,123
所以你知道在Xcode中，这个中间区域是你的主要区域

296
00:14:19,192 --> 00:14:22,026
编辑，对，我们现在看到，

297
00:14:22,095 --> 00:14:24,796
在这个主要的领域，是我们的项目设置。

298
00:14:24,864 --> 00:14:28,099
我们在之前的小事中回答了其中的一些

299
00:14:28,168 --> 00:14:31,235
出现的原因，以及它显示我们项目的原因

300
00:14:31,304 --> 00:14:34,238
设置是因为在这个蓝色区域的左边

301
00:14:34,307 --> 00:14:37,708
我们已经选择了这个项目，看看那个深蓝色的选择

302
00:14:37,777 --> 00:14:40,377
顶端。这是选定的项目，

303
00:14:40,446 --> 00:14:43,714
左边的整个蓝色区域被称为导航栏，

304
00:14:43,782 --> 00:14:47,117
导航栏让你浏览你的项目，

305
00:14:47,186 --> 00:14:50,321
并在这个特殊的标签显示我的文件

306
00:14:50,390 --> 00:14:52,689
我的项目。我在这里有六个文件，

307
00:14:52,758 --> 00:14:56,561
他们给了我选择那个模板，单个

308
00:14:56,629 --> 00:14:59,796
查看模板，但我现在也可以通过搜索导航，

309
00:14:59,865 --> 00:15:02,967
就在这儿。如果我正在调试，我可以导航通过我的断

310
00:15:03,035 --> 00:15:06,370
点等，所以你会真正熟悉使用这个

311
00:15:06,438 --> 00:15:07,772
蓝色的东西在这里，

312
00:15:07,841 --> 00:15:10,641
你可以说你想要多少空间

313
00:15:10,709 --> 00:15:12,911
浏览你的应用程序。

314
00:15:12,979 --> 00:15:15,379
现在在右边，在这里，

315
00:15:15,448 --> 00:15:18,215
你实际上可以看到有一个顶部和一个小区域

316
00:15:18,284 --> 00:15:22,153
一个底部。这被称为实用程序窗格，和

317
00:15:22,221 --> 00:15:25,155
我会在五分钟内向你们展示这一切。

318
00:15:25,224 --> 00:15:26,424
所以我现在要隐藏它。

319
00:15:26,492 --> 00:15:28,926
你在右上角看到这个按钮。

320
00:15:28,995 --> 00:15:33,197
那隐藏了，这个隐藏了导航栏。所以，如果你

321
00:15:33,266 --> 00:15:36,334
想给你的主窗口更多的空间，你可以做到这一点。

322
00:15:36,403 --> 00:15:38,469
这里还有另一个按钮，你看到一个按钮？

323
00:15:38,537 --> 00:15:41,405
这隐藏了您的调试器和控制台窗口。

324
00:15:41,474 --> 00:15:44,041
所以这就是你正在寻找的调试器

325
00:15:44,110 --> 00:15:46,644
想想，去你的调试器，这是控制台

326
00:15:46,712 --> 00:15:49,414
现在，控制台只是一个有功能的地方

327
00:15:49,482 --> 00:15:51,482
在Swift中，我们可以在那里打印文本。

328
00:15:51,550 --> 00:15:53,350
轻量级调试真的很棒。

329
00:15:53,419 --> 00:15:56,053
我们只是打印出正在发生的事情。在我的应用程序内

330
00:15:56,122 --> 00:15:57,021
这就是我今天要做的，

331
00:15:57,089 --> 00:15:58,989
今天我不打算给你看调试器，那是为了

332
00:15:59,058 --> 00:16:02,159
星期五。我只是要向你展示使用打印来调试和

333
00:16:02,228 --> 00:16:05,128
你也可以把这个上下移动到你想要的高度。所以，

334
00:16:05,197 --> 00:16:07,398
能够做到这一点非常好，可以组织你的空间。

335
00:16:07,467 --> 00:16:10,100
我在这里有一个相当低的分辨率屏幕。所以

336
00:16:10,169 --> 00:16:12,703
我将尽可能地把事情隐藏起来

337
00:16:12,771 --> 00:16:16,607
使文本真的很大，所以你可以看到我在做什么。

338
00:16:16,676 --> 00:16:19,777
好的，在我们潜入之前我想要展示的最后一件事

339
00:16:19,846 --> 00:16:22,980
在这里，这个地方是在这里，你看这个，这是你的方式

340
00:16:23,049 --> 00:16:27,318
运行你的应用程序好的，当你运行你的应用程序时，

341
00:16:27,387 --> 00:16:30,755
你必须决定在哪里运行它。你可以跑

342
00:16:30,823 --> 00:16:34,325
它在一个设备上，所以你可以连接到Mac设备。

343
00:16:34,393 --> 00:16:36,427
而且你可以实际上无线连接它

344
00:16:36,495 --> 00:16:39,696
用一点USB线或其他什么。而我没有

345
00:16:39,765 --> 00:16:43,100
迷上了，所以我不能那样做。但是我也可以运行

346
00:16:43,168 --> 00:16:47,405
这些模拟器。所以，这些模拟器模拟这些

347
00:16:47,473 --> 00:16:52,176
各种设备，如iPad或iPhone 8+或其他。和

348
00:16:52,245 --> 00:16:54,311
你可以在你想要的任何一个上运行你的应用程序

349
00:16:54,380 --> 00:16:56,547
其实模拟器会打开这两个，

350
00:16:56,616 --> 00:16:59,616
如果你愿意的话，可以把它们当作一次。所以我会

351
00:16:59,685 --> 00:17:02,820
在这里做最新最好的iPhone X.

352
00:17:02,889 --> 00:17:05,189
好的，我要在iPhone X和iPhone上运行我的应用程序

353
00:17:05,258 --> 00:17:07,791
让我们继续并运行它。我们没有做任何事情，所以

354
00:17:07,860 --> 00:17:09,660
这只是一个空白的应用程序，让我们只是运行它的乐趣。

355
00:17:09,729 --> 00:17:12,496
你在这里看到这个播放按钮？这就是你如何运行，所以

356
00:17:12,564 --> 00:17:15,499
我要点击那个播放按钮。现在正在编译我的

357
00:17:15,568 --> 00:17:18,169
应用程序，你可以看到在顶部，它正在建设

358
00:17:18,237 --> 00:17:21,371
二进制。它将其加载到设备上，或者

359
00:17:21,440 --> 00:17:24,742
在这种情况下，模拟器。它运行它。可以，然后呢

360
00:17:24,811 --> 00:17:27,011
这里是。它看起来像一个iPhone X和

361
00:17:27,080 --> 00:17:28,979
它正在运行我的应用程序，它是完全空白的。

362
00:17:29,048 --> 00:17:30,314
那么因为我没有做任何事情，

363
00:17:30,383 --> 00:17:34,218
我还没有建立任何用户界面。但是，如果我按主页按钮

364
00:17:34,287 --> 00:17:37,321
在iPhone X上，每个人都知道这是如何工作的？你滑了起来

365
00:17:37,389 --> 00:17:40,057
从底部。从底部向上滑动就像

366
00:17:40,126 --> 00:17:43,460
主页按钮，因为iPhone X中没有主页按钮。

367
00:17:43,529 --> 00:17:45,896
你可以看到我们的应用程序集中在那里。

368
00:17:45,965 --> 00:17:47,297
但所有其他应用程序也在那里。

369
00:17:47,366 --> 00:17:50,434
设置，对，你可以进入设置应用程序。和

370
00:17:50,503 --> 00:17:53,337
如果你想，你可能有你的应用程序需要设置一些

371
00:17:53,406 --> 00:17:57,107
设置像我不知道文字大小或类似的东西。

372
00:17:57,176 --> 00:17:59,643
所以这些模拟器是真正模拟的设备，他们是

373
00:17:59,712 --> 00:18:03,213
不只是运行你的应用程序。所以这有点酷。

374
00:18:03,282 --> 00:18:04,982
我们可以随时回到我们的应用程序。回到这里，

375
00:18:05,051 --> 00:18:09,187
叫Concentration，这里是Concentration。好吧，

376
00:18:09,255 --> 00:18:12,490
所以现在我们熟悉Xcode和类

377
00:18:12,558 --> 00:18:15,492
所有的作品在这里。我们来看看这些文件

378
00:18:15,561 --> 00:18:18,262
那是为我们创造的现在，有六个文件，但

379
00:18:18,331 --> 00:18:21,299
其实我们只会看看其中的两个。例如，

380
00:18:21,367 --> 00:18:24,268
这个，资产就在这里，那就是你的图片，

381
00:18:24,337 --> 00:18:27,037
包括你的应用程序图标，我们还没有设置，

382
00:18:27,106 --> 00:18:29,940
我真的不需要这个。你的启动屏幕在这里，我是

383
00:18:30,009 --> 00:18:33,043
选择这个。这个应用程序在这里委托，我们不

384
00:18:33,112 --> 00:18:35,679
需要点击任何这些来使我们的Concentration应用程序。所以

385
00:18:35,748 --> 00:18:38,282
我正在选择他们，我要右键点击它们，

386
00:18:38,350 --> 00:18:41,819
并从选择中下到新的组，并将其放入

387
00:18:41,888 --> 00:18:45,255
一个小组。我打算将这个组叫做“支持文件”（Supporting Files）

388
00:18:45,324 --> 00:18:46,457
因为这就是他们

389
00:18:46,525 --> 00:18:50,461
他们正在支持文件。顺便说一下，我不会

390
00:18:50,529 --> 00:18:53,330
把你的info.plist放在你的支持文件里，

391
00:18:53,399 --> 00:18:57,935
把它留在顶层。这似乎更好。所以

392
00:18:58,003 --> 00:19:00,904
这里的其他文件，ViewController.swift，

393
00:19:00,973 --> 00:19:03,741
只是一些Swift代码，我们将在一秒钟之内得到。和

394
00:19:03,809 --> 00:19:07,678
就在这里，Main.storyboard，这是你的用户界面。

395
00:19:07,747 --> 00:19:10,914
现在，您将以图形方式在Xcode中构建您的UI，

396
00:19:10,983 --> 00:19:13,517
好的，你不会编码它，你会去做的

397
00:19:13,586 --> 00:19:16,387
图形。不仅如此，你要建立它的方式，

398
00:19:16,455 --> 00:19:17,821
你会拖出按钮和

399
00:19:17,890 --> 00:19:20,257
文本字段和滑块以及类似的东西。

400
00:19:20,326 --> 00:19:22,726
而且它会真正把真正的按钮和

401
00:19:22,795 --> 00:19:26,129
真正的滑块一次在屏幕上生活。和

402
00:19:26,198 --> 00:19:28,399
你要编辑它们并按照你想要的方式设置它们。

403
00:19:28,468 --> 00:19:30,167
然后当你在你的应用程序上运行它们时，

404
00:19:30,235 --> 00:19:32,903
它的一种冻结干燥，把他们带过来

405
00:19:32,972 --> 00:19:36,306
加水，他们回来生活。然后他们跑。所以

406
00:19:36,375 --> 00:19:39,109
当你跑步的时候，并不像你在这里点击一个按钮

407
00:19:39,178 --> 00:19:41,679
它会产生大量的代码来将这些按钮放在那里。

408
00:19:41,748 --> 00:19:45,249
它实际上是在编辑这些按钮。现在，

409
00:19:45,317 --> 00:19:48,552
注意到我有这种iPhone形状的矩形。

410
00:19:48,621 --> 00:19:51,655
你们都可以看到吗？是的，它看起来不错。这个iPhone

411
00:19:51,724 --> 00:19:55,058
矩形是我要编辑我的用户界面的地方。而且，

412
00:19:55,127 --> 00:19:59,463
特别是这是一个iPhone 8大小的矩形，你看到了吗？

413
00:19:59,532 --> 00:20:03,300
它说在这里查看iPhone 8。我可以点击这个和

414
00:20:03,369 --> 00:20:07,271
实际上看看其他的iOS设备。所以我可以看看

415
00:20:07,340 --> 00:20:10,107
我的IU，看起来如何让我们在iPad上说。

416
00:20:10,176 --> 00:20:14,011
现在一个iPad是巨大的，所以也许我想缩小一点点

417
00:20:14,080 --> 00:20:18,315
看得更清楚我也可以在横向模式下看它。

418
00:20:18,384 --> 00:20:20,918
所以这里是一个iPad的肖像和风景，为

419
00:20:20,986 --> 00:20:23,454
例。我可以去一个不同的iPhone，

420
00:20:23,523 --> 00:20:28,025
像这里是我的iPhone X，好吗？所以我可以看看

421
00:20:28,094 --> 00:20:32,163
所有可能的iOS设备，看看我的用户界面的外观

422
00:20:32,231 --> 00:20:35,766
现在我们的目标最终，一旦我们学习了足够的iOS，

423
00:20:35,835 --> 00:20:39,737
即使它们处于风景中，也要构建看起来很好的用户界面

424
00:20:39,806 --> 00:20:44,108
或人像，iPad，iPhone 8，iPhone 8+，这是大的，

425
00:20:44,176 --> 00:20:47,411
iPhone X，没关系。好的，这是我们的目标。

426
00:20:47,479 --> 00:20:51,148
现在在第一个星期，我不能教你任何这个，所以

427
00:20:51,217 --> 00:20:52,917
我们将有我们的用户界面

428
00:20:52,985 --> 00:20:55,252
尝试在iPhone X上看起来不错。

429
00:20:55,321 --> 00:20:57,154
但下个星期，不用担心，我们会尽力做到这一点

430
00:20:57,223 --> 00:20:59,490
它在其他iPhone上也很好看。和

431
00:20:59,558 --> 00:21:02,960
你的任务二是要真的要求你做出

432
00:21:03,028 --> 00:21:07,765
在所有可能的iOS设备上看起来不错的应用程序。

433
00:21:07,833 --> 00:21:10,234
现在在这里左边，当我们提出这个，

434
00:21:10,303 --> 00:21:13,704
Xcode中的这个区域被称为Interface Builder

435
00:21:13,773 --> 00:21:15,406
因为我们正在构建我们的用户界面

436
00:21:15,474 --> 00:21:19,176
所以Interface Builder。这个地区在这里基本上是

437
00:21:19,245 --> 00:21:20,911
所有的东西，但在这里

438
00:21:20,979 --> 00:21:23,413
以文本形式，如文本大纲。

439
00:21:23,482 --> 00:21:24,715
我会隐藏的，

440
00:21:24,784 --> 00:21:26,217
你在这里按下这个小按钮，

441
00:21:26,285 --> 00:21:27,718
看到它说隐藏文件大纲。

442
00:21:27,786 --> 00:21:31,054
我要点击它来隐藏。我们会去隐藏这个

443
00:21:31,123 --> 00:21:34,992
手机选择器以及我们在这里有我们的小UI。

444
00:21:35,061 --> 00:21:37,328
我们将在本季度晚些时候看一下这份文件。

445
00:21:40,066 --> 00:21:43,067
我想要构建自己的UI，如何构建UI？

446
00:21:43,135 --> 00:21:45,336
好的，我正在努力在这里建立Concentration。

447
00:21:45,404 --> 00:21:49,473
所以我需要一些卡片。我要去

448
00:21:49,541 --> 00:21:52,008
使用一个按钮来表示一个很酷的卡，

449
00:21:52,077 --> 00:21:53,310
因为你点击一个按钮和

450
00:21:53,378 --> 00:21:54,445
它做了一些事情。这很好，

451
00:21:54,513 --> 00:21:57,314
因为当你点击一个按钮，我希望它翻转。

452
00:21:57,383 --> 00:21:58,682
好吧，我要把我的卡翻转过来。所以

453
00:21:58,751 --> 00:22:01,252
这是你做的第一件事情。我们来制作一张卡片

454
00:22:01,320 --> 00:22:04,288
当我们点击它时，翻转过来。所以

455
00:22:04,356 --> 00:22:06,690
我要放大，顺便说一下，你可以按住Alt键。

456
00:22:06,758 --> 00:22:09,960
你在左下角看到我在这里显示的东西

457
00:22:10,029 --> 00:22:12,196
当我按下ALT，control和command时，

458
00:22:12,264 --> 00:22:14,097
和所有的东西。如果你按住ALT和

459
00:22:14,166 --> 00:22:17,100
使用鼠标滚轮，您可以放大和缩小，在您的

460
00:22:17,169 --> 00:22:19,936
用户界面，这是一种很酷。否则，你的鼠标滚轮

461
00:22:20,005 --> 00:22:22,539
它上下移动，这也是一个很酷。好吧

462
00:22:22,608 --> 00:22:26,677
我们有我们的用户界面，我们如何在这个用户界面中放置一个按钮？好的，

463
00:22:26,745 --> 00:22:30,480
作为承诺，我们去这个顶尖的东西

464
00:22:30,549 --> 00:22:31,849
一个底部，称为实用程序窗格。

465
00:22:31,917 --> 00:22:34,985
我们将在底部开始，并且

466
00:22:35,054 --> 00:22:39,189
具体来说，在这个对象库标签中。和

467
00:22:39,258 --> 00:22:42,125
我们将看到一大堆物体，请记住，

468
00:22:42,194 --> 00:22:44,161
我的意思是像面向对象意义上的对象，

469
00:22:44,229 --> 00:22:46,830
这都是面向对象的。而所有这些对象，

470
00:22:46,899 --> 00:22:50,634
像标签和按钮以及文本字段和开关，

471
00:22:50,703 --> 00:22:56,039
甚至Web视图和表格视图和文本视图，甚至ARKit。

472
00:22:56,108 --> 00:22:59,176
这是一个增强现实视图的小ARKit。

473
00:22:59,245 --> 00:23:01,111
这些东西都可以拖出来，

474
00:23:01,180 --> 00:23:03,947
多点触控手势，拖出来建立你的用户

475
00:23:04,016 --> 00:23:07,451
接口。好的，我要覆盖绝大多数

476
00:23:07,519 --> 00:23:09,586
在这个非常大的列表中的东西在这里。

477
00:23:09,655 --> 00:23:12,489
但是我们将从一个简单的开始

478
00:23:12,558 --> 00:23:13,990
顶部，这是按钮。所以

479
00:23:14,059 --> 00:23:16,260
我只想把一个按钮拖到我的用户界面中

480
00:23:16,329 --> 00:23:19,129
我只是把它拖进去，我用鼠标捡起来

481
00:23:19,198 --> 00:23:22,699
放在我的用户界面。现在，当我移动这个，

482
00:23:22,768 --> 00:23:25,202
看看这些蓝线，看看这些蓝线。

483
00:23:25,271 --> 00:23:28,505
他们试图帮助我把它完全放在中间，或者

484
00:23:28,574 --> 00:23:30,507
正好在底部边缘的中间，

485
00:23:30,576 --> 00:23:32,509
或者在右上角。

486
00:23:32,577 --> 00:23:36,046
这些蓝线对于构建一个UI将至关重要

487
00:23:36,115 --> 00:23:39,283
当你旋转或在一个更大的设备或任何工作。但

488
00:23:39,352 --> 00:23:40,751
我们现在要忽略蓝线

489
00:23:40,819 --> 00:23:42,719
因为我说我下周要教你

490
00:23:42,788 --> 00:23:45,722
好吧？所以这里是我的按钮，非常非常小。

491
00:23:45,791 --> 00:23:48,591
我希望它更大。那么，我可以抓住这些手柄

492
00:23:48,660 --> 00:23:51,962
在这里的边缘，并调整到任何我想要的大小。

493
00:23:52,031 --> 00:23:54,230
也许使它更多一点卡形或

494
00:23:54,299 --> 00:23:57,901
类似的东西。我也可以编辑文本

495
00:23:57,970 --> 00:23:59,836
在这里双击这个。

496
00:23:59,905 --> 00:24:01,972
也许我不想要Button，但是让我们来做卡片的背面，

497
00:24:02,041 --> 00:24:03,340
让我们看看卡的背面是什么样的。

498
00:24:03,409 --> 00:24:04,808
所以我只是要删除它，

499
00:24:04,877 --> 00:24:07,744
所以现在我的按钮上没有文字，好吧，

500
00:24:07,813 --> 00:24:10,647
这很好。如何设置背景颜色

501
00:24:10,716 --> 00:24:13,317
以橙色，这些卡橙色，我们的万圣节主题在这里，

502
00:24:13,386 --> 00:24:15,552
他们有橙色背景。我怎么做？

503
00:24:15,620 --> 00:24:20,090
那么，这是这个实用程序窗格的顶部。注意到

504
00:24:20,158 --> 00:24:23,660
当我选择一个按钮，我在这里得到这个UI

505
00:24:23,729 --> 00:24:26,930
具体到设置按钮的属性。和

506
00:24:26,999 --> 00:24:29,266
不仅如此，它是面向对象的。所以

507
00:24:29,334 --> 00:24:32,836
我在这里有按钮的东西，当我向下滚动，看，

508
00:24:32,905 --> 00:24:37,140
我得到一个控件的用户界面，因为按钮从控制继承。

509
00:24:37,209 --> 00:24:40,010
然后控件从视图继承。所以

510
00:24:40,079 --> 00:24:43,013
我得到的UI进入查看，因为一个按钮是一个视图，

511
00:24:43,082 --> 00:24:46,550
对？它在面向对象的意义上继承于视图。

512
00:24:46,619 --> 00:24:50,620
所以任何视图的背景都可以在这个UI中设置。

513
00:24:50,689 --> 00:24:53,190
它在View下面，它说Background。

514
00:24:53,258 --> 00:24:56,393
现在背景是清楚的，那一点线

515
00:24:56,462 --> 00:24:59,196
通过一件事情意味着明确。所以没有背景，所以

516
00:24:59,265 --> 00:25:03,300
它显示从后面的白色显示通过。但

517
00:25:03,368 --> 00:25:06,169
点击这里，我可以轻松地将其更改为橙色

518
00:25:06,238 --> 00:25:06,870
在这里下去你懂，

519
00:25:06,939 --> 00:25:09,239
这里有很多预设的颜色。

520
00:25:09,308 --> 00:25:12,609
我可以去其他的，按名称挑选，我可以选择橙色。

521
00:25:12,678 --> 00:25:15,211
我可以选一个橙色的蜡笔，

522
00:25:15,280 --> 00:25:17,881
色轮，不管。但是在这里，我想要橙色，所以

523
00:25:17,950 --> 00:25:18,816
我会按名称选择它。和

524
00:25:18,884 --> 00:25:21,518
现在我已经把我的卡的背景设置为橙色，所以

525
00:25:21,587 --> 00:25:24,254
那很好。这看起来非常像这个，

526
00:25:24,323 --> 00:25:27,657
到目前为止，我很高兴。而在我们的万圣节主题中，

527
00:25:27,726 --> 00:25:31,929
让它变得更加可怕，让我们在这里做背景

528
00:25:31,998 --> 00:25:35,365
是黑色的。所以我会改变这是黑色的。

529
00:25:35,434 --> 00:25:37,233
而我这样做的方式就是点击它

530
00:25:37,302 --> 00:25:39,870
现在这个右边没有说上面的按钮。

531
00:25:39,938 --> 00:25:42,972
它说视图，因为这个大空间只是一个空白的视图。

532
00:25:43,041 --> 00:25:45,575
这不是一个按钮视图或任何东西。这只是一个视图，

533
00:25:45,644 --> 00:25:48,111
但是也有同样的背景。所以

534
00:25:48,180 --> 00:25:50,647
我点击它，在这里我会从这个列表中选择它

535
00:25:50,716 --> 00:25:54,384
预定义的东西黑色，现在，我有一个很好的

536
00:25:54,452 --> 00:25:58,388
在黑UI的橙色。看起来很酷。那么现在呢？

537
00:25:58,456 --> 00:26:00,891
当卡面朝上？那么，当他们面对面，

538
00:26:00,960 --> 00:26:03,160
他们是白色的。然后他们有一个形象在他们身上。

539
00:26:03,228 --> 00:26:06,630
现在，我可以在这里或那里有猫或蜘蛛网

540
00:26:06,698 --> 00:26:09,733
无论是一些JPEG图像或东西。但

541
00:26:09,802 --> 00:26:12,969
我有一个非常酷的想法，让这个真的很容易，让我们来

542
00:26:13,038 --> 00:26:16,339
使其成为一个表情符号。因为如果我们只是在这里放一个表情符号

543
00:26:16,408 --> 00:26:18,909
那么我们有很多选择。这真的很简单

544
00:26:18,978 --> 00:26:21,177
我们不必去查找图像或类似的东西。

545
00:26:21,246 --> 00:26:22,278
所以这就是我们要做的。所以

546
00:26:22,347 --> 00:26:25,983
我会让这看起来像卡的前面。所以我

547
00:26:26,051 --> 00:26:28,786
要下到这里，把这个橙色变回白色，

548
00:26:28,854 --> 00:26:31,622
好吧，这个白色的颜色。我要穿上这里

549
00:26:31,690 --> 00:26:34,792
而不是空白，我要把一个表情符号。大多数Mac应用程序

550
00:26:34,860 --> 00:26:37,094
如果你去他们的编辑菜单，在它的底部，

551
00:26:37,163 --> 00:26:39,796
有这个表情符号我不知道如何，如何

552
00:26:39,865 --> 00:26:42,566
你们很多人都知道这一点。但是如果你去表情符号和符号，

553
00:26:42,635 --> 00:26:45,068
你在这里得到这个窗口，让你选择

554
00:26:45,137 --> 00:26:48,538
所有这些各种表情符号。所以我们在这里得到了一个万圣节主题

555
00:26:48,607 --> 00:26:52,275
让我们找一个鬼。是的，鬼先生，就在那里。

556
00:26:52,344 --> 00:26:54,778
好吧，这是一个好的，他甚至看起来像一个有趣的鬼。

557
00:26:54,846 --> 00:26:57,414
我们将在那里双击将他放在卡上

558
00:26:57,482 --> 00:27:00,884
他在那。他非常非常小我可以放大和

559
00:27:00,953 --> 00:27:04,021
看他们。但是，他的规模相比之下还是很小的

560
00:27:04,089 --> 00:27:07,257
iPhone X.如果我的用户这样做，他们会像，

561
00:27:07,325 --> 00:27:10,093
那是什么。这就像一个小小的污点。所以

562
00:27:10,162 --> 00:27:12,262
我们想要做得更大。所以呢，

563
00:27:12,331 --> 00:27:15,465
我要去顶端，这个实用程序窗格的上半部分。

564
00:27:15,534 --> 00:27:19,703
如果我在这里看，看，字体，系统字体15点。

565
00:27:19,771 --> 00:27:21,638
所以我会做的更大，

566
00:27:21,707 --> 00:27:23,540
让我们做50点。

567
00:27:23,609 --> 00:27:28,411
现在我们有一个很好的大鬼。真棒，

568
00:27:28,480 --> 00:27:33,149
我们已经得到了所有我们需要的设计来做我们的用户界面。

569
00:27:33,218 --> 00:27:35,952
让我们继续运行，看看这里发生了什么。

570
00:27:36,021 --> 00:27:38,688
看看这个黑色的背景和这个幽灵和

571
00:27:38,757 --> 00:27:41,624
所有这些东西都显示在我们的应用程序，当我们运行。

572
00:27:41,693 --> 00:27:44,595
当然，这将是，在这里。当我点击它时，

573
00:27:44,663 --> 00:27:46,730
你能看到它在那里闪烁吗？

574
00:27:46,798 --> 00:27:48,865
这就是说，这是给我一点反馈，是的，

575
00:27:48,934 --> 00:27:49,600
你谈到了这一点。

576
00:27:49,668 --> 00:27:52,469
这很好，但是什么也没有做，对吧？

577
00:27:52,538 --> 00:27:53,904
我们希望它做一些事情。

578
00:27:53,973 --> 00:27:59,810
主要是我们希望它翻转。那我们去做吧。

579
00:27:59,878 --> 00:28:03,146
我们如何做到这一点，所以在用户界面中的东西做了什么？

580
00:28:03,214 --> 00:28:05,782
那么，我们将钩住一些代码。特别，

581
00:28:05,851 --> 00:28:09,019
我们要把它连接到这个Swift代码。

582
00:28:09,088 --> 00:28:10,954
现在他们在这里给了我们这些东西，

583
00:28:11,022 --> 00:28:13,289
我要删除，以免分心你。

584
00:28:13,358 --> 00:28:16,059
但这是你第一次看Swift代码。

585
00:28:16,128 --> 00:28:18,361
让我们看看它真的很快，看看它做什么。import，

586
00:28:18,430 --> 00:28:21,564
这就像包含。这只是把所有的UIKit

587
00:28:21,633 --> 00:28:25,602
在我们的使用。 UIKit是iOS的框架，有按钮和

588
00:28:25,671 --> 00:28:28,171
滑块和所有的东西。

589
00:28:28,240 --> 00:28:31,674
有点我们正在谈论的顶级cocoa touch层

590
00:28:31,743 --> 00:28:35,445
所以这是一个类的声明，在一个面向对象的

591
00:28:35,514 --> 00:28:38,615
感觉，一个类。当然我们使用关键字class。

592
00:28:38,684 --> 00:28:41,351
这是类ViewController的名称。

593
00:28:41,420 --> 00:28:44,921
这不是一个很好的名字，它是非常通用的。大概

594
00:28:44,990 --> 00:28:47,790
这个想被称为ConcentrationViewController或者

595
00:28:47,859 --> 00:28:51,395
类似的东西。不要改变这个名字

596
00:28:51,464 --> 00:28:54,297
你的功课，好吗？改变的名字

597
00:28:54,366 --> 00:28:56,566
这需要更多的不仅仅是改变它

598
00:28:56,635 --> 00:28:59,136
在这里，因为它也出现在你的用户界面。

599
00:28:59,204 --> 00:29:02,072
所以你必须改变它在两个变化

600
00:29:02,141 --> 00:29:05,942
地方。这是它的父类。这是

601
00:29:06,011 --> 00:29:09,112
面向对象编程。我们有继承。

602
00:29:09,181 --> 00:29:11,715
它从UIViewController继承。

603
00:29:11,784 --> 00:29:15,085
UIViewController类在UIKit中。你可以告诉，因为它

604
00:29:15,154 --> 00:29:17,887
从UI开始。那个类呢，

605
00:29:17,956 --> 00:29:22,092
它知道这样控制UI的一切。

606
00:29:22,161 --> 00:29:25,161
这就是它所做的。所以通过我们的ViewController

607
00:29:25,230 --> 00:29:28,398
从它继承，它继承了所有的控制能力

608
00:29:28,467 --> 00:29:30,834
那个东西。所以我们所要做的就是把代码

609
00:29:30,902 --> 00:29:32,736
在这里做Concentration游戏，所以

610
00:29:32,804 --> 00:29:36,206
那很棒。然后在这个花括号内，我们会去的

611
00:29:36,275 --> 00:29:39,009
把我们所有的方法和实例变量。谁

612
00:29:39,077 --> 00:29:41,745
不知道这个词的方法或实例变量是什么

613
00:29:41,813 --> 00:29:44,814
手段？好的，大家好。而你应该因为

614
00:29:44,883 --> 00:29:47,050
这基本上是一个面向对象的编程，

615
00:29:47,118 --> 00:29:49,219
对？所以我们要把所有的实例变量和

616
00:29:49,287 --> 00:29:51,254
这些大括号内的方法。

617
00:29:51,323 --> 00:29:54,624
这就是我们要声明我们类的原因。那我们怎么样？

618
00:29:54,693 --> 00:29:57,660
要让这个按钮在这里做点什么？好，

619
00:29:57,729 --> 00:30:00,663
我们要做的是我们要在这里创建一个方法。

620
00:30:00,732 --> 00:30:01,531
我们会这样做的

621
00:30:01,600 --> 00:30:04,934
当你按下这个按钮时，它会调用这个方法，

622
00:30:05,003 --> 00:30:07,137
当然。我们该怎么做？

623
00:30:07,205 --> 00:30:11,241
要做到这一点，信不信由你，我们需要得到这个UI和

624
00:30:11,309 --> 00:30:15,012
这段代码同时在屏幕上。

625
00:30:15,080 --> 00:30:18,181
我们在这里用这个小按钮。

626
00:30:18,250 --> 00:30:19,716
这个小圈子就在这里，

627
00:30:19,784 --> 00:30:22,652
这被称为助理编辑。当我点击它时，

628
00:30:22,720 --> 00:30:25,822
他们在屏幕上，都在屏幕上，在同一个屏幕上

629
00:30:25,891 --> 00:30:29,859
时间。而我可以调整这个空间，但我想要的。

630
00:30:29,928 --> 00:30:31,194
也许我们现在要摆脱这个。

631
00:30:31,263 --> 00:30:36,099
好的，所以这里是我的UI和屏幕上的代码

632
00:30:36,168 --> 00:30:39,202
时间。现在，为什么我要在屏幕上同时显示它们呢？

633
00:30:39,271 --> 00:30:42,605
我需要把他们挂起来？因为我钩他们的方式

634
00:30:42,674 --> 00:30:47,376
我按住Ctrl键并从UI拖动一行

635
00:30:47,445 --> 00:30:50,280
我的代码。我知道这有点奇怪，但是

636
00:30:50,349 --> 00:30:54,017
这就是我们如何做到这一点。当我们放开那条拖线时，

637
00:30:54,085 --> 00:30:57,286
它说，你会在UI和

638
00:30:57,355 --> 00:30:59,856
代码码。没问题，你会喜欢什么样的连接？

639
00:30:59,925 --> 00:31:01,992
你可以做一个行动action，这是一种方法，或者

640
00:31:02,061 --> 00:31:03,493
这两个出口outlet的东西之一，

641
00:31:03,562 --> 00:31:06,029
我将在稍后的演讲中讨论这个问题。所以

642
00:31:06,098 --> 00:31:08,732
我们先从这个动作开始。一个Action连接

643
00:31:08,800 --> 00:31:11,401
意思是当按下这个按钮时，调用一个方法。

644
00:31:11,470 --> 00:31:13,336
我可以说这个方法的名字是什么。

645
00:31:13,404 --> 00:31:16,005
我会把它叫做touchCard，因为这就是发生了什么，

646
00:31:16,074 --> 00:31:19,142
有人在接触这张卡。而这个方法就是这样

647
00:31:19,211 --> 00:31:21,378
会为我创造，它可以有参数，

648
00:31:21,446 --> 00:31:23,947
它可能没有任何参数，没有。要么

649
00:31:24,016 --> 00:31:26,450
它可以有一个参数，这是发件人，

650
00:31:26,518 --> 00:31:29,219
换句话说，发送给我的这个按钮。

651
00:31:29,288 --> 00:31:30,620
我真的需要这个说法，

652
00:31:30,689 --> 00:31:32,789
因为当点击卡片被发送给我时，

653
00:31:32,858 --> 00:31:35,459
我需要翻转它。所以，我必须跟它谈，好吧，那么

654
00:31:35,527 --> 00:31:38,195
我想要这个说法。而且非常重要，

655
00:31:38,263 --> 00:31:41,131
现在注意，如果你现在正在打瞌睡，

656
00:31:41,200 --> 00:31:44,034
是我们没有。这是参数的类型。

657
00:31:44,102 --> 00:31:47,704
看到它说什么类型任何？我们希望这个类型是Button，

658
00:31:47,773 --> 00:31:50,807
好的？因为一个按钮正在向我们发送这个方法。

659
00:31:50,876 --> 00:31:52,709
现在我不知道为什么不默认按钮。

660
00:31:52,778 --> 00:31:55,245
我多年来一直在这样说。但

661
00:31:55,314 --> 00:31:58,181
它没有。如果你不从任何改变到按钮

662
00:31:58,250 --> 00:32:01,151
这个代码的其余部分是不会工作的。所以肯定，

663
00:32:01,220 --> 00:32:04,554
如果你不记得这一点，记住要改变

664
00:32:04,623 --> 00:32:07,724
那。好吧？所以我们在这里有这个按钮，我会

665
00:32:07,792 --> 00:32:10,393
打这些其他的东西。但是你知道，显然，

666
00:32:10,462 --> 00:32:12,028
我们将它发送到视图控制器。

667
00:32:12,097 --> 00:32:15,231
点击这个事件就意味着当你点击

668
00:32:15,300 --> 00:32:17,834
在按钮的范围内，发送这个消息。

669
00:32:17,902 --> 00:32:20,770
好的，我们来连线。我会打连接。

670
00:32:20,839 --> 00:32:21,805
这会给我一个方法。

671
00:32:21,874 --> 00:32:25,809
这是你第一次看到这里的Swift方法。

672
00:32:25,877 --> 00:32:28,911
让我们看看它的一部分。有趣的是，

673
00:32:28,980 --> 00:32:32,482
这不是Swift方法的一部分，好吧。这只是

674
00:32:32,550 --> 00:32:35,719
Xcode在这里放置一个特殊的指令。

675
00:32:35,787 --> 00:32:38,754
这导致它把这个小圆圈在这里

676
00:32:38,823 --> 00:32:42,759
行号是。你看到那里有多少行号幸运13

677
00:32:42,828 --> 00:32:47,030
是一个圆圈代替。如果我把鼠标放在那个圆上

678
00:32:47,098 --> 00:32:50,333
我不只是点击鼠标。如果我把鼠标放在那里

679
00:32:50,402 --> 00:32:55,272
它会告诉我哪个按钮发送这个消息，

680
00:32:55,340 --> 00:32:56,806
哪些人调用了这个方法。所以

681
00:32:56,875 --> 00:32:59,375
这就是所有的IBAction只是造成这个圈

682
00:32:59,444 --> 00:33:04,447
出现在这里。现在这是一个Swift方法的语法。

683
00:33:04,516 --> 00:33:05,682
所以让我们看看它的部分。

684
00:33:05,750 --> 00:33:08,318
Func。这只是一个关键词，说这是一个功能。

685
00:33:08,387 --> 00:33:11,121
一个方法只是一个类的功能。拥有是合法的

686
00:33:11,189 --> 00:33:14,023
在类之外的函数。他们是全局性的功能。

687
00:33:14,092 --> 00:33:16,960
我们几乎从来没有这样做，因为我们非常面向对象，

688
00:33:17,028 --> 00:33:20,030
但你可以做到这一点。这是方法的名称，

689
00:33:20,099 --> 00:33:23,199
点击卡。我在小弹出的时候选择了这个。

690
00:33:23,268 --> 00:33:26,469
这是所有参数的列表。好的，

691
00:33:26,538 --> 00:33:31,374
这个方法有一个参数。参数的类型来了

692
00:33:31,442 --> 00:33:35,578
最后用冒号，冒号类型，这是一个UIButton，

693
00:33:35,647 --> 00:33:37,981
明显，。我们说我们想要一个参数，

694
00:33:38,049 --> 00:33:41,050
发件人是UIButton，就是这样。

695
00:33:41,119 --> 00:33:46,456
这是这个参数的名字。

696
00:33:46,524 --> 00:33:49,725
名字复数。现在，关于Swift有两件事

697
00:33:49,794 --> 00:33:51,160
会和你现在很不一样

698
00:33:51,229 --> 00:33:57,267
用于其他语言。每一个参数都有一个名字

699
00:33:57,335 --> 00:34:01,771
当你调用这个方法的时候，你实际上包含了它好的？

700
00:34:01,840 --> 00:34:02,939
所以就像在Java中一样

701
00:34:03,008 --> 00:34:06,342
说touchguard左括号六个逗号你好

702
00:34:06,411 --> 00:34:08,178
逗号五。你永远不会在Swift中做到这一点。

703
00:34:08,246 --> 00:34:10,747
每个参数的前面都会有一个名字

704
00:34:10,816 --> 00:34:14,384
它。这样，如果你调用它，你正在阅读

705
00:34:14,452 --> 00:34:16,453
代码你不必记住第一个参数，

706
00:34:16,521 --> 00:34:18,888
那又是什么？因为他们每个人都被命名。和

707
00:34:18,957 --> 00:34:21,791
另一件事是它有两个名字。好的。

708
00:34:21,860 --> 00:34:24,227
这两个名字是外部的名字。

709
00:34:24,296 --> 00:34:27,196
这是调用者使用的名称和内部名称。那是

710
00:34:27,265 --> 00:34:30,333
我们将要使用的名称是实现。

711
00:34:30,402 --> 00:34:32,768
现在我要在这里写下我自己的方法

712
00:34:32,837 --> 00:34:35,571
我们会更多地谈论这个问题，但这就是发生了什么事情

713
00:34:35,640 --> 00:34:38,808
这里。现在，如果这个方法有一个返回值，那么你可以通过

714
00:34:38,877 --> 00:34:42,912
说箭头诠释让我们说，这将意味着这种方法

715
00:34:42,981 --> 00:34:47,416
返回一个Int。非常简单的语法。但

716
00:34:47,485 --> 00:34:49,519
这个方法不会返回一个Int，但你可以这样做

717
00:34:49,587 --> 00:34:53,756
它呢。好吧，让我们确保这是工作。

718
00:34:53,825 --> 00:34:56,926
我只是要使用打印功能，我正在谈论这个

719
00:34:56,995 --> 00:34:59,829
是一个叫print的全局函数。它只需要一个字符串

720
00:34:59,898 --> 00:35:05,067
并在控制台上打印。所以在这里，我会打印唉！一个鬼。

721
00:35:05,136 --> 00:35:07,504
好吧，我们要运行我们的应用程序和

722
00:35:07,572 --> 00:35:11,407
当我们按鬼时，看看这是否正在工作。所以

723
00:35:11,476 --> 00:35:14,311
顺便说一下，当我们要从控制台打印东西的时候，

724
00:35:14,379 --> 00:35:17,047
所以我们可能想把它从底部提起来

725
00:35:17,115 --> 00:35:20,750
我们可以看到我们的控制台，我们可以使我们的调试器更小。

726
00:35:20,818 --> 00:35:24,287
这是我们的控制台提出来的。其实很酷

727
00:35:24,355 --> 00:35:26,523
你可以做的事情，我会告诉你一个Xcode的提示。

728
00:35:26,591 --> 00:35:31,194
如果你到这里来Xcode，行为和编辑行为。

729
00:35:31,262 --> 00:35:33,863
你走下来，你可以拥有它

730
00:35:33,932 --> 00:35:36,299
Xcode做的事情，打开窗户，

731
00:35:36,368 --> 00:35:39,335
在发生某些事情时做其他事情。例如，

732
00:35:39,403 --> 00:35:40,670
如果你正在运行和

733
00:35:40,739 --> 00:35:44,341
它会在控制台上产生一些输出，你可以说

734
00:35:44,409 --> 00:35:47,610
显示调试器。好吧，它会自动带来

735
00:35:47,679 --> 00:35:49,011
如果不在那里，那么从底部开始。

736
00:35:49,080 --> 00:35:51,647
所以这是一个很好的小功能。好，那么

737
00:35:51,716 --> 00:35:55,852
让我们来运行它。这些都是我们会提供的技巧和窍门

738
00:35:55,921 --> 00:35:57,787
顺便说一下周五的封面。很好的理由来周五。

739
00:35:57,856 --> 00:36:00,289
问题，是吗？ >>你能再过一次吗？

740
00:36:00,358 --> 00:36:05,127
如何将按钮链接到视图控制器？

741
00:36:05,196 --> 00:36:06,295
>>是的，我们如何

742
00:36:06,364 --> 00:36:07,897
连接到按钮视图控制器？

743
00:36:07,966 --> 00:36:09,165
是的，我会在马上告诉你。

744
00:36:09,233 --> 00:36:10,166
所以让我们确保它的工作和

745
00:36:10,234 --> 00:36:12,168
那么我会告诉你我们是如何连接到它的。所以

746
00:36:12,237 --> 00:36:13,036
我们在这里有这个按钮。

747
00:36:13,104 --> 00:36:15,872
我要点击幽灵，并在我们的控制台中向下看。

748
00:36:15,940 --> 00:36:19,576
看，唉！这是一个幽灵，好吧。所以它正在工作。所以

749
00:36:19,644 --> 00:36:21,745
我们正在点击按钮，这样做。所以

750
00:36:21,813 --> 00:36:23,780
问题是，我们又是如何挂钩？

751
00:36:23,849 --> 00:36:26,349
那么我们所做的就是控制，控制

752
00:36:26,417 --> 00:36:31,087
键，我们从按钮拖入我们的代码。

753
00:36:31,155 --> 00:36:32,922
当我们放开的时候，问了我们所有的问题。

754
00:36:32,991 --> 00:36:33,823
你要叫它什么？

755
00:36:33,891 --> 00:36:37,527
那种东西。好的，所以我们把它搞定了，

756
00:36:37,596 --> 00:36:40,329
对。现在，当这种情况发生时，我们需要翻转卡片

757
00:36:40,398 --> 00:36:41,797
而不是只是说，唉！一个幽灵。好的？

758
00:36:41,866 --> 00:36:44,500
所以我们不会说唉！一个幽灵了。所以

759
00:36:44,569 --> 00:36:48,371
要做到这一点，我要添加我自己的功能翻转

760
00:36:48,440 --> 00:36:50,973
卡过了。所以我们来创建我们自己的Swift函数。

761
00:36:51,042 --> 00:36:53,643
所以我们不得不说func因为它是一个函数的方法。

762
00:36:53,712 --> 00:36:57,580
我会打这个翻盖卡，好的。

763
00:36:57,648 --> 00:36:59,949
我会有两个参数。

764
00:37:00,018 --> 00:37:04,554
一个是我想要在这张牌上的表情符号，

765
00:37:04,622 --> 00:37:07,290
幽灵或什么的。另一个是按钮

766
00:37:07,358 --> 00:37:10,125
我想设置表情符号，或者其他什么。

767
00:37:10,194 --> 00:37:15,631
所以，在这里有趣的是，我将会要求这些东西

768
00:37:15,700 --> 00:37:20,003
限制你可能认为是陌生的名字。

769
00:37:20,071 --> 00:37:25,774
我会用表情符号，字符串的表情符号来说。所以

770
00:37:25,843 --> 00:37:30,413
这是在与表情符号内部名称表情符号的外部名称。和

771
00:37:30,481 --> 00:37:35,985
如何在按钮UIButton这一个。好的？

772
00:37:36,054 --> 00:37:39,989
现在，这些对你来说可能看起来很奇怪

773
00:37:40,058 --> 00:37:42,158
参数，内部和外部。

774
00:37:42,227 --> 00:37:44,927
在你最后一页的阅读任务中，它会发生的

775
00:37:44,996 --> 00:37:47,897
链接到你必须阅读的文件解释

776
00:37:47,966 --> 00:37:50,466
如何在这里挑选好名字。 Cuz有一个非常好的

777
00:37:50,535 --> 00:37:53,203
定义一套在这里选择好名字的规则。但

778
00:37:53,271 --> 00:37:56,840
头号规则是有人调用这个函数的时候，

779
00:37:56,908 --> 00:38:00,243
它应该像英文一样阅读。这是头号

780
00:38:00,311 --> 00:38:02,244
挑选这些名字的要求。

781
00:38:02,313 --> 00:38:04,314
所以让我们在这里调用这个函数当点击卡时，

782
00:38:04,382 --> 00:38:07,216
因为我们想把它叫做幽灵。所以我会说

783
00:38:07,285 --> 00:38:11,020
目录卡片。好的，顺便注意一下，当我开始打字的时候，

784
00:38:11,088 --> 00:38:13,823
看看Xcode试图帮助我。 Xcode很好，

785
00:38:13,892 --> 00:38:15,791
你看看，它知道我有一个flipCard方法。

786
00:38:15,860 --> 00:38:20,530
事实上，我只是要打标签，它显示了我的方法

787
00:38:20,599 --> 00:38:23,833
与参数名称。而且我准备好填写。

788
00:38:23,902 --> 00:38:25,935
所以从呼叫者的角度来看，

789
00:38:26,004 --> 00:38:30,406
flipCard(withEmoji)。表情符号就是我们说的

790
00:38:30,475 --> 00:38:32,742
比如我们的幽灵。我只是复制和

791
00:38:32,811 --> 00:38:37,981
把他从这里贴上在按钮和哪个按钮？

792
00:38:38,049 --> 00:38:41,250
当然，发件人。这就是这个发件人。所以

793
00:38:41,319 --> 00:38:43,720
你看我什么时候调用，看起来像英文。

794
00:38:43,788 --> 00:38:48,091
在发送器按钮上翻转带有表情符号的卡片。

795
00:38:48,159 --> 00:38:50,459
这是我们努力完成的第一件事。

796
00:38:50,528 --> 00:38:53,596
但是在这里，我们不想说，如果

797
00:38:53,665 --> 00:38:58,400
按钮标题等于表情符号，这是奇怪的。

798
00:38:58,469 --> 00:39:02,137
这是发送一个消息，说按钮，无论如何，

799
00:39:02,206 --> 00:39:03,039
这是没有意义的，

800
00:39:03,107 --> 00:39:04,941
所以这就是为什么我们有这些不同的名字。

801
00:39:05,009 --> 00:39:08,811
现在，只有一个名字是可能的，合法的

802
00:39:08,880 --> 00:39:12,048
只是表情符号。然后外部的内部名称都会

803
00:39:12,116 --> 00:39:17,320
是表情符号而这种低调的东西就在这里。

804
00:39:17,389 --> 00:39:19,588
这意味着没有任何参数，

805
00:39:19,657 --> 00:39:20,790
换句话说就像Java或者Java

806
00:39:20,858 --> 00:39:24,560
一些其他的语言。我们几乎从来没有这样做，这是完成的，

807
00:39:24,629 --> 00:39:26,529
该文件会告诉你什么时候可以做到这一点，

808
00:39:26,597 --> 00:39:29,832
我们几乎从来没有这样做。这是在这个点击卡

809
00:39:29,900 --> 00:39:33,069
因为这是发送此消息的iOS事物。

810
00:39:33,138 --> 00:39:34,637
这是从Objective-C世界回来的。

811
00:39:34,706 --> 00:39:38,007
Objective-C没有这个内部的外部名字的东西。

812
00:39:38,075 --> 00:39:40,476
所以这就是为什么它在那里吧，好的，但是

813
00:39:40,545 --> 00:39:43,513
我们并没有真的使用下划线那么多。好，那么

814
00:39:43,582 --> 00:39:45,748
我们如何在这里实现这张翻转卡？

815
00:39:45,816 --> 00:39:48,251
那么，这个flipCard本质上是要切换它，

816
00:39:48,320 --> 00:39:50,319
我只是要有这个flipCard方法，

817
00:39:50,388 --> 00:39:53,623
看按钮如果已经是幽灵，

818
00:39:53,692 --> 00:39:57,393
那么我会把它翻转成橙色，没有文字。

819
00:39:57,462 --> 00:40:00,195
如果不是，那么我会把白色的幽灵放在上面

820
00:40:00,264 --> 00:40:05,034
背景。就像我们之前玩过的那样。

821
00:40:05,102 --> 00:40:09,605
所以，我们需要检查按钮是否为当前标题

822
00:40:09,674 --> 00:40:12,408
这是幽灵吗？所以我只是试着打入

823
00:40:12,476 --> 00:40:15,377
让我们看看，如果按钮。好的，现在我需要发送

824
00:40:15,446 --> 00:40:19,415
向该按钮发送一条消息，询问您目前的标题是什么。

825
00:40:19,484 --> 00:40:23,386
那么，可能我想去看看文档，

826
00:40:23,455 --> 00:40:25,788
弄清楚按钮做了什么。事实上，这就是你想要做的。

827
00:40:25,856 --> 00:40:28,757
但是，如果你只是想猜测，其实有一个很酷的方法

828
00:40:28,826 --> 00:40:32,628
这是什么。你可以按点。这就是你如何发送消息

829
00:40:32,697 --> 00:40:35,831
在Swift中就像Java一样，点右键发送消息。

830
00:40:35,900 --> 00:40:39,034
而当你这样做Xcode会告诉你所有的方法

831
00:40:39,103 --> 00:40:43,039
和按钮理解的变量，让我说，

832
00:40:43,107 --> 00:40:46,409
有不少。好吧，我在这里滚动，

833
00:40:46,478 --> 00:40:48,711
我只是下降到Cs好，我们得到了Ds，

834
00:40:48,780 --> 00:40:51,447
可能有几百个。所以

835
00:40:51,515 --> 00:40:53,983
这对我有帮助吗？这根本不能帮助我。

836
00:40:54,052 --> 00:40:56,885
那么，最酷的是，如果我只是在这里输入一个词，我就可以

837
00:40:56,954 --> 00:41:00,223
想想可能是以我想要的标题的方式为名。

838
00:41:00,291 --> 00:41:03,359
我要你设置标题。现在它只是显示我的东西

839
00:41:03,428 --> 00:41:06,295
从标题开始，或者标题在其中，或者

840
00:41:06,364 --> 00:41:09,566
有TITLE，这不是很有用，但是

841
00:41:09,634 --> 00:41:12,668
这就是为什么它把这些放在底部。但不管怎么说，

842
00:41:12,737 --> 00:41:15,171
我们得到了标题。所以现在我可以开始环顾四周了

843
00:41:15,239 --> 00:41:18,374
这里有一个很短的名单，看看我能找到它。

844
00:41:18,443 --> 00:41:20,909
所以这里是标题颜色，绝对不是我想要的。

845
00:41:20,978 --> 00:41:24,079
标题矩形，没有。这是设置标题。

846
00:41:24,148 --> 00:41:25,481
我现在不想设置标题，但是

847
00:41:25,550 --> 00:41:28,350
这是有点好知道。看看这个，目前

848
00:41:28,419 --> 00:41:30,919
标题。显示在按钮上的当前标题。

849
00:41:30,988 --> 00:41:34,824
胜利，我找到了我想要的东西。当我找到我的时候

850
00:41:34,892 --> 00:41:40,730
想在这里，看起来像顺便，返回一个字符串？

851
00:41:40,798 --> 00:41:42,932
无论如何，我们都会尝试。如果我双击它，

852
00:41:43,000 --> 00:41:46,035
它会把那个给我现在我只能说

853
00:41:46,103 --> 00:41:49,471
这就等于你要求我翻转的表情符号

854
00:41:49,540 --> 00:41:52,975
卡来。这第一个说法。注意我正在使用

855
00:41:53,044 --> 00:41:56,846
表情符号和按钮作为我的内部名字在这里。

856
00:41:56,914 --> 00:42:00,483
我没有使用表情符号或。这是给调用者的。

857
00:42:00,552 --> 00:42:05,020
好的，现在我发现按钮已经在这里了

858
00:42:05,089 --> 00:42:07,957
有它的幽灵。所以现在我想让它变成橙色

859
00:42:08,026 --> 00:42:10,927
空白。所以现在我需要设置按钮的标题，我看到了

860
00:42:10,995 --> 00:42:14,997
在此之前它被设置标题。在这里，设置标题。现在

861
00:42:15,066 --> 00:42:18,501
这个标题在这里有额外的东西，用于UI控制状态。

862
00:42:18,570 --> 00:42:21,336
你看到了吗？这就像是，这到底是什么？

863
00:42:21,405 --> 00:42:24,439
我对扣子一无所知，所以我不确定。

864
00:42:24,508 --> 00:42:27,109
但是我没有看到任何其他的标题，所以我想我将不得不这样做

865
00:42:27,178 --> 00:42:30,713
去用这个。好的，所以我双击它。标题

866
00:42:30,782 --> 00:42:34,183
我想在这里设定，当然是空串，因为，

867
00:42:34,251 --> 00:42:36,018
我试图在这里做卡的背面。

868
00:42:36,087 --> 00:42:39,789
所以我把它清空。而现在我处于这种控制状态

869
00:42:39,858 --> 00:42:43,125
僵局，因为我不知道这是什么意思。

870
00:42:43,194 --> 00:42:45,795
所以，这是你可以做的另一件很酷的事情，

871
00:42:45,863 --> 00:42:48,564
是按住选项，鼠标放在任何东西上，

872
00:42:48,633 --> 00:42:52,234
你会看到它是如何突出一些小问题的事情

873
00:42:52,303 --> 00:42:55,704
在那里标记？你可以点击它，它会显示你

874
00:42:55,773 --> 00:42:59,174
那件事的文件。所以这里是标题，

875
00:42:59,243 --> 00:43:01,410
它的文档。如果我通读这个，

876
00:43:01,479 --> 00:43:03,579
第三段和说明说，

877
00:43:03,648 --> 00:43:05,648
至少，你应该设置的值

878
00:43:05,717 --> 00:43:10,419
正常的状态。好的听起来不错。现在我想

879
00:43:10,488 --> 00:43:13,489
了解如何获得正常的状态，所以我会

880
00:43:13,558 --> 00:43:17,393
其实点击这里的链接，你看到UIControlState？

881
00:43:17,462 --> 00:43:19,428
这将带我到文档和

882
00:43:19,497 --> 00:43:22,598
显示我的控制状态。所以，我们去，点击提出

883
00:43:22,667 --> 00:43:26,269
文件，这里的控制状态，看到？和

884
00:43:26,337 --> 00:43:30,139
这里是正常的，第一个就是正常的。

885
00:43:30,208 --> 00:43:33,242
而且我们稍后会看到我们如何使用这些东西，但是

886
00:43:33,310 --> 00:43:35,778
这是一个静态的，你看它是一个静态栏。

887
00:43:35,847 --> 00:43:39,115
所以这是一种类型的属性，等等

888
00:43:39,183 --> 00:43:42,185
我们打字的方式就是说，

889
00:43:42,253 --> 00:43:45,454
UIControlState.normal。所以我们发现这很棒，但是

890
00:43:45,523 --> 00:43:46,622
虽然我在这里的文档，

891
00:43:46,691 --> 00:43:49,525
让我简单介绍一下文档是如何工作的。

892
00:43:49,594 --> 00:43:52,361
在这里，你可以看到我在看UI工具包

893
00:43:52,430 --> 00:43:55,798
在它的意见和控制在UIControl类，哪个

894
00:43:55,867 --> 00:43:59,068
按钮继承。我们正在看这个东西，

895
00:43:59,136 --> 00:44:01,604
UIControlState。但我可以在这里点击任何地方

896
00:44:01,672 --> 00:44:05,241
回去，如果我想要看看UIButton。在这里

897
00:44:05,309 --> 00:44:07,843
的UIButton。现在，当您查看文档时，

898
00:44:07,912 --> 00:44:11,246
我强烈建议你阅读这些概述部分。

899
00:44:11,315 --> 00:44:12,948
你看这里说什么概述？

900
00:44:13,017 --> 00:44:15,585
这个概述部分在每个类中，

901
00:44:15,653 --> 00:44:17,787
只需要你五分钟的时间阅读。而且是真的

902
00:44:17,855 --> 00:44:20,690
会帮助你理解这里到底发生了什么

903
00:44:20,759 --> 00:44:22,491
所以，我强烈建议你这样做

904
00:44:22,559 --> 00:44:25,094
所有常用的类，你使用，后来UIButton

905
00:44:25,162 --> 00:44:27,563
我们要在字典中进行排列。去读吧

906
00:44:27,632 --> 00:44:31,601
你明白这里发生了什么事。了解？

907
00:44:33,104 --> 00:44:35,470
您也可以在这里搜索当然的文档。

908
00:44:35,539 --> 00:44:38,474
除了概述之外，它还包含所有方法的列表。

909
00:44:38,542 --> 00:44:39,541
在这里，例如，

910
00:44:39,610 --> 00:44:42,711
这里再次设置标题。回去看看是否一样

911
00:44:42,780 --> 00:44:47,049
在那个小盒子里出现。所以现在我们知道这一点

912
00:44:47,118 --> 00:44:49,852
这里的控制状态应该也是UIControlState.normal。

913
00:44:49,920 --> 00:44:53,522
这将设置正常的控制状态。我们也想

914
00:44:53,591 --> 00:44:56,359
设置背景颜色，所以我要做的按钮点和

915
00:44:56,427 --> 00:44:58,827
我要去传单，背景颜色。

916
00:44:58,896 --> 00:45:02,198
果然，看看backgroundColor什么的，

917
00:45:02,267 --> 00:45:05,768
恰好被称为backgroundColor，需要一个UIColor，

918
00:45:05,837 --> 00:45:08,470
我认为？让我们双击一下。和

919
00:45:08,539 --> 00:45:11,607
我要设定等于，相信或不相信

920
00:45:11,676 --> 00:45:14,409
实际上在这里把颜色文字。你刚才

921
00:45:14,478 --> 00:45:16,946
通过开始键入单词颜色来做到这一点，而你就是这样做的

922
00:45:17,014 --> 00:45:19,148
要看到第一个选择总是颜色文字。

923
00:45:19,217 --> 00:45:20,649
如果你双击它，

924
00:45:20,718 --> 00:45:22,518
它在这里放了一个小广场。

925
00:45:22,587 --> 00:45:25,021
如果你点击广场，你可以选择你想要的颜色。

926
00:45:26,257 --> 00:45:27,823
所以，让我们回去挑选我们的橙色，

927
00:45:27,892 --> 00:45:29,425
因为这是我们在后台做的。

928
00:45:29,493 --> 00:45:33,029
所以，我们将背景颜色设置为橙色。

929
00:45:33,097 --> 00:45:34,931
能够在代码中看到它真的很好。

930
00:45:34,999 --> 00:45:38,100
它确实突出显示你使用的颜色。

931
00:45:38,168 --> 00:45:41,304
好吧，如果不是，没有幽灵

932
00:45:41,372 --> 00:45:43,105
那么现在我们要把幽灵放在那里。

933
00:45:43,173 --> 00:45:45,942
所以我会在这里完成相同的代码。

934
00:45:46,010 --> 00:45:48,311
这只是我要设置标题而不是空白，

935
00:45:48,379 --> 00:45:51,180
像背景一样。我要把它设置为表情符号，

936
00:45:51,249 --> 00:45:54,316
在这种情况下的幽灵。我要双击这个

937
00:45:54,385 --> 00:45:57,186
橙色的广场，并将其改为白色，因为我想要一个白色

938
00:45:57,254 --> 00:46:01,890
前面的背景。我们得到了吗？好的，

939
00:46:01,959 --> 00:46:04,393
让我们跑，看看我们的卡。我们的卡现在应该翻转过来，

940
00:46:04,461 --> 00:46:08,531
这使我们在这条路上走了很长的一段路

941
00:46:08,600 --> 00:46:11,400
去集中工作。就在这里

942
00:46:11,469 --> 00:46:16,272
我们的幽灵。横过你的手指。呃，它翻转过来

943
00:46:16,340 --> 00:46:20,876
背部。好的，很好。好吧，我们正在滚动。

944
00:46:20,945 --> 00:46:21,677
现在，我们走吧

945
00:46:21,746 --> 00:46:24,613
添加另一张牌。好的，我们有一张卡。让我们去

946
00:46:24,682 --> 00:46:27,416
第二张牌。不管你信不信，你可以把东西拿进去

947
00:46:27,484 --> 00:46:29,518
界面生成器是你想要的方式和

948
00:46:29,587 --> 00:46:32,020
只需复制并粘贴它们。所以现在我有两张牌和

949
00:46:32,089 --> 00:46:34,690
这张卡已经是我想要的正确的形状了，

950
00:46:34,758 --> 00:46:37,259
它有正确的字体大小的所有东西。

951
00:46:37,328 --> 00:46:40,129
所以真的建议复制和粘贴经文拖动

952
00:46:40,198 --> 00:46:42,297
出来一个新的，并试图把它设置为所有相同的事情。

953
00:46:42,366 --> 00:46:44,599
只需复制并粘贴。

954
00:46:44,668 --> 00:46:48,103
现在这个人想要一个不同的东西，所以我们来做吧

955
00:46:48,172 --> 00:46:52,942
像南瓜的东西。是的，我们可以做一个泵和

956
00:46:53,011 --> 00:46:55,978
现在我们要做南瓜，好吗？所以我们得到了南瓜

957
00:46:56,047 --> 00:46:58,180
所以我们有南瓜卡，我们有一个幽灵牌。

958
00:46:58,249 --> 00:47:00,983
现在这个南瓜卡，它需要一个方法。

959
00:47:01,051 --> 00:47:04,353
所以我们要Ctrl +拖动创建另一个方法。

960
00:47:04,422 --> 00:47:06,722
所以如果你第一次错过了，就是这样。

961
00:47:06,791 --> 00:47:10,660
这是一个行动。我会打这个touchSecondCard。

962
00:47:13,531 --> 00:47:17,967
类型，当然，我们想要一个UIButton，参数sender。

963
00:47:18,035 --> 00:47:20,903
连接它，在这里。我要拿这个

964
00:47:20,971 --> 00:47:24,339
完全相同的代码，放在这里，

965
00:47:24,408 --> 00:47:28,578
但在这里，而不是鬼，我要用R南瓜。

966
00:47:31,616 --> 00:47:34,984
好吧，看起来不错，对吧？这不可能出错，

967
00:47:35,052 --> 00:47:40,089
这很简单这是必须的，

968
00:47:40,158 --> 00:47:45,427
好吧，我们来做吧。好吧，我们走吧，

969
00:47:45,496 --> 00:47:50,666
幽灵仍然像一个魅力工作。和一个南瓜，南瓜

970
00:47:50,734 --> 00:47:54,136
不工作。好的，我们的南瓜怎么了？

971
00:47:54,204 --> 00:47:57,806
这个南瓜怎么可能不对？好，

972
00:47:57,875 --> 00:48:00,342
我们可以在这里得到调试器，设置一个断点，

973
00:48:00,411 --> 00:48:02,577
顺便设置一个断点是很容易的。

974
00:48:02,646 --> 00:48:04,179
你只需点击一个行号，

975
00:48:04,248 --> 00:48:06,782
把断点放在那里。但

976
00:48:06,851 --> 00:48:08,951
我们会做更轻量级的调试。

977
00:48:09,020 --> 00:48:12,320
我只是要在这里打印一张flipCard，看看是否

978
00:48:12,389 --> 00:48:15,390
这甚至称为flipCard。它应该是调用flipCard，

979
00:48:15,459 --> 00:48:18,427
因为它连接到这个方法，所以它应该是

980
00:48:18,495 --> 00:48:20,562
调用flipCard。所以我就要去这里了

981
00:48:20,631 --> 00:48:25,401
说打印，我在flipCard withEmoji。和

982
00:48:25,470 --> 00:48:28,437
现在我想把这个表情符号放在这里现在，

983
00:48:28,506 --> 00:48:32,174
在很多其他语言中，你可能会说％s，

984
00:48:32,243 --> 00:48:34,943
表情符号，或者类似的东西，对吧？

985
00:48:35,012 --> 00:48:39,849
这将是你的，哎呀，这将是你的字符串。

986
00:48:39,917 --> 00:48:43,819
但是我们在Swift没有这个业务，

987
00:48:43,887 --> 00:48:48,457
我们有更好的东西，就是\（）。所以

988
00:48:48,526 --> 00:48:53,362
\（）表示在里面放一些东西，它会解释它

989
00:48:53,431 --> 00:48:57,099
作为一个字符串，并将其嵌入到此字符串中。所以就是这样

990
00:48:57,168 --> 00:49:00,369
我们想要什么，表情符号，以及关于它的很酷的事情是，

991
00:49:00,438 --> 00:49:03,105
我可以放，这是一个字符串，所以很容易嵌入。

992
00:49:03,174 --> 00:49:06,107
但是我可以在这里放一个Int，任何可以转换的东西

993
00:49:06,176 --> 00:49:08,844
到一个字符串，在Swift中大部分事情都可以，我可以放在那里，

994
00:49:08,913 --> 00:49:11,380
我甚至可以把一个数组，或一个字典。

995
00:49:11,449 --> 00:49:13,482
只要数组只有可能的东西

996
00:49:13,550 --> 00:49:15,717
被转换成一个字符串，然后它可以转换整个

997
00:49:15,786 --> 00:49:20,122
数组到一个字符串。所以这是一个非常酷的功能，

998
00:49:20,191 --> 00:49:24,459
这个\（），好吗？所以让我们再次运行

999
00:49:24,528 --> 00:49:30,232
看看南瓜是否正在调用flipCard，这应该是。

1000
00:49:30,301 --> 00:49:33,202
好吧，那么这个幽灵呢，绝对是这么叫的，

1001
00:49:33,271 --> 00:49:36,705
看到纸牌与表情符号，幽灵，南瓜怎么样？

1002
00:49:36,774 --> 00:49:40,442
看起来好像在叫它，但我没有按两下，

1003
00:49:40,511 --> 00:49:43,245
那里发生了什么？这有点奇怪，

1004
00:49:43,314 --> 00:49:49,752
让我们再来一次。没有看，那是两个都做的。

1005
00:49:49,821 --> 00:49:51,186
每当我按下南瓜，

1006
00:49:51,255 --> 00:49:53,088
它正在做幽灵和南瓜，鬼魂和

1007
00:49:53,157 --> 00:49:55,657
南瓜。为什么它做了两次，好吧，

1008
00:49:55,726 --> 00:49:58,460
这显然是他们搞糟了。

1009
00:49:58,529 --> 00:50:02,798
那么，让我们来看看为什么这样做。我们知道

1010
00:50:02,867 --> 00:50:06,168
这个方法被南瓜叫做。和

1011
00:50:06,236 --> 00:50:12,307
这个方法被两者所调用。那就是问题所在。

1012
00:50:12,376 --> 00:50:15,878
为什么会发生呢，因为我复制和粘贴的鬼魂。

1013
00:50:15,947 --> 00:50:17,946
而当我复制和粘贴鬼，它复制和

1014
00:50:18,015 --> 00:50:20,682
粘贴了它发送该消息的事实。所以

1015
00:50:20,751 --> 00:50:22,384
这是一个常见的错误，

1016
00:50:22,453 --> 00:50:25,287
真的很容易。所以我故意告诉你如何

1017
00:50:25,355 --> 00:50:28,957
摆脱这个，就是右键点击某个东西。

1018
00:50:29,026 --> 00:50:31,794
如果你右键点击UI中的任何东西，它会显示你

1019
00:50:31,862 --> 00:50:35,764
所有的连接。所以这是南瓜，

1020
00:50:35,833 --> 00:50:38,567
它发送的是touchCard和touchSecondCard，但是

1021
00:50:38,635 --> 00:50:40,969
我们只希望它发送touchSecondCard。所以

1022
00:50:41,038 --> 00:50:45,340
点击此处即可断开连接。

1023
00:50:45,409 --> 00:50:49,711
现在我修好了，好吧，现在南瓜发送这个，

1024
00:50:49,780 --> 00:50:54,082
只有幽灵发送这个。所以右击是

1025
00:50:54,151 --> 00:50:57,218
一个重要的事情要知道，如果你遇到过这样的情况

1026
00:50:57,287 --> 00:50:58,387
看来，

1027
00:50:58,456 --> 00:51:01,223
我以为我把它连起来，为什么不发送呢？

1028
00:51:01,291 --> 00:51:04,292
甚至为什么它试图发送的东西崩溃

1029
00:51:04,361 --> 00:51:06,962
我没有打算？右键点击它，会告诉你为什么。

1030
00:51:07,030 --> 00:51:11,333
所以让我们运行起来，看看这是否确实解决了我们的问题，

1031
00:51:11,402 --> 00:51:17,873
我想象会。好吧，幽灵翻过来了，

1032
00:51:17,941 --> 00:51:21,176
我们得到了南瓜翻转，好，很好，

1033
00:51:21,245 --> 00:51:25,680
一切都很好现在，我添加更多的卡，我想

1034
00:51:25,749 --> 00:51:29,584
有一些用户界面，告诉我有多少次翻牌。

1035
00:51:29,653 --> 00:51:31,420
因为你在这个游戏中注意到，

1036
00:51:31,488 --> 00:51:34,823
我翻转的次数越少，我就越好，对吧？

1037
00:51:34,892 --> 00:51:36,158
如果我把它们全翻过来，

1038
00:51:36,227 --> 00:51:37,826
上下，然后我不是很好，这很容易，

1039
00:51:37,895 --> 00:51:40,395
我不必专心。所以我想要一些UI

1040
00:51:40,464 --> 00:51:44,266
说我翻了多少次卡，好吗？所以要做

1041
00:51:44,335 --> 00:51:46,769
我要开始，让我们在这里摆脱这个打印，

1042
00:51:46,837 --> 00:51:49,537
我们不再需要调试了。所以我会

1043
00:51:49,606 --> 00:51:52,674
首先添加一个实例变量到我的类

1044
00:51:52,743 --> 00:51:56,679
跟踪翻转计数，好的，真实的，简单的。

1045
00:51:56,747 --> 00:51:59,782
把这个下来，这样我们可以得到一些空间，好吗？

1046
00:51:59,850 --> 00:52:04,018
那么它看起来像添加一个实例变量

1047
00:52:04,087 --> 00:52:09,058
你的班？真的很简单，你使用关键字var，简称

1048
00:52:09,126 --> 00:52:13,962
变量。然后名称flipCount，然后是类型，

1049
00:52:14,030 --> 00:52:18,967
:Int，就是这样。所以我在这里添加了一个变量

1050
00:52:19,036 --> 00:52:22,804
flipCount到我的类，我要保持flipCount

1051
00:52:22,873 --> 00:52:25,640
迄今为止这些卡被翻转。但，

1052
00:52:25,709 --> 00:52:30,579
看看这里发生了什么，我有一个错误。所以这个红色的时候

1053
00:52:30,648 --> 00:52:34,382
你有一个红色的错误，你的应用程序甚至不会编译和运行。

1054
00:52:34,451 --> 00:52:37,352
你也可以得到一个黄色的，然后你的应用程序将编译和

1055
00:52:37,421 --> 00:52:40,021
运行，但不要把你的作业用黄色的

1056
00:52:40,090 --> 00:52:42,258
无论是。尽管他们只是警告，

1057
00:52:42,326 --> 00:52:44,393
他们通常指示不好，所以

1058
00:52:44,461 --> 00:52:47,963
不要这样做。但是这个红色，我得修复这个红色。

1059
00:52:48,032 --> 00:52:50,932
现在有趣的是这个红色出现在另一条线上

1060
00:52:51,001 --> 00:52:54,503
代码。我输入了这行代码，然后就出现了

1061
00:52:54,572 --> 00:52:56,972
一条完全不同的路线。那么这里说的是什么？

1062
00:52:57,040 --> 00:53:00,809
它说，类ViewController没有初始化。

1063
00:53:00,878 --> 00:53:03,645
为什么说这和它有什么关系呢？

1064
00:53:03,714 --> 00:53:07,049
那么，这是因为Swift需要

1065
00:53:07,117 --> 00:53:09,651
所有的实例变量，这在Swift中，

1066
00:53:09,720 --> 00:53:11,920
我们调用实例变量的属性。

1067
00:53:11,989 --> 00:53:13,355
所以当你听到我说的属性，

1068
00:53:13,424 --> 00:53:17,125
我的意思是实例变量。所以所有的实例变量，

1069
00:53:17,194 --> 00:53:19,394
所有的属性都必须初始化，

1070
00:53:19,463 --> 00:53:22,831
你不能让他们像这样flipCount int。

1071
00:53:22,899 --> 00:53:25,867
现在的值是多少？它没有值，好吧，

1072
00:53:25,936 --> 00:53:27,769
它必须有一个初始值，

1073
00:53:27,838 --> 00:53:30,472
只是不允许设置在那里。现在有

1074
00:53:30,540 --> 00:53:33,242
两种方法来初始化一个实例变量，

1075
00:53:33,310 --> 00:53:36,411
一个是使用初始化器。所以这就是这个错误

1076
00:53:36,480 --> 00:53:39,982
试图告诉我们，在这里得到一个初始值，老兄。

1077
00:53:40,050 --> 00:53:42,851
初始化器就是这个具有特殊名称的方法，

1078
00:53:42,920 --> 00:53:45,087
init，初始化程序的简称，和

1079
00:53:45,155 --> 00:53:46,688
它可以有任何你想要的参数。事实上，

1080
00:53:46,757 --> 00:53:49,758
你可以有多个inits，每个都有不同的参数。

1081
00:53:49,826 --> 00:53:52,661
但是每个init都负责初始化

1082
00:53:52,730 --> 00:53:56,931
所有的变量，好的，这就是init的工作。

1083
00:53:57,000 --> 00:53:59,801
所以我们可以在这里添加一个初始化器

1084
00:53:59,870 --> 00:54:02,904
现在，不幸的是，添加一个初始化到一个类可以

1085
00:54:02,973 --> 00:54:05,574
有点复杂，因为继承，对吧？

1086
00:54:05,643 --> 00:54:07,176
由于你的父类有初始化器，

1087
00:54:07,244 --> 00:54:09,244
你必须确保他们得到正确的属性。

1088
00:54:09,312 --> 00:54:11,113
所以我甚至不会谈论初始化，没关系，

1089
00:54:11,181 --> 00:54:13,682
星期三我会谈一谈他们。下周

1090
00:54:13,750 --> 00:54:16,051
我们会更深入地讨论初始化器。和

1091
00:54:16,120 --> 00:54:18,120
所以我可以初始化这个的第二种方法是什么，

1092
00:54:18,189 --> 00:54:19,855
因为我现在不想做初始化器吗？

1093
00:54:19,924 --> 00:54:24,392
这就是在这里说，= 0，好吧，

1094
00:54:24,461 --> 00:54:28,797
如果我只是，为什么我继续按v，好吧，

1095
00:54:28,866 --> 00:54:31,533
Int = 0，好的。初始化这个，

1096
00:54:31,602 --> 00:54:34,369
这会导致这个错误消失，一切都很好。和

1097
00:54:34,437 --> 00:54:38,673
这是我们如何初始化大部分实例变量。

1098
00:54:38,742 --> 00:54:41,210
现在，当我在这里谈论实例变量时，

1099
00:54:41,278 --> 00:54:44,379
我想谈谈Swift和输入。

1100
00:54:44,448 --> 00:54:48,217
Swift是一个非常强大的类型语言，

1101
00:54:48,285 --> 00:54:52,421
我的意思是极端。它确实有一个类似的

1102
00:54:52,489 --> 00:54:54,489
无类型的，但真的这主要是为了

1103
00:54:54,558 --> 00:54:57,959
向后兼容Objective-C。在大多数情况下，你

1104
00:54:58,028 --> 00:55:01,629
想要非常具体地说明你正在使用什么类型，

1105
00:55:01,698 --> 00:55:05,234
有些人抱怨强类型语言。它的

1106
00:55:05,302 --> 00:55:08,170
总是打字的东西太多了。好吧，好吧

1107
00:55:08,238 --> 00:55:12,574
Swift也是一个具有强类型推断的语言，

1108
00:55:12,643 --> 00:55:17,445
这意味着它会，如果可以的话，猜测你的类型。

1109
00:55:17,514 --> 00:55:20,282
所以在这种情况下，你看到我有这样的：Int类型，

1110
00:55:20,350 --> 00:55:22,417
这在Swift中完全没有必要。和

1111
00:55:22,486 --> 00:55:25,020
不但没有必要，我们也不会把它放在那里

1112
00:55:25,089 --> 00:55:28,957
没有理由把那里。为什么呢，因为这个0是

1113
00:55:29,026 --> 00:55:33,895
显然是一个国际。 Swift像这样对待所有文字，

1114
00:55:33,964 --> 00:55:36,898
没有任何小数点作为Ints。和

1115
00:55:36,967 --> 00:55:39,400
所以这是一个Int，我们怎么知道？如果我们按住

1116
00:55:39,469 --> 00:55:42,070
option，就像我们在这里点击标题时所做的一样

1117
00:55:42,138 --> 00:55:44,973
要获得文档，我们可以点击flipCount和

1118
00:55:45,042 --> 00:55:49,144
它会说flipCount是一个Int。你看，如果我

1119
00:55:49,213 --> 00:55:53,649
说过flipCount是0.0，那么如果我按住option和

1120
00:55:53,717 --> 00:55:57,385
回到这里flipCount，它说flipCount是一个double，

1121
00:55:57,454 --> 00:56:00,221
好的？因此，如果我说flipCount等于，它推断它

1122
00:56:00,290 --> 00:56:03,191
“你好”，它会说好的，

1123
00:56:03,260 --> 00:56:06,995
flipCount是一个字符串好的，所以它会推断。

1124
00:56:07,064 --> 00:56:09,965
现在，这很容易推断，这是一个常数，但

1125
00:56:10,034 --> 00:56:13,668
swift甚至可以推断出最惊人的复杂

1126
00:56:13,737 --> 00:56:16,838
的情况。只有一种类型的东西可以

1127
00:56:16,907 --> 00:56:17,772
它会使它的类型和

1128
00:56:17,841 --> 00:56:18,573
你不必把类型。

1129
00:56:18,642 --> 00:56:22,811
所以在Swift中令人惊讶。你输入的时间

1130
00:56:22,880 --> 00:56:26,414
最多的是函数的参数。因为你

1131
00:56:26,483 --> 00:56:28,650
那种不得不说什么，你在那里期待什么。但

1132
00:56:28,719 --> 00:56:30,953
否则你很少真的把类型。

1133
00:56:31,021 --> 00:56:33,755
其实，这真是太神奇了。好的，所以我们有这个

1134
00:56:33,824 --> 00:56:36,257
在这里翻转计数。让我们继续并增加它。 K，

1135
00:56:36,326 --> 00:56:39,127
每次有人踩着，我要按一张卡

1136
00:56:39,195 --> 00:56:43,131
说翻转计数加上等于一和ug我要复制和

1137
00:56:43,200 --> 00:56:45,900
粘贴代码。神。任何时候你复制和

1138
00:56:45,969 --> 00:56:47,936
粘贴代码，你做错了。

1139
00:56:48,004 --> 00:56:51,005
好吧，那不可能是正确的。所以我只是做了一些事情

1140
00:56:51,074 --> 00:56:53,608
不对，但我正在做。我可以放

1141
00:56:53,677 --> 00:56:55,943
在别的地方，但我会。

1142
00:56:56,012 --> 00:56:58,112
我们现在就这样做。你会看到为什么在一秒钟

1143
00:56:58,181 --> 00:57:00,548
我们将解决它。但是我们不想让代码复杂化。

1144
00:57:00,617 --> 00:57:02,017
但每次刷卡时，

1145
00:57:02,085 --> 00:57:05,120
我要增加翻转数。现在很好，但是

1146
00:57:05,189 --> 00:57:06,855
我需要这个翻转计数出现在用户界面，

1147
00:57:06,923 --> 00:57:09,891
好的。我希望用户看到他们做了多少翻转。

1148
00:57:09,960 --> 00:57:11,260
所以我必须有这个int

1149
00:57:11,328 --> 00:57:13,428
出现在UI中。那我该怎么做？好，

1150
00:57:13,496 --> 00:57:17,265
我需要一些其他的UI元素，除了一个按钮和

1151
00:57:17,334 --> 00:57:19,467
这只是一个小文本字段。好的，其实有

1152
00:57:19,536 --> 00:57:23,438
在iOS中称为UILabel的只读文本字段。

1153
00:57:23,507 --> 00:57:26,207
所以当然我们想要添加一些东西给UI，

1154
00:57:26,276 --> 00:57:29,945
我走到这里，到底部，其实就在按钮旁边，

1155
00:57:30,013 --> 00:57:33,181
这里是标签。我会把它拖出来放在这里

1156
00:57:33,250 --> 00:57:36,651
我会尝试和中心或类似的东西。

1157
00:57:36,720 --> 00:57:39,454
这真的很小，所以我会做得更大

1158
00:57:39,523 --> 00:57:42,090
因为我会在这里使用大字体。

1159
00:57:42,159 --> 00:57:46,728
甚至使它更高。文本是黑色的

1160
00:57:46,796 --> 00:57:49,398
它是黑色的黑色。这有点难以理解

1161
00:57:49,466 --> 00:57:52,767
我要回到这里，去这里的上半场，

1162
00:57:52,836 --> 00:57:54,669
改变文字的颜色，好吧，

1163
00:57:54,738 --> 00:57:57,905
这是一个标签属性在这里。由此，

1164
00:57:57,974 --> 00:58:02,644
到我们最喜欢的颜色，橙色。这个文本真的很小，所以

1165
00:58:02,713 --> 00:58:04,445
我要从17pt改变字体，

1166
00:58:04,514 --> 00:58:07,482
这是默认的，像40。

1167
00:58:07,551 --> 00:58:10,318
好多了。我不想在这里说标签，

1168
00:58:10,387 --> 00:58:13,655
我想说它翻转，让我们说，我们将开始Flip：0。

1169
00:58:13,723 --> 00:58:17,058
我不希望这样左对齐，好吧，

1170
00:58:17,127 --> 00:58:18,159
我不希望文本左对齐，

1171
00:58:18,228 --> 00:58:20,828
我想要在中心，所以我去这里中心。

1172
00:58:20,897 --> 00:58:24,065
所以看看我只是在这里使用这个编辑检查

1173
00:58:24,134 --> 00:58:26,701
有点让事情看起来是我想要的样子。

1174
00:58:26,770 --> 00:58:29,971
我甚至可以在这里用我虚线的蓝线来表示

1175
00:58:30,040 --> 00:58:33,208
把它放在右下方，在右边。好的。

1176
00:58:33,276 --> 00:58:35,010
即使我说我们并没有真正使用这些，

1177
00:58:35,078 --> 00:58:36,278
这样做还是有用的。

1178
00:58:36,346 --> 00:58:38,279
>>好的，那么

1179
00:58:38,348 --> 00:58:41,916
现在我有我的用户界面，我该怎么跟它说话？我怎么告诉它

1180
00:58:41,985 --> 00:58:45,120
当翻转显示翻转？那么，我会去的

1181
00:58:45,189 --> 00:58:48,389
做这也是通过我的用户界面和

1182
00:58:48,458 --> 00:58:53,228
我的代码。而且我们知道如何做到这一点，按Ctrl右键？

1183
00:58:53,296 --> 00:58:56,331
按住Ctrl +拖动，放在这里。而这一次，

1184
00:58:56,400 --> 00:58:59,400
不过，我没有采取行动，我正在做一个出路。

1185
00:58:59,469 --> 00:59:02,404
而一个出口是做什么是它创建一个实例变量。

1186
00:59:03,874 --> 00:59:05,841
所以行动创造一个方法，

1187
00:59:05,909 --> 00:59:08,242
Outlet创建一个实例变量或属性

1188
00:59:08,311 --> 00:59:11,212
该属性是要指向这个UI标签和

1189
00:59:11,281 --> 00:59:12,347
我可以和它聊聊

1190
00:59:12,416 --> 00:59:15,617
告诉它在翻转时更新自己。好吧，

1191
00:59:15,686 --> 00:59:19,387
所以我会怎么称呼这个东西呢？

1192
00:59:19,456 --> 00:59:22,957
调用这个我的flipCountLabel，它在这里得到了类型

1193
00:59:23,026 --> 00:59:25,927
没有看到任何。不要担心这个储存weak。

1194
00:59:25,996 --> 00:59:28,163
我下周要谈谈这个。所以

1195
00:59:28,231 --> 00:59:30,898
我会打连接，它会创建另一个变种。

1196
00:59:30,967 --> 00:59:33,668
像var flipCount一样。但这个变种会有点儿

1197
00:59:33,737 --> 00:59:38,874
不同。这个变种是对不起，错在那里。

1198
00:59:38,943 --> 00:59:44,078
这个var是var flipCountLabel：UILabel！

1199
00:59:44,147 --> 00:59:48,649
好的？现在你不能通过这种方式推断这种类型，因为

1200
00:59:48,718 --> 00:59:51,919
UI在UI中启用。所以它不知道如何看待

1201
00:59:51,988 --> 00:59:54,556
用户界面和推断标签，所以它不能推断那里。

1202
00:59:54,625 --> 00:59:58,259
所以我们确实需要在这里明确地向UI标签说明。周，

1203
00:59:58,328 --> 01:00:01,129
我告诉你看，下周我们会告诉你的。

1204
01:00:01,198 --> 01:00:05,200
这是另一种类似这样的指令

1205
01:00:05,268 --> 01:00:08,170
把小点放在那里，这样我们可以看到，

1206
01:00:08,238 --> 01:00:11,673
那就是这样。好的，所以这里是var，

1207
01:00:11,742 --> 01:00:13,841
和我们的翻转计数完全一样。

1208
01:00:13,910 --> 01:00:17,011
注意那里有一个小惊叹号。那

1209
01:00:17,080 --> 01:00:20,448
是超级重要的。但今天我不会谈论这件事。

1210
01:00:20,517 --> 01:00:23,919
我不能一下子谈论所有事情。注意到这一点

1211
01:00:23,987 --> 01:00:26,487
非常重要的还有一个副作用。

1212
01:00:26,556 --> 01:00:27,889
这不是它的主要目的

1213
01:00:27,958 --> 01:00:31,025
副作用是。它不必被初始化。

1214
01:00:31,094 --> 01:00:33,694
注意这并不是说等于什么，然而

1215
01:00:33,763 --> 01:00:36,798
我们没有错误。好的？所以不要为此而烦恼。

1216
01:00:36,867 --> 01:00:38,566
我要谈谈这个惊叹号。

1217
01:00:38,635 --> 01:00:40,135
这不可能更重要，

1218
01:00:40,203 --> 01:00:42,170
可能是最重要的新鲜事物

1219
01:00:42,238 --> 01:00:44,873
你要学习swift的事情，好吧，

1220
01:00:44,942 --> 01:00:48,243
是什么一回事。好的，所以我得到了这个翻转

1221
01:00:48,311 --> 01:00:50,278
在这里计数标签。现在，我想要做的是，

1222
01:00:50,347 --> 01:00:53,047
每次这个触发计数改变，就在这里。

1223
01:00:53,116 --> 01:00:56,818
我要去和flip count标签谈谈，我想要设置

1224
01:00:56,887 --> 01:01:00,488
这是文字，标签。我想设置它的文本，所以我要去

1225
01:01:00,557 --> 01:01:03,257
发送一条消息，我想设置文本，所以我只是去

1226
01:01:03,326 --> 01:01:05,760
说文字。碰巧有一些东西叫做文字，

1227
01:01:05,829 --> 01:01:07,062
那里的第一个。你看到了吗？

1228
01:01:07,130 --> 01:01:09,864
它说文字为一个字符串，所以我要双击

1229
01:01:09,933 --> 01:01:15,236
好吧，我要把这个文本设置为Flips：，

1230
01:01:15,305 --> 01:01:18,940
然后我会在这里使用我最喜欢的功能，

1231
01:01:19,008 --> 01:01:22,344
\（）。我要把flipCount放在那里所以

1232
01:01:23,780 --> 01:01:26,881
这会改变这个flipCount图层上的文字，

1233
01:01:26,950 --> 01:01:30,284
我们会说翻转：1，所以它会去任何和

1234
01:01:30,353 --> 01:01:34,088
当然，我必须复制并粘贴对了

1235
01:01:34,157 --> 01:01:38,126
因为我需要每次更新它。所以，

1236
01:01:38,195 --> 01:01:42,864
让我们看看是否

1237
01:01:42,933 --> 01:01:47,635
这个工作了。

1238
01:01:47,704 --> 01:01:50,639
好的，我们走吧。我们试着翻转这张牌。哦，是的。

1239
01:01:50,707 --> 01:01:53,175
每当我们翻转我们的背部。

1240
01:01:53,243 --> 01:01:57,078
这是递增的倒计数。好，太棒了

1241
01:01:57,147 --> 01:02:01,650
除了这真的是讨厌的。我只是复制和粘贴。

1242
01:02:01,718 --> 01:02:04,219
我的意思是，想象我真的这样做了

1243
01:02:04,288 --> 01:02:06,154
我有另一个按钮叫新游戏和

1244
01:02:06,223 --> 01:02:08,222
我不得不把倒计数设置回零。

1245
01:02:08,291 --> 01:02:10,625
我将不得不把这个相同的代码行。

1246
01:02:10,693 --> 01:02:12,360
而如果有一天我说，好吧，

1247
01:02:12,429 --> 01:02:14,796
我不希望这个翻转，我想要说翻转计数。

1248
01:02:14,865 --> 01:02:16,698
现在我必须改变这三个地方。

1249
01:02:16,767 --> 01:02:18,733
这只是可怕的代码。

1250
01:02:18,801 --> 01:02:21,803
幸运的是，在Swift中，有一种方法可以避免这样做

1251
01:02:21,871 --> 01:02:25,707
这种情况下，这是任何财产，如果你想要的话，

1252
01:02:25,775 --> 01:02:30,678
你可以把代码放在之后说的，确定了。它会的

1253
01:02:30,747 --> 01:02:35,716
每次设置的时候执行这个代码。好的？

1254
01:02:35,785 --> 01:02:38,720
这就是所谓的属性观察员。因为这个代码是

1255
01:02:38,789 --> 01:02:43,224
观察这个变化。所以我们可以把这个拿出来

1256
01:02:43,293 --> 01:02:46,294
把它放在这里，现在我们可以把它从这里带走。

1257
01:02:46,362 --> 01:02:50,565
每次翻转计数改变，它将执行

1258
01:02:50,633 --> 01:02:54,235
didSet，并与标签交谈，并更新它。

1259
01:02:54,303 --> 01:02:56,637
所以现在如果我添加一个新的游戏资产，翻转计数等于零，

1260
01:02:56,706 --> 01:03:01,743
它会自动更新它。

1261
01:03:01,811 --> 01:03:03,278
属性观察员真的很酷。

1262
01:03:03,346 --> 01:03:07,048
显然我们使用属性观察器来保持UI

1263
01:03:07,117 --> 01:03:10,351
与我们的类的实例变量同步。好的，

1264
01:03:10,420 --> 01:03:14,455
所以你会看到这一直发生。好的，时间

1265
01:03:14,524 --> 01:03:18,826
获得更多的按钮。我们得到了这两个按钮。顺便一提，

1266
01:03:18,895 --> 01:03:23,698
注意到我们正在从代码驱动我们的UI，对吧？

1267
01:03:23,767 --> 01:03:26,100
这是代码的这一行，说在用户界面中的东西。

1268
01:03:26,169 --> 01:03:28,603
所以我实际上会改变这两个按钮

1269
01:03:28,671 --> 01:03:29,771
面朝下。

1270
01:03:29,840 --> 01:03:32,306
好的，当他们开始。而有趣的是，如果我

1271
01:03:32,375 --> 01:03:35,810
选择他们两个，并在这个东西的顶部，

1272
01:03:35,879 --> 01:03:38,980
注意到它注意到它们都是按钮。所以

1273
01:03:39,049 --> 01:03:41,582
我可以改变的东西，就像这里说的多重值

1274
01:03:41,651 --> 01:03:43,651
文字，幽灵和南瓜。

1275
01:03:43,720 --> 01:03:46,487
我可以把它设置为空白，我可以下到最下面

1276
01:03:46,556 --> 01:03:50,825
在这里设置背景颜色为橙色，这是影响

1277
01:03:50,894 --> 01:03:52,627
两个都。所以，如果你选择多个东西，

1278
01:03:52,696 --> 01:03:55,529
只要它们是相同的，它们也是一样的

1279
01:03:55,598 --> 01:03:59,267
键入，那么你可以同时编辑它们。

1280
01:03:59,335 --> 01:04:01,603
好的。所以我有这些卡，让我们做更多的卡。

1281
01:04:01,671 --> 01:04:04,472
我要复制并粘贴这些卡片。其实，

1282
01:04:04,540 --> 01:04:06,341
在我这样做之前，我们来做另外一件事。

1283
01:04:06,410 --> 01:04:11,679
我对这里的建筑非常不满，

1284
01:04:11,747 --> 01:04:14,949
因为如果我想添加更多的卡片，我想我会有

1285
01:04:15,018 --> 01:04:19,120
做复印，摸第三张卡，第四张卡，第五张卡，

1286
01:04:19,188 --> 01:04:21,122
第六张卡，第七张卡，八张卡，九张，好的。

1287
01:04:21,191 --> 01:04:23,991
这将是最糟糕的代码，你会得到一个F

1288
01:04:24,060 --> 01:04:27,461
你的功课，如果你这样做。这太糟糕了，所以我们是

1289
01:04:27,530 --> 01:04:30,631
显然不会使用那个架构来做到这一点

1290
01:04:30,700 --> 01:04:33,568
其实我想摆脱这个点击第二张牌

1291
01:04:33,637 --> 01:04:36,137
完全，我只是想把所有的东西都放在点击卡上。

1292
01:04:36,205 --> 01:04:38,773
这意味着我不会有这行代码重复

1293
01:04:38,842 --> 01:04:40,007
并且这行代码重复。

1294
01:04:40,076 --> 01:04:42,944
这将是伟大的。 UI好多了。

1295
01:04:43,013 --> 01:04:45,780
所以要做到这一点，我要右键点击这个和

1296
01:04:45,849 --> 01:04:49,951
断开点击第二张卡，而不是有这个家伙

1297
01:04:50,019 --> 01:04:54,022
按住Ctrl键拖到这里。看看你可以把它连接到一个

1298
01:04:54,091 --> 01:04:56,090
已经存在的只是拖到它和

1299
01:04:56,159 --> 01:05:00,929
放开。所以现在都是发送Touchcard。

1300
01:05:00,998 --> 01:05:03,731
好吧，这很好，但在这里我们

1301
01:05:03,800 --> 01:05:07,101
显然不能这样做。在这里有这个幽灵，

1302
01:05:07,170 --> 01:05:09,904
因为那样会把两张牌都设定为幽灵。那我们怎么样？

1303
01:05:09,973 --> 01:05:12,674
在这里有代码在点击卡，适用于

1304
01:05:12,742 --> 01:05:16,344
所有的卡？那么我要做的是我要创造

1305
01:05:16,413 --> 01:05:20,381
所有这些卡片的数组，并且当按下卡片时，

1306
01:05:20,450 --> 01:05:23,151
我要看看这个数组，找到那个按钮

1307
01:05:23,220 --> 01:05:26,320
按下，然后我会知道它是哪个卡。那么，当我

1308
01:05:26,389 --> 01:05:28,355
知道它是哪个卡，它在数组中的哪个索引。

1309
01:05:28,424 --> 01:05:32,526
我要去查找另一个数组，表情符号放在那里。

1310
01:05:32,595 --> 01:05:34,796
所以，这将是数据驱动。对，等等

1311
01:05:34,865 --> 01:05:35,730
如果我想添加更多的卡片，

1312
01:05:35,799 --> 01:05:38,332
我只是添加更多的卡到我的表情符号数组。

1313
01:05:38,401 --> 01:05:39,868
这将是伟大的。好，那么

1314
01:05:39,936 --> 01:05:42,003
让我们做更多的卡片。我要复制和

1315
01:05:42,071 --> 01:05:45,339
粘贴制作更多的卡片，所以我有四张卡片

1316
01:05:45,408 --> 01:05:49,744
现在我想要制作一个包含这些卡片的数组，好吧。

1317
01:05:49,812 --> 01:05:51,546
那么如何做一个包含这些卡的数组呢？

1318
01:05:51,614 --> 01:05:53,647
那么，这是用户界面和代码之间的连接。

1319
01:05:53,716 --> 01:06:00,087
所以我要控制，在这里拖动和创建另一个变种。

1320
01:06:00,156 --> 01:06:03,458
好吧，但是这是一个出口的第三种

1321
01:06:03,527 --> 01:06:07,095
采集。所以现在outlet collection意味着一个数组

1322
01:06:07,163 --> 01:06:10,398
在UI中的东西。所以我会叫这个myCardButons，

1323
01:06:10,466 --> 01:06:13,234
我其实会犯错，好的

1324
01:06:13,303 --> 01:06:15,869
说卡而不是按钮，

1325
01:06:15,938 --> 01:06:18,606
因为我想告诉你如何解决这个错误。

1326
01:06:18,674 --> 01:06:21,609
它的类型是正确的，这将是一个数组

1327
01:06:21,677 --> 01:06:24,979
UI按钮。好吧，我要把它连接到这里

1328
01:06:25,048 --> 01:06:26,947
它在这里为我创造了另一个变种。

1329
01:06:27,016 --> 01:06:31,119
这一个，看看它的类型。看到那里。那是

1330
01:06:31,187 --> 01:06:35,856
Swift中的特殊语法意味着一个UI按钮的数组。

1331
01:06:35,925 --> 01:06:39,393
这可能看起来更熟悉，如果我使用另一个Swift语法，

1332
01:06:39,462 --> 01:06:44,732
用户界面按钮数组，看起来很熟悉

1333
01:06:44,801 --> 01:06:49,537
你来自Java，对吗？所以数组是一个泛型类，每个人

1334
01:06:49,606 --> 01:06:52,806
有希望了解Java中的泛型。代表着

1335
01:06:52,875 --> 01:06:56,577
你不能在Swift中拥有类型数组，

1336
01:06:56,646 --> 01:06:59,814
因为我告诉过你，Swift对类型非常严格。

1337
01:06:59,882 --> 01:07:02,250
所以当你把这些东西放进去，

1338
01:07:02,319 --> 01:07:04,185
斯威夫特会有心脏病发作

1339
01:07:04,254 --> 01:07:06,754
不知道你在那里放什么东西。所以

1340
01:07:06,822 --> 01:07:09,556
当你创建一个数组时，你必须指定什么类型的

1341
01:07:09,625 --> 01:07:13,361
事情是在数组中，让斯威夫特可以轻松地呼吸，好吧。

1342
01:07:13,429 --> 01:07:16,698
现在数组很常见，而不是使用这个

1343
01:07:16,766 --> 01:07:20,134
正常的Swift，这里是正常的Swift语法，但是

1344
01:07:20,203 --> 01:07:23,738
对于数组，我们在这里做这个特殊的事情，在哪里

1345
01:07:23,806 --> 01:07:27,809
我们说[UIButton]。这只是我们这样做的数组，

1346
01:07:27,877 --> 01:07:29,544
字典也有一个特殊的，我会告诉你

1347
01:07:29,612 --> 01:07:32,813
那周三。好的？所以这是我们的数组，

1348
01:07:32,882 --> 01:07:36,417
CardButons是数组，现在我有这个cardButons在这里

1349
01:07:36,486 --> 01:07:39,253
好吧，这是连接到一张卡，我没有放

1350
01:07:39,322 --> 01:07:42,156
在那里的其他卡，但我会。它连接到。

1351
01:07:42,225 --> 01:07:44,425
现在，如果我决定不，我不想Butons，

1352
01:07:44,494 --> 01:07:47,128
我犯了一个错误，它是按钮，记得我告诉过你，

1353
01:07:47,196 --> 01:07:50,898
你不想在这里编辑的东西，然后在用户界面，

1354
01:07:50,967 --> 01:07:53,534
好吧，就像类的名字和类似的东西。

1355
01:07:53,603 --> 01:07:56,871
那么，如果你看看小圆圈发生了什么事情。

1356
01:07:56,940 --> 01:07:59,540
好吧，它不再有点，因为

1357
01:07:59,609 --> 01:08:01,208
它不再连接

1358
01:08:01,277 --> 01:08:04,545
因为这个，如果我右键点击它，它连接到

1359
01:08:04,614 --> 01:08:08,716
卡按钮在那里，好吗？它没有连接到卡片按钮。

1360
01:08:08,785 --> 01:08:12,486
那么，我该如何解决这个问题呢？如果我说这个卡按钮，

1361
01:08:12,555 --> 01:08:14,188
好的，现在又回到了连接状态

1362
01:08:14,257 --> 01:08:17,125
我想改变这一点。这是另一个神奇的按键。

1363
01:08:17,193 --> 01:08:20,161
command键。我们都准备好了给你看

1364
01:08:20,230 --> 01:08:21,195
进入文档。

1365
01:08:21,264 --> 01:08:23,831
如果你点击某个东西，k，

1366
01:08:23,900 --> 01:08:26,600
像这张卡在这里。

1367
01:08:26,669 --> 01:08:29,637
你会在这里得到另一种菜单，会做一些很酷的

1368
01:08:29,705 --> 01:08:31,939
像跳到这个东西的定义的东西，

1369
01:08:32,008 --> 01:08:33,040
这正好在这里

1370
01:08:33,109 --> 01:08:35,043
这不会去任何地方。显示健康，

1371
01:08:35,111 --> 01:08:39,680
就像选项一样，也是重命名和

1372
01:08:39,749 --> 01:08:42,216
当我点击这里重命名，看看会发生什么。

1373
01:08:42,285 --> 01:08:45,620
UI有点儿变了。它看起来通过我的

1374
01:08:45,688 --> 01:08:49,223
整个项目，并发现到处都是cardButons

1375
01:08:49,291 --> 01:08:53,494
包括在我的故事板。看到了吗？所以现在如果我改变

1376
01:08:53,563 --> 01:08:57,665
这在卡按钮这里，它随处可见而改变

1377
01:08:57,734 --> 01:09:01,669
现在，这不是打破。如果我右键点击这个，

1378
01:09:01,738 --> 01:09:05,272
它cardButtons。所以命令点击重命名。这就是你

1379
01:09:05,341 --> 01:09:07,308
想要重命名触及你的用户界面和

1380
01:09:07,377 --> 01:09:11,812
你的代码。对，所以我在这里有这个卡片按钮。现在，

1381
01:09:11,881 --> 01:09:15,716
我需要以某种方式在触摸卡，我需要

1382
01:09:15,785 --> 01:09:19,920
看看我的卡片按钮数组，并找到该按钮。

1383
01:09:19,989 --> 01:09:22,990
好的？顺便说一句，在我们这样做之前，让我把其余的

1384
01:09:23,058 --> 01:09:25,926
这些卡在那里。我将以另一种方式向你展示

1385
01:09:25,995 --> 01:09:28,796
将您的用户界面连接到您的代码。这是黄色的按钮

1386
01:09:28,864 --> 01:09:30,297
就在这儿。你在顶部看到这个黄色的按钮？

1387
01:09:30,366 --> 01:09:34,134
它说视图控制器。这个按钮也代表你的

1388
01:09:34,203 --> 01:09:37,571
代码。所以，如果你想控制从这里拖动，

1389
01:09:37,640 --> 01:09:40,341
你也可以做到这一点，并连接到卡片按钮。

1390
01:09:40,409 --> 01:09:43,277
从这里控制拖动。 CardButtons和我

1391
01:09:43,346 --> 01:09:45,946
故意不会挂钩这张卡因为我会

1392
01:09:46,015 --> 01:09:48,348
告诉你当我们没有链接卡时会发生什么。所以

1393
01:09:48,417 --> 01:09:51,652
看看cardButtons，拿到那三张牌而不是这张，

1394
01:09:51,721 --> 01:09:55,556
对。好的，那么我怎样才能看到cardButtons

1395
01:09:55,625 --> 01:09:59,160
当然，Swift数组是一个很棒的课程。

1396
01:09:59,229 --> 01:10:00,861
它有非常好的功能和

1397
01:10:00,930 --> 01:10:03,698
有一件事它知道该怎么做。看里面和

1398
01:10:03,766 --> 01:10:06,600
告诉你索引是什么东西里面的

1399
01:10:06,669 --> 01:10:09,703
那个方法叫做索引。所以让我们调用

1400
01:10:09,772 --> 01:10:13,674
那个方法，我要创建一个叫card number

1401
01:10:13,743 --> 01:10:16,977
我想成为卡号0,1,2,3,4的号码，无论它在哪里

1402
01:10:17,046 --> 01:10:21,482
在数组中。我要设置等于cardButtons点，

1403
01:10:21,551 --> 01:10:25,419
右键发送留言卡按钮索引。现在有意思，

1404
01:10:25,488 --> 01:10:29,023
看看在数组中有多少个方法被称为索引，

1405
01:10:29,092 --> 01:10:33,360
多种方法。在Swift中，这是完全合法的。迅速，

1406
01:10:33,429 --> 01:10:36,531
你可以有100个方法都具有相同的索引，但他们

1407
01:10:36,599 --> 01:10:39,200
都必须有不同的参数。你看所有的

1408
01:10:39,268 --> 01:10:41,235
这些索引方法有不同的参数？

1409
01:10:41,303 --> 01:10:43,303
好吧，他们得到的东西之后，

1410
01:10:43,372 --> 01:10:44,671
索引之前什么东西。

1411
01:10:44,740 --> 01:10:47,809
我想要这个在这里的东西的索引

1412
01:10:47,877 --> 01:10:51,412
返回一个int，好吧，这将是一个问题int，

1413
01:10:51,481 --> 01:10:53,581
我们会在这里看到，但是

1414
01:10:53,650 --> 01:10:56,884
如果我双击，我已经在这里得到索引。所以，

1415
01:10:56,953 --> 01:10:59,653
我想找到发件人的索引，因为我在点击卡

1416
01:10:59,722 --> 01:11:02,790
在这里，所以这个sender，我只是要打印出来。

1417
01:11:02,859 --> 01:11:05,560
所以我会说卡号等于和

1418
01:11:05,628 --> 01:11:08,196
我们会在这里做我们的魔术，而且

1419
01:11:08,264 --> 01:11:11,231
我们只是打印出card number，好的。

1420
01:11:11,300 --> 01:11:13,734
所以在我们去看数组之前找出情绪，

1421
01:11:13,803 --> 01:11:16,137
让我们确保我们找到合适的卡片

1422
01:11:16,206 --> 01:11:20,041
就在这儿。现在，我在这里得到两个警告。

1423
01:11:20,109 --> 01:11:22,543
嗯，我们来深入看看这些警告。

1424
01:11:22,612 --> 01:11:24,846
让我们的整个屏幕显示这些警告。

1425
01:11:24,914 --> 01:11:28,549
第一个是变量cardNumber从来没有变异。

1426
01:11:28,617 --> 01:11:30,852
考虑改变让不变。

1427
01:11:30,920 --> 01:11:34,489
那是什么意思？确实，cardNumber，

1428
01:11:34,557 --> 01:11:37,758
我们在这里给它看一张卡的初始值

1429
01:11:37,826 --> 01:11:40,461
在卡片按钮属性，但我们再也不会改变它。

1430
01:11:40,530 --> 01:11:45,433
所以它实际上并没有变回。这是一个常数。

1431
01:11:45,501 --> 01:11:49,637
好的，在Swift中，我们总是将常量标记为常量。

1432
01:11:49,706 --> 01:11:52,406
但是我们不像C和C那样使用const

1433
01:11:52,474 --> 01:11:55,475
其他语言，我们用let，L-E-T。

1434
01:11:55,544 --> 01:11:57,978
这是另一件很酷的事情你看到这个小三角？

1435
01:11:58,047 --> 01:12:02,917
如果我点击它，Swift经常会为我修复它。

1436
01:12:02,985 --> 01:12:05,152
你看到它说的地方修复。这是说，

1437
01:12:05,220 --> 01:12:08,622
你想让我把var换成let？像是的，当然，和

1438
01:12:08,691 --> 01:12:12,427
它呢，看？现在为什么我们使用let而不是const？

1439
01:12:12,495 --> 01:12:14,929
因为我们想让Swift像英文一样阅读。

1440
01:12:14,998 --> 01:12:18,199
让cardNumber = cardButtons.index

1441
01:12:18,268 --> 01:12:23,003
发件人，对我来说听起来像是英文，好吧？所以

1442
01:12:23,072 --> 01:12:25,606
这比const cardNumber = 好。

1443
01:12:25,675 --> 01:12:28,709
所以你会习惯使用让，总是使用让时

1444
01:12:28,777 --> 01:12:32,146
东西是一个常数，从来没有使用var，好吗？

1445
01:12:32,215 --> 01:12:35,383
这个其他警告在这里，我会忽略。和

1446
01:12:35,452 --> 01:12:38,051
让我们看看我们运行的时候会发生什么

1447
01:12:38,120 --> 01:12:43,057
所以让我们在我们的模拟器中运行这个人，我们正在忽略

1448
01:12:43,126 --> 01:12:47,728
那不关注那里的黄色警告。

1449
01:12:47,796 --> 01:12:50,431
好的，在这里，让我们点击其中的一些按钮

1450
01:12:50,499 --> 01:12:53,000
走着瞧吧。看，它会打印。

1451
01:12:53,069 --> 01:12:54,668
我们会把这个放在一边，所以你可以看到代码

1452
01:12:54,737 --> 01:12:58,405
与此同时。我们只是要打印出cardNumber

1453
01:12:58,474 --> 01:13:00,041
我们通过查找索引找到了。

1454
01:13:00,109 --> 01:13:05,012
准备好，点击。这有点奇怪，看看，

1455
01:13:05,081 --> 01:13:09,016
Optional(1), Optional(2)，那可选是关于什么的？

1456
01:13:09,084 --> 01:13:11,919
似乎有看到的卡对吗，0，1，2，

1457
01:13:11,988 --> 01:13:15,656
但它是说可选，为什么说可选？好，

1458
01:13:15,725 --> 01:13:19,860
这是我告诉你的超级重要的事情？

1459
01:13:19,929 --> 01:13:24,198
这里是。让我们在这里选择索引，然后

1460
01:13:24,266 --> 01:13:27,868
去看看它的文档。和

1461
01:13:27,937 --> 01:13:31,372
索引的返回值不是int，

1462
01:13:31,441 --> 01:13:35,542
索引的返回值是可选的，

1463
01:13:35,611 --> 01:13:36,944
这就是问号的意思。

1464
01:13:37,012 --> 01:13:39,346
我们已经在文档中看到了所有的问题，

1465
01:13:39,415 --> 01:13:43,050
对？这意味着可选。和可选是不同的

1466
01:13:43,119 --> 01:13:47,388
从int中完全键入。好的，和int无关。

1467
01:13:47,457 --> 01:13:51,859
可选是具有两个且仅有两个状态的类型，

1468
01:13:51,928 --> 01:13:56,998
设置而不是设置。这是一个枚举。

1469
01:13:57,066 --> 01:13:59,634
你可能看过其他语言的枚举，

1470
01:13:59,702 --> 01:14:02,002
枚举是具有谨慎的值的东西。

1471
01:14:02,071 --> 01:14:04,004
这只有两个值，设置和不设置，

1472
01:14:04,073 --> 01:14:07,040
而已。但关于Swift枚举的很酷的东西，

1473
01:14:07,109 --> 01:14:09,176
没有很多其他语言有这个。对于

1474
01:14:09,245 --> 01:14:13,246
每个枚举的情况下都可以有关联的数据，

1475
01:14:13,315 --> 01:14:17,618
只是与该事物相关的数据。那么，一个可选的，

1476
01:14:17,687 --> 01:14:20,454
当它处于设置状态时，具有关联的数据，

1477
01:14:20,523 --> 01:14:24,324
在这种情况下是一个int。所以这个索引方法是

1478
01:14:24,393 --> 01:14:28,162
返回是否可以找到该按钮

1479
01:14:28,231 --> 01:14:32,400
那里通过返回集或没有设置。如果它确实找到它

1480
01:14:32,468 --> 01:14:35,369
它也给你int的相关数据。

1481
01:14:35,437 --> 01:14:38,105
这就是你在这里看到的。这是打印出来的，

1482
01:14:38,174 --> 01:14:41,108
当我们打印cardNumber它说这是一个可选项。

1483
01:14:41,177 --> 01:14:43,878
这是在既定的情况下

1484
01:14:43,946 --> 01:14:48,816
关联的值是一个int。了解？现在，如果我们

1485
01:14:48,884 --> 01:14:51,218
点击不在cardButton的数组中的按钮？

1486
01:14:51,286 --> 01:14:53,687
让我们看看是什么打印，这就是在这里。哎呀，

1487
01:14:53,756 --> 01:14:55,923
我们停下来，让我们回去再运行它。我要点击

1488
01:14:55,992 --> 01:14:57,992
在第四个按钮是一个在cardButton。

1489
01:14:58,060 --> 01:15:00,527
所以当索引查找它不会找到它。

1490
01:15:00,596 --> 01:15:02,096
这将不会返回。

1491
01:15:02,164 --> 01:15:06,434
让我们看看是什么样子？点击nil，N-I-L。所以在

1492
01:15:06,502 --> 01:15:10,771
swift的字nil意味着没有设置的情况下可选。

1493
01:15:10,839 --> 01:15:12,640
这是唯一的意思。在其他语言中，

1494
01:15:12,708 --> 01:15:16,043
它意味着零指针和其他的东西。不，在Swift里

1495
01:15:16,112 --> 01:15:20,414
总是意味着没有设置的可选项。了解？所有

1496
01:15:20,483 --> 01:15:23,184
对，所以这对我来说不是好事，但有一个可选的。

1497
01:15:23,252 --> 01:15:26,520
我不能在另一个表情符号看起来可选，

1498
01:15:26,588 --> 01:15:29,756
我需要int。那我该如何得到相关的值呢？

1499
01:15:29,825 --> 01:15:32,560
设置状态？那么，一个办法就是放

1500
01:15:32,628 --> 01:15:35,429
在它的末尾有一个感叹号。如果你放

1501
01:15:35,497 --> 01:15:37,397
一个可选的结尾感叹号，它说，

1502
01:15:37,466 --> 01:15:41,869
假设这个可选项已设置，并获取关联的值。

1503
01:15:41,937 --> 01:15:46,874
所以让我们看看是什么样的。你会看到的

1504
01:15:46,942 --> 01:15:49,243
这个可选的语法是所有真正简单的问号，

1505
01:15:49,311 --> 01:15:51,512
感叹号，一个字符，因为它是如此

1506
01:15:51,580 --> 01:15:54,047
共同做这些可选项。好，那么

1507
01:15:54,116 --> 01:15:57,184
这里看一下，cardNumber = 0,1,2优，

1508
01:15:57,252 --> 01:15:59,886
它正在工作。如果我按这个，你会怎么想呢？

1509
01:15:59,955 --> 01:16:01,655
一个在这里？ >>崩溃。

1510
01:16:01,724 --> 01:16:03,190
究竟。为什么会崩溃？因为你

1511
01:16:03,191 --> 01:16:04,657
>>崩溃，

1512
01:16:04,727 --> 01:16:07,128
返回一个不处于设置状态的选项，所以我们不这样做

1513
01:16:07,196 --> 01:16:10,064
有相关的值，所以它崩溃了你的程序。

1514
01:16:10,132 --> 01:16:12,432
你会看到这个崩溃相当多，好吧，

1515
01:16:12,501 --> 01:16:15,235
当你发展，因为你会不小心做的

1516
01:16:15,304 --> 01:16:17,872
这相当一段时间。如果你看你的控制台，

1517
01:16:17,941 --> 01:16:19,540
看看它说什么。它在这里说错误，

1518
01:16:19,609 --> 01:16:23,744
意外发现致命错误无，也就是说没有设置

1519
01:16:23,813 --> 01:16:27,414
同时展开一个可选项。习惯那个错误，

1520
01:16:27,483 --> 01:16:30,484
你一直都在看。现在，这可能会让你说，哇，

1521
01:16:30,553 --> 01:16:32,319
我从来没有使用感叹号，

1522
01:16:32,388 --> 01:16:35,355
会让我的节目崩溃，吓人是啊，

1523
01:16:35,424 --> 01:16:38,659
这很可怕，但是你的程序崩溃可能会非常好，

1524
01:16:38,727 --> 01:16:40,694
因为这会让你发现问题。

1525
01:16:40,763 --> 01:16:43,898
就像在这种情况下，第四个按钮应该是在

1526
01:16:43,966 --> 01:16:47,434
卡片按钮这是一个不在卡片按钮中的错误。和

1527
01:16:47,502 --> 01:16:50,070
如果我没有在那里崩溃，我可能找不到那个bug，

1528
01:16:50,139 --> 01:16:51,638
因为我可能没有点击那个，

1529
01:16:51,707 --> 01:16:53,807
我可能没有注意到。这样，我肯定会找到，

1530
01:16:53,876 --> 01:16:56,410
它会崩溃。现在它会崩溃，它会崩溃

1531
01:16:56,479 --> 01:16:58,345
在调试器的权利那里很重要

1532
01:16:58,414 --> 01:17:01,015
我可以看看。所以不要害怕车祸，好吗？

1533
01:17:01,083 --> 01:17:04,084
碰撞可以是好的。但是让我们假设你想这样做

1534
01:17:04,153 --> 01:17:05,786
代码的方式没有崩溃，

1535
01:17:05,855 --> 01:17:08,422
这种有条件地看看是否在

1536
01:17:08,491 --> 01:17:09,223
设置状态。

1537
01:17:09,292 --> 01:17:12,659
如果是的话，那就用它吧，否则就不行。

1538
01:17:12,728 --> 01:17:17,531
要做到这一点，不要把惊叹号放在最后，

1539
01:17:17,600 --> 01:17:21,969
你把它取下来，如果，在开始时，好吗？

1540
01:17:23,572 --> 01:17:28,509
所以现在，如果这个可选的权利在这里是在设置状态

1541
01:17:28,577 --> 01:17:33,113
那么这段代码就会执行，否则不会崩溃。所以

1542
01:17:33,182 --> 01:17:35,382
如果这是有条件的，你可以再次看到，

1543
01:17:35,451 --> 01:17:40,554
可选的最小可能语法

1544
01:17:40,623 --> 01:17:43,290
那么现在，我们可以把这个打印卡号放在这里面，

1545
01:17:43,359 --> 01:17:45,759
如果我们想的话，我们甚至可以放一个别的东西。

1546
01:17:45,828 --> 01:17:49,129
可能像选定的卡片不在卡片按钮，

1547
01:17:49,198 --> 01:17:53,133
或类似的东西，所以我们可以注意到它发生了。

1548
01:17:53,202 --> 01:17:54,701
在这里，我们有条件地这样做，所以

1549
01:17:54,770 --> 01:18:03,744
我们来看看这个我会移动，

1550
01:18:03,813 --> 01:18:07,214
使这个控制台在这里广泛，所以你可以看到发生了什么事情，

1551
01:18:07,282 --> 01:18:10,350
好吧？所以这里这里还在工作cardNumber0,1，

1552
01:18:10,419 --> 01:18:13,553
2因为我正在使用，如果让我们在那里。但现在，

1553
01:18:13,622 --> 01:18:16,323
如果我点击这个坏按钮，它只是说选择的卡是

1554
01:18:16,392 --> 01:18:17,825
不在卡片按钮，对不对？

1555
01:18:17,893 --> 01:18:21,228
它说这个，好吗？所以这是可选的是如何解开

1556
01:18:21,297 --> 01:18:24,498
他们。超级duper重要。真的会有主人这个。

1557
01:18:24,567 --> 01:18:27,801
我知道这对你来说是新的。我们要谈谈

1558
01:18:27,870 --> 01:18:32,273
这些感叹号在这里，我之前提到过。

1559
01:18:32,341 --> 01:18:34,341
这使得你不必初始化你的东西，

1560
01:18:34,410 --> 01:18:36,510
这些也是可选项。他们有点不同

1561
01:18:36,579 --> 01:18:38,979
那种可选因为他们感叹号而已

1562
01:18:39,047 --> 01:18:42,182
问号。还记得这个索引吗？

1563
01:18:42,250 --> 01:18:45,352
好的，这是一个问号。这些是感叹号

1564
01:18:45,421 --> 01:18:47,221
他们有什么不同的选择，但是

1565
01:18:47,290 --> 01:18:49,189
他们仍然是可选的。我们稍后再谈。

1566
01:18:49,258 --> 01:18:51,691
所以我想在这里做的最后一件事就是拿这个

1567
01:18:51,760 --> 01:18:53,460
cardNumber，我得到了，和

1568
01:18:53,529 --> 01:18:56,429
去看一个emojis的数组。所以我只是会去

1569
01:18:56,498 --> 01:19:01,368
做一个变种，我会把它称为表情符号。这将是

1570
01:19:01,437 --> 01:19:04,938
基本上是一串String emoji字符串。

1571
01:19:05,007 --> 01:19:08,676
你可以通过打开来立即创建数组

1572
01:19:08,744 --> 01:19:12,780
方括号，并放入数组中的东西。

1573
01:19:12,848 --> 01:19:16,349
所以我要把我的表情符号放在这里，让我们回到我们的

1574
01:19:16,418 --> 01:19:19,687
表情符号选择器，大概是它在经常使用的。

1575
01:19:19,756 --> 01:19:21,788
在这里，我们去了，有[不可思议的]

1576
01:19:21,857 --> 01:19:24,291
南瓜在那里，我会在这里放一个南瓜。

1577
01:19:24,360 --> 01:19:27,661
我们会把幽灵放在这里，把幽灵放在这里，

1578
01:19:27,729 --> 01:19:30,831
好吧？现在我们已经有了，所以我们要看看

1579
01:19:30,900 --> 01:19:33,166
cardNumber这将是索引0,1,2,3。

1580
01:19:33,235 --> 01:19:36,503
我们要在这里查找当我们在这里让我们来

1581
01:19:36,572 --> 01:19:41,008
继续，并连接最后一个不在的按钮

1582
01:19:41,076 --> 01:19:45,379
cardButtons数组。

1583
01:19:45,448 --> 01:19:48,548
我要从这里再做一次，Ctrl +拖动到下一个

1584
01:19:48,617 --> 01:19:51,685
这里把所有的四个按钮放在那里。回到自动

1585
01:19:51,754 --> 01:19:56,990
在这里，我要做的另一件事是注意到这一点，

1586
01:19:57,059 --> 01:20:02,396
这是必要的吗？不，因为很明显

1587
01:20:02,465 --> 01:20:06,232
这是一个字符串数组。所以如果我选择点击这个，

1588
01:20:06,301 --> 01:20:08,868
在这里emojiChoices，它说的字符串数组。

1589
01:20:08,937 --> 01:20:11,839
所以再次推断。我们永远不会冒这个冒号

1590
01:20:11,907 --> 01:20:16,276
数组字符串，永远不会。完全没有必要。可以，然后呢

1591
01:20:16,345 --> 01:20:19,379
现在让我们说只是在这里打印cardNumber，

1592
01:20:19,448 --> 01:20:23,217
我要打电话给我的翻盖卡。与表情符号和FlipCard

1593
01:20:23,285 --> 01:20:27,921
表情符号就是emojiChoices子cardNumber，

1594
01:20:27,990 --> 01:20:33,727
好吧，它在发件人上。明白了，让我们来运行它。

1595
01:20:43,371 --> 01:20:48,508
好的，我们走吧。南瓜，幽灵。

1596
01:20:48,577 --> 01:20:51,811
所有这些考虑工作。

1597
01:20:51,880 --> 01:20:54,347
现在，我们可能因为得到了而在这里感到自豪

1598
01:20:54,416 --> 01:20:57,117
这个数据驱动架构。真的很棒

1599
01:20:57,186 --> 01:20:59,552
我们现在可以添加更多的按钮。我们可以做20个按钮和

1600
01:20:59,621 --> 01:21:01,388
我们要做的就是给这个数组添加更多的东西。

1601
01:21:01,456 --> 01:21:03,389
但是这其实不是一个很好的架构，

1602
01:21:03,458 --> 01:21:07,260
因为这很脆弱，好吧。这里的表情符号的数量

1603
01:21:07,329 --> 01:21:10,196
必须完全匹配UI中按钮的数量，

1604
01:21:10,265 --> 01:21:12,899
你必须把它们放在那里两次。

1605
01:21:12,968 --> 01:21:14,601
而且他们不是随机的，

1606
01:21:14,669 --> 01:21:17,203
所以牌总是会在同一个地方

1607
01:21:17,272 --> 01:21:18,471
不是一个很好的解决方案。

1608
01:21:18,540 --> 01:21:21,307
所以我们真的需要再走一步

1609
01:21:21,376 --> 01:21:25,345
有一个真正的集中引擎驱动我们的应用程序，这是

1610
01:21:25,414 --> 01:21:29,015
这不仅是所有这一切，而是所有这些匹配和

1611
01:21:29,084 --> 01:21:32,018
所有的东西。现在要做到这一点，我们要使用这个设计

1612
01:21:32,087 --> 01:21:34,587
我刚才谈到了初步的模型视图

1613
01:21:34,656 --> 01:21:38,325
控制器。所以我要开始周三的演讲

1614
01:21:38,393 --> 01:21:40,693
解释模型视图控制器如何工作的幻灯片。

1615
01:21:40,762 --> 01:21:42,562
然后，我们将在这里应用模型视图控制器

1616
01:21:42,631 --> 01:21:45,765
你会看到哇，这是一个更好的方式，做到这一点。

1617
01:21:45,834 --> 01:21:46,933
更灵活和

1618
01:21:47,002 --> 01:21:51,838
可扩展的容易添加卡不会崩溃的一切。所以

1619
01:21:51,907 --> 01:21:53,907
我星期三见。 >>对于

1620
01:21:53,976 --> 01:22:03,383
更多，请访问我们在standford.edu。

