1
00:00:00,401 --> 00:00:04,736
[音乐]

2
00:00:04,805 --> 00:00:09,374
>>斯坦福大学。 >>嘿，好吧，

3
00:00:09,443 --> 00:00:14,012
欢迎参加第7讲，斯坦福大学CS193P，2017年秋季。所以

4
00:00:14,080 --> 00:00:19,351
我们今天的主要话题是结合MVC做出更大，

5
00:00:19,420 --> 00:00:22,153
显然，更强大的应用程序。和

6
00:00:22,222 --> 00:00:24,890
那么我会做一个大演示，告诉你如何做到这一点。

7
00:00:24,959 --> 00:00:27,559
我们要用浓度来做，我们会补充

8
00:00:27,627 --> 00:00:30,929
一个MVC到那个应用程序。然后我会回到幻灯片，

9
00:00:30,998 --> 00:00:33,865
并谈谈我会讲计时器和选择课程，你们中的一些人

10
00:00:33,934 --> 00:00:37,169
用于家庭作业的额外功劳。和

11
00:00:37,237 --> 00:00:39,004
那么我会深入下一个主题并尝试

12
00:00:39,073 --> 00:00:41,373
尽我所能，这是动画。

13
00:00:41,442 --> 00:00:43,275
这将是我们周三的主题

14
00:00:43,343 --> 00:00:45,376
我会得到更多的细节，做一个大的演示。

15
00:00:45,445 --> 00:00:47,512
但我希望今天能够尽可能地进入

16
00:00:47,581 --> 00:00:50,916
我们有更多时间在周三进行演示。

17
00:00:50,984 --> 00:00:54,486
好吧，结合MVC，记得从什么时候开始

18
00:00:54,555 --> 00:00:58,190
我谈到了MVC。这是MVC一起工作，并且

19
00:00:58,259 --> 00:01:01,193
我们看到，当我们有MVC一起工作时，

20
00:01:01,261 --> 00:01:04,862
这些其他MVC。让我在这里控制我的东西，

21
00:01:04,931 --> 00:01:08,967
好吧，不能这样做。好的，这些其他的MVC在角落里，

22
00:01:09,036 --> 00:01:12,170
他们作为另一个MVC视图的一部分。那是

23
00:01:12,239 --> 00:01:16,608
MVC的关联方式。 MVC是一个视图，是视图的一部分

24
00:01:16,677 --> 00:01:19,811
另一类。这对MVC有一些影响，

25
00:01:19,880 --> 00:01:22,781
最值得注意的是它必须有盲目的结构化沟通

26
00:01:22,849 --> 00:01:26,618
回到其他MVC。但这就是我们的方式

27
00:01:26,687 --> 00:01:29,154
结构化，并保持一切包容和

28
00:01:29,222 --> 00:01:32,523
可以理解的。所以我们要谈谈我们如何做到这一点，

29
00:01:32,592 --> 00:01:36,595
我们如何制作其他MVC视图的MVC。所以，

30
00:01:36,663 --> 00:01:40,065
结合MVC我们使用一些特殊功能来做到这一点

31
00:01:40,133 --> 00:01:44,569
iOS提供的控制器的视图是其他MVC。

32
00:01:44,638 --> 00:01:48,339
现在你可以编写你自己的特殊的MVC，它的视图是

33
00:01:48,408 --> 00:01:52,544
其他MVC。但99％的时间你会使用其中一个

34
00:01:52,612 --> 00:01:55,980
iOS提供的三个。和那三个iOS

35
00:01:56,049 --> 00:01:59,418
提供了TabBarController，SplitViewController和

36
00:01:59,486 --> 00:02:02,520
导航控制器。现在还有其他方法可以

37
00:02:02,589 --> 00:02:05,157
结合我们将在本季度晚些时候讨论的MVC，但是

38
00:02:05,225 --> 00:02:07,859
这是我们要用这些做的主要方式

39
00:02:07,928 --> 00:02:11,229
三个MVC的。这三个，TabBar，SplitView和

40
00:02:11,298 --> 00:02:15,567
NavigationController，它们是MVC的控制器。所以

41
00:02:15,636 --> 00:02:17,002
让我们一个一个地看看他们。

42
00:02:17,070 --> 00:02:18,870
TabBar是迄今为止最简单的一种，

43
00:02:18,939 --> 00:02:22,240
你已经看过这一百万次了，它已经有了

44
00:02:22,309 --> 00:02:24,475
沿着底部的一些标签。你看到这些标签，

45
00:02:24,544 --> 00:02:27,179
像一个小橙色的东西，灰色的一个在旁边。和

46
00:02:27,247 --> 00:02:31,049
当你按下这些标签时，每个标签都会显示另一个MVC。

47
00:02:31,117 --> 00:02:34,519
所以你可以看到TabBarController的视图

48
00:02:34,588 --> 00:02:39,257
包括底部的按钮和另一个MVC。所以

49
00:02:39,326 --> 00:02:42,227
这就是我们所说的这个标签栏的意思

50
00:02:42,295 --> 00:02:46,498
控制器MVC提供了另一个MVC。和图标和

51
00:02:46,567 --> 00:02:48,566
在TabBar中出现的标题，

52
00:02:48,635 --> 00:02:51,570
这是由MVC展示的。

53
00:02:51,638 --> 00:02:55,240
在特定的UI视图控制器中有这个栏的TabBar项目。

54
00:02:55,308 --> 00:02:58,709
和TabBar控制器，当它显示MVC的一部分

55
00:02:58,778 --> 00:03:02,280
它的观点是，它看起来如此，所以它知道什么是标题和

56
00:03:02,349 --> 00:03:05,917
图标显示在那里的底部。这非常非常

57
00:03:05,986 --> 00:03:10,722
面向对象的意义。所以，例如，我们已经有了

58
00:03:10,791 --> 00:03:13,658
这里有一些以健康为导向的API

59
00:03:13,727 --> 00:03:16,961
我们在底部有四个标签。顺便说一句，如果有的话

60
00:03:17,030 --> 00:03:21,300
超过四个标签，超过四个MVC，可以表明，

61
00:03:21,368 --> 00:03:24,469
实际上，它会显示五个。如果他们是六个，那么

62
00:03:24,538 --> 00:03:27,439
第五个变得更多一点按钮，你点击它。

63
00:03:27,508 --> 00:03:31,243
而iOS提供了一个API或UI，而供用户挑选

64
00:03:31,311 --> 00:03:33,044
他们希望哪些标签在底部，或者

65
00:03:33,113 --> 00:03:35,480
选择其他没有显示的标签。一般而言，

66
00:03:35,549 --> 00:03:39,384
我们建议在TabBarController中不要超过五个MVC。

67
00:03:39,452 --> 00:03:41,720
这只是相当不错的用户界面，

68
00:03:41,789 --> 00:03:43,154
它开始变得有点复杂

69
00:03:43,223 --> 00:03:46,291
用户如果不止于此。所以，在这种情况下，

70
00:03:46,360 --> 00:03:50,395
这整个事情是五个MVC，TabBarController本身，

71
00:03:50,463 --> 00:03:53,131
和四个MVC作为它的视图和看法

72
00:03:53,200 --> 00:03:55,934
您只需通过点击在它们之间切换。

73
00:03:56,002 --> 00:04:00,805
所以这是迄今为止MVC中最简单的MVC，

74
00:04:00,874 --> 00:04:04,008
好吧？接下来，我们来谈谈SplitViewController，

75
00:04:04,077 --> 00:04:06,911
可能是第二个最简单的。它只有两个MVC

76
00:04:06,980 --> 00:04:10,348
视图，它将它们并排放在一条非常细的线中

77
00:04:10,417 --> 00:04:13,751
它们之间。所以，这里有一个小计算器应用程序，

78
00:04:13,820 --> 00:04:16,454
它有左边的计算器，然后有可能

79
00:04:16,523 --> 00:04:19,790
右侧计算器中的内容图。和

80
00:04:19,859 --> 00:04:23,628
我们把这个MVC称为左边，它通常比较小

81
00:04:23,697 --> 00:04:27,132
像这样，SplitViewController中的Master，和

82
00:04:27,200 --> 00:04:30,134
我们称右侧为Detail。和

83
00:04:30,203 --> 00:04:32,471
我们称他们为主要细节，因为通常你在这个项目上做的是什么

84
00:04:32,539 --> 00:04:34,672
在左边会影响右边发生的事情。它的

85
00:04:34,741 --> 00:04:37,942
主人，细节有点像仆从。和，

86
00:04:38,011 --> 00:04:42,614
当然，这是在iPad上。它也适用于iPhone Pluses，

87
00:04:42,682 --> 00:04:47,084
但非加iPhone。这个小小的并行机制。

88
00:04:47,153 --> 00:04:48,486
当然，你可以旋转你的iPad。

89
00:04:48,555 --> 00:04:51,089
现在，当你将iPad旋转成肖像时

90
00:04:51,157 --> 00:04:55,026
它只会显示细节，除了可以滑出

91
00:04:55,094 --> 00:04:57,528
用你的手指从左边看到主人，

92
00:04:57,597 --> 00:05:01,899
然后将其滑回。现在，在iPhone Plus的肖像中，

93
00:05:01,968 --> 00:05:04,403
它就像一个普通的iPhone，它没有滑出。

94
00:05:04,471 --> 00:05:06,904
即使iPhone Plus还不够宽

95
00:05:06,973 --> 00:05:11,810
把那东西拉出来。所以，SplitViewController，超级，

96
00:05:11,878 --> 00:05:14,646
超级简单。然后是NavigationController。

97
00:05:14,715 --> 00:05:17,282
这可能是最灵活，最强大的

98
00:05:17,350 --> 00:05:20,652
MVC的MVC，你已经在IOS中看到过这一百万次

99
00:05:20,720 --> 00:05:23,855
应用。你可以想到一个NavigationController MVC，

100
00:05:23,924 --> 00:05:28,025
作为一副牌。而每张卡片都是MVC。还有什么

101
00:05:28,094 --> 00:05:31,829
导航控制器所做的就是让你把MVC放在最前面，

102
00:05:31,898 --> 00:05:34,499
遮蔽下面的所有内容。然后，如果你击中了后面

103
00:05:34,568 --> 00:05:37,201
按钮，它会抛出一个，并向您显示一个

104
00:05:37,270 --> 00:05:39,337
那是之前那里。你可以继续往前走

105
00:05:39,406 --> 00:05:40,871
它不断显示顶部的卡片，并且

106
00:05:40,940 --> 00:05:44,009
你重新放回新卡。所以它就像一个卡堆栈，在那里

107
00:05:44,077 --> 00:05:48,512
该堆栈是MVC。你可以看到导航

108
00:05:48,581 --> 00:05:51,583
控制器作为它的视图的一部分，它确实吸引了一些

109
00:05:51,652 --> 00:05:54,319
位。在顶部它在那里画了一个小标题，对吧？

110
00:05:54,388 --> 00:05:57,155
设置，好吧，这不是MVC的一部分

111
00:05:57,224 --> 00:06:00,458
显示在那里。但是那个标题的内容

112
00:06:00,527 --> 00:06:03,562
由堆栈顶部的任何MVC驱动，

113
00:06:03,630 --> 00:06:06,965
展示的那个。所以这就是所谓的设置

114
00:06:07,034 --> 00:06:09,734
因为那里的MVC是设置MVC，所以

115
00:06:09,803 --> 00:06:13,605
它正在被那里的东西驱动。而每个MVC，

116
00:06:13,674 --> 00:06:16,708
与标签栏项目和标签栏控制器类似，

117
00:06:16,776 --> 00:06:21,012
UI控制器中有一个名为navigationItem的变量。和

118
00:06:21,081 --> 00:06:24,649
其中包含诸如标题和其他按钮之类的内容

119
00:06:24,717 --> 00:06:27,252
你可以放在标题栏，各种东西。

120
00:06:27,320 --> 00:06:28,953
你会想看看文档

121
00:06:29,022 --> 00:06:29,754
navigationItem和

122
00:06:29,823 --> 00:06:32,657
看看导航控制器可以做什么样的事情

123
00:06:32,725 --> 00:06:37,596
当你的MVC位于堆栈顶端时为你做。所以

124
00:06:37,664 --> 00:06:40,732
如果我再点击一下，这里是一个表格视图，

125
00:06:40,800 --> 00:06:44,001
我们将在下周或后一周讨论表格视图。

126
00:06:44,070 --> 00:06:47,639
如果我点击这里的东西，然后一个新的MVC滑入，

127
00:06:47,708 --> 00:06:52,477
动画在上面。现在这个堆栈上有两张牌。

128
00:06:52,546 --> 00:06:54,179
所有现在落后的设置，

129
00:06:54,247 --> 00:06:57,715
我们无法看到它，现在这个新的顶部当然。

130
00:06:57,784 --> 00:06:59,618
顺便说一下，你也可以有工具栏

131
00:06:59,686 --> 00:07:02,353
使用工具栏项目栏的底部项目

132
00:07:02,422 --> 00:07:04,288
控制器，所以我们两件物品会来

133
00:07:04,357 --> 00:07:07,626
随着新的进入堆栈。但

134
00:07:07,694 --> 00:07:09,961
还注意到，当我们在那里有两件事情时，

135
00:07:10,030 --> 00:07:11,863
左上方出现一个小后退按钮，

136
00:07:11,932 --> 00:07:15,600
自动。它甚至有一个名字

137
00:07:15,668 --> 00:07:18,903
降低一堆卡片。如果你按下，

138
00:07:18,972 --> 00:07:20,805
当然它会扔掉这张牌，并且

139
00:07:20,873 --> 00:07:23,842
我们会回到另一张卡片。但让我想象我点击

140
00:07:23,910 --> 00:07:25,409
在这个像这样的东西上

141
00:07:25,478 --> 00:07:27,679
无障碍的东西它在那里放一张新卡，

142
00:07:27,747 --> 00:07:30,781
那就是辅助卡。也许我点击了一些东西

143
00:07:30,850 --> 00:07:33,718
可访问性卡片内部像大文本一样，并放入

144
00:07:33,786 --> 00:07:37,388
另一个。现在我们在堆栈上有四个MVC。

145
00:07:37,457 --> 00:07:39,156
所以这里总共有五个MVC。

146
00:07:39,225 --> 00:07:41,926
导航控制器本身是一个MVC，并且

147
00:07:41,995 --> 00:07:46,197
这四个MVC是其视图的一部分。当然我们

148
00:07:46,266 --> 00:07:48,333
知道我们可以备份，如果我们按下后退按钮

149
00:07:48,401 --> 00:07:50,902
它抛出那个按钮，它实际上抛出

150
00:07:50,971 --> 00:07:53,237
卡走了。将其从堆中抛出。

151
00:07:53,306 --> 00:07:55,773
所以它完全扔掉了，现在这张卡被扔了

152
00:07:55,842 --> 00:07:58,242
我们现在只是看到底下的卡片

153
00:07:58,311 --> 00:08:01,212
直到我们一路走到后面，直到开始和结束

154
00:08:01,281 --> 00:08:03,180
现在我们看到了根卡，即根

155
00:08:03,249 --> 00:08:06,150
视图控制器，这被称为导航控制器。

156
00:08:06,219 --> 00:08:08,385
好，大家都知道navigationController，

157
00:08:08,454 --> 00:08:09,787
你在任何地方都能看到它。

158
00:08:09,856 --> 00:08:12,089
以下是导航控制器的工作原理

159
00:08:12,158 --> 00:08:15,527
从MVC的角度来看它的场景。

160
00:08:15,596 --> 00:08:18,462
假设我有一个显示在那里的MVC，

161
00:08:18,531 --> 00:08:21,198
而且我有更多的API或更多的用户界面，超出了我的能力

162
00:08:21,267 --> 00:08:25,369
我的屏幕，所以我需要去另一个屏幕做更多的用户界面。

163
00:08:25,438 --> 00:08:27,905
这就是那个角落里的小东西。那么，去

164
00:08:27,974 --> 00:08:31,142
这样做，我不得不做另一个MVC，将控制该用户界面。

165
00:08:31,210 --> 00:08:34,078
然后当我做我的navigationController

166
00:08:34,147 --> 00:08:37,015
让他们分享屏幕，导航控制器来

167
00:08:37,083 --> 00:08:39,684
这是它的UI看起来像。但尽快

168
00:08:39,752 --> 00:08:42,587
当你在navigationController中设置一个非常重要的变量时，

169
00:08:42,656 --> 00:08:45,690
称它为rootViewController是一些MVC，

170
00:08:45,759 --> 00:08:51,162
那么现在它的观点就包含了MVC的视图。和

171
00:08:51,231 --> 00:08:54,298
那么，如果你与某个按钮或者交互

172
00:08:54,367 --> 00:08:56,534
MVC认为，

173
00:08:56,603 --> 00:09:00,472
它可以移动到这个其他MVC，将它推入堆栈。

174
00:09:00,540 --> 00:09:02,173
现在另一个MVC仍然存在，这只是一种

175
00:09:02,242 --> 00:09:05,644
因为它在堆栈中较低，并且在后面

176
00:09:05,712 --> 00:09:07,378
按钮会自动出现，就像我们看到的

177
00:09:07,447 --> 00:09:10,882
当我们点击这个回来时，我们回到另一个，

178
00:09:10,951 --> 00:09:14,285
并注意到我们最初添加的MVC

179
00:09:14,354 --> 00:09:17,522
在那里消失了。所以理解这一点非常重要

180
00:09:17,591 --> 00:09:19,056
当我们使用navigationController时，

181
00:09:19,125 --> 00:09:21,392
通常当我们把事情放在一边时，我们正在创造一个新的和

182
00:09:21,461 --> 00:09:23,461
当我们把东西拿走的时候，我们把它扔掉了。

183
00:09:23,530 --> 00:09:27,164
这是navigationController的正常操作。它

184
00:09:27,233 --> 00:09:30,669
可以用其他方式使用，但这是正常操作。

185
00:09:31,971 --> 00:09:36,341
好的，这些是MVC的三种MVC。

186
00:09:36,409 --> 00:09:40,444
你如何看待他们？好的，这其实很简单。

187
00:09:40,513 --> 00:09:44,015
这三种不同类型的MVC中的每一种都有一个var

188
00:09:44,084 --> 00:09:46,951
viewControllers，它只是一个视图控制器的数组。所以

189
00:09:47,020 --> 00:09:49,854
对于标签栏，它只是视图控制器的一个，两个，

190
00:09:49,923 --> 00:09:52,089
三，四个为了我想从左到右，

191
00:09:52,158 --> 00:09:54,426
标签。如果它是一个分割视图控制器，

192
00:09:54,494 --> 00:09:57,128
然后视图控制器sub 0是主和

193
00:09:57,197 --> 00:09:59,697
视图控制器子1是细节。

194
00:09:59,766 --> 00:10:01,632
或者有时我们说阵列中的第一件事是

195
00:10:01,701 --> 00:10:04,469
主数组和数组中的最后一个东西就是细节。

196
00:10:04,538 --> 00:10:06,170
如果它是一个导航控制器，那么

197
00:10:06,239 --> 00:10:08,806
viewController sub 0是rootViewController和所有的

198
00:10:08,875 --> 00:10:12,744
这些插在顶部的卡片是其他viewController

199
00:10:12,812 --> 00:10:15,079
在数组中按顺序排列。所以你就是这样得到的

200
00:10:15,147 --> 00:10:18,449
处于MVC的MVC之一中的viewControllers。

201
00:10:18,518 --> 00:10:22,020
现在，你如何看待MVC本身的MVC？

202
00:10:22,088 --> 00:10:23,354
你如何到达navigationController，

203
00:10:23,422 --> 00:10:24,756
splitViewController，什么？

204
00:10:24,825 --> 00:10:27,058
那么在UI视图控制器中有三个令人敬畏的变量

205
00:10:27,127 --> 00:10:29,460
称为tabBarController，splitViewController和

206
00:10:29,528 --> 00:10:31,962
navigationController。他们会告诉你tabBar

207
00:10:32,031 --> 00:10:34,632
你正在使用的控制器，或者你正在使用的splitViewController

208
00:10:34,701 --> 00:10:37,401
in或您所在的navigationController中。它可能会更多

209
00:10:37,470 --> 00:10:40,037
比一个，因为你可能在一个navigationController

210
00:10:40,106 --> 00:10:42,373
作为splitViewController中的主人。

211
00:10:42,441 --> 00:10:44,642
这甚至可能在标签栏控制器的选项卡中，所以

212
00:10:44,710 --> 00:10:47,045
你可能会参与所有这三件事情，而且这将是

213
00:10:47,113 --> 00:10:50,214
回报你所在的地方。这样你就可以得到

214
00:10:50,283 --> 00:10:55,153
在其他任何参与的MVC中

215
00:10:55,221 --> 00:10:58,723
您拥有的MVC组合。所以它非常好

216
00:11:00,193 --> 00:11:04,895
对事物的访问。现在navigationController，

217
00:11:04,964 --> 00:11:07,064
我想简单地告诉你关于API的信息

218
00:11:07,133 --> 00:11:09,200
它，它有一个方法pushViewController和

219
00:11:09,268 --> 00:11:11,636
popViewController，都可以动画。和

220
00:11:11,705 --> 00:11:14,973
这需要一个MVC并将它放在你的汽车或者堆栈上

221
00:11:15,041 --> 00:11:17,908
popViewController弹出最上面的一个。好的，

222
00:11:17,977 --> 00:11:20,444
所以你可以做推挤和弹出，但我们通常不会

223
00:11:20,513 --> 00:11:23,447
这样做。我们通常使用什么叫segues哪些

224
00:11:23,516 --> 00:11:25,884
我会在这里谈一谈。

225
00:11:26,886 --> 00:11:27,751
好的，所以

226
00:11:27,820 --> 00:11:30,488
我们如何将所有这些东西连接到故事板上？

227
00:11:30,557 --> 00:11:32,723
好的，我们如何获得这些导航控制器，以及

228
00:11:32,792 --> 00:11:33,791
splitViewControllers和

229
00:11:33,860 --> 00:11:36,594
tabBarControllers都与我们的MVC相连接？好吧，好吧

230
00:11:36,662 --> 00:11:39,964
当然我们用Ctrl在界面字段中拖动，

231
00:11:40,033 --> 00:11:42,333
我们用Ctrl拖动一切，对吧？约束，

232
00:11:42,401 --> 00:11:45,336
outlets，动作，所有这些东西与Ctrl拖动，和

233
00:11:45,405 --> 00:11:47,605
我们也使用Ctrl拖动来做到这一点。所以

234
00:11:47,673 --> 00:11:50,208
我们来看一个splitViewController的例子。

235
00:11:50,277 --> 00:11:52,076
如果我想有几个MVC和

236
00:11:52,145 --> 00:11:53,344
设置他们为主人和

237
00:11:53,412 --> 00:11:55,279
splitViewController中的细节，

238
00:11:55,348 --> 00:11:57,748
我只是从中拖出一个splitViewController

239
00:11:57,817 --> 00:11:59,249
同一个地方，我得到一个按钮或

240
00:11:59,318 --> 00:12:02,954
一些东西。顺便说一下，它会附带一些额外的VC，

241
00:12:03,023 --> 00:12:05,990
视图控制器是一种，它带有乐趣或

242
00:12:06,058 --> 00:12:08,827
免费。我不确定它为什么这样做。我们通常差不多

243
00:12:08,895 --> 00:12:12,463
总是只删除它们。然后我们按Ctrl拖动

244
00:12:12,531 --> 00:12:15,666
splitViewController给我们的主人，我们控制拖动

245
00:12:15,735 --> 00:12:18,702
到我们的细节。与tabBarController相同的东西，我们拖动它

246
00:12:18,771 --> 00:12:21,840
然后我们只需Ctrl拖动到那里的每个MVC。

247
00:12:21,908 --> 00:12:23,807
NavigationController有点不同

248
00:12:23,876 --> 00:12:25,043
我会在一会儿告诉你。

249
00:12:25,111 --> 00:12:27,212
所以这就是它在界面中大致看起来的样子

250
00:12:27,280 --> 00:12:29,714
建筑师，这里是计算器了。我拖出去了

251
00:12:29,783 --> 00:12:32,716
在左侧有一个splitViewController，我只是按住Ctrl拖动

252
00:12:32,785 --> 00:12:35,486
给主人。我从中选择Master View Controller

253
00:12:35,555 --> 00:12:38,288
弹出。我把Ctrl拖到另一个，

254
00:12:38,357 --> 00:12:42,326
我选择细节，巴姆，我有一个有线splitViewController

255
00:12:42,395 --> 00:12:47,865
在那里。不能更简单。现在是分割视图

256
00:12:47,934 --> 00:12:51,368
真的只能在iPad上完全做到这一点。

257
00:12:51,437 --> 00:12:54,272
因为没有足够的屏幕真实

258
00:12:54,340 --> 00:12:57,308
在其他设备上的地产，以真正做到这一方

259
00:12:57,376 --> 00:12:59,843
侧面的东西，特别是人像模式滑出来的东西，

260
00:12:59,912 --> 00:13:04,582
那里没有足够的空间。所以我们经常这样做

261
00:13:04,651 --> 00:13:07,752
在导航控制器中包装主。

262
00:13:07,821 --> 00:13:10,822
当我们这样做时，系统可以显示它

263
00:13:10,890 --> 00:13:13,557
在iPhone上的navigationController中，以及

264
00:13:13,626 --> 00:13:15,459
在iPad上的splitViewController中。

265
00:13:15,528 --> 00:13:18,262
它会自动适应，这就是我们所用的词

266
00:13:18,331 --> 00:13:20,431
描述它对它所处的环境。

267
00:13:20,500 --> 00:13:23,735
因此，这使我们很容易构建可以工作的UI

268
00:13:23,803 --> 00:13:26,770
双方。他们在iPad上工作，他们在iPhone上工作。

269
00:13:26,839 --> 00:13:29,440
好吧，同样的故事板。所以这就是这个样子

270
00:13:29,509 --> 00:13:31,842
像，这是我的主人和我的分裂视图

271
00:13:31,911 --> 00:13:34,411
我在那里的细节，我们看着主人。和

272
00:13:34,480 --> 00:13:36,547
我正在选择它，然后我要去菜单和

273
00:13:36,616 --> 00:13:39,016
我在说编辑器嵌入在navigationController中。

274
00:13:39,085 --> 00:13:41,586
因此，不要将navigationController拖出，

275
00:13:41,655 --> 00:13:42,920
我可以做的方式和

276
00:13:42,989 --> 00:13:45,556
只需按住Ctrl键拖动它们，而不是将其拖出

277
00:13:45,624 --> 00:13:48,126
实际上可以在navigationController中嵌入。

278
00:13:48,194 --> 00:13:51,796
它会插入一个navigationController MVC

279
00:13:51,865 --> 00:13:55,132
作为主人，让我以前的事情

280
00:13:55,201 --> 00:13:57,134
主人是它的rootViewController。

281
00:13:57,203 --> 00:14:00,070
所以，现在我有一个导航控制器

282
00:14:00,139 --> 00:14:03,975
环绕着我的分割视图的主人。好的，这也是

283
00:14:04,044 --> 00:14:07,077
有一个很好的好处，它会给你的主人一个标题，

284
00:14:07,146 --> 00:14:10,114
这通常是很好的拥有你的主人的头衔

285
00:14:10,183 --> 00:14:13,517
你的分割视图。现在你可以 - 有一件事要注意这一点

286
00:14:13,586 --> 00:14:16,420
当然，现在你的分裂视图的主人是

287
00:14:16,489 --> 00:14:19,757
不再是计算器，它是一个导航控制器。

288
00:14:19,826 --> 00:14:21,492
所以如果你真的想离开计算器，

289
00:14:21,561 --> 00:14:23,394
你必须得到主人和

290
00:14:23,463 --> 00:14:27,465
然后看看master的rootViewController来查找

291
00:14:27,533 --> 00:14:29,901
那里的计算器。

292
00:14:29,969 --> 00:14:32,469
顺便说一句，你也可以把细节放进去

293
00:14:32,538 --> 00:14:34,839
一个navigationController。你永远唯一的理由

294
00:14:34,908 --> 00:14:37,908
想要做的就是给它一个标题栏，因为你没有，

295
00:14:37,977 --> 00:14:40,445
你总是从主导航，这就是为什么它被称为

296
00:14:40,513 --> 00:14:43,313
大师。所以你可以做到这一点，但如果你这样做，

297
00:14:43,382 --> 00:14:45,716
确保当你看到细节时，如果你发现

298
00:14:45,784 --> 00:14:48,652
它是一个导航控制器，你需要看看里面和

299
00:14:48,721 --> 00:14:51,488
看看它里面的东西，rootViewController。

300
00:14:51,557 --> 00:14:53,223
或者你也可以使用visibleViewController

301
00:14:53,292 --> 00:14:54,392
在navigationController上，

302
00:14:54,461 --> 00:14:56,260
这会告诉你在顶部的卡，

303
00:14:56,329 --> 00:15:00,331
这是可见的。好的，这就是我们如何连线分裂

304
00:15:00,400 --> 00:15:04,034
将navigationControllers一起查看。我们如何做到这一点

305
00:15:04,103 --> 00:15:07,905
当我们点击它引起的视图中的某个东西时

306
00:15:07,974 --> 00:15:12,043
有些卡可以滑动，或者它会导致我们拆分的细节

307
00:15:12,111 --> 00:15:14,379
视图改变，对吧？我们正在做计算器，

308
00:15:14,447 --> 00:15:17,281
我们输入一些等式，我们按下图形按钮。

309
00:15:17,350 --> 00:15:21,118
那么在iPhone中，我们想要在前面滑动一个图形，

310
00:15:21,187 --> 00:15:24,254
在堆栈上。而在iPad上，我们想要替换细节

311
00:15:24,323 --> 00:15:26,757
查看我当前计算器中的内容。

312
00:15:26,826 --> 00:15:29,293
那么我们该怎么做？我们用所谓的

313
00:15:29,362 --> 00:15:34,265
segues。 Segue只是一个全新的MVC，

314
00:15:34,334 --> 00:15:37,067
总是一个新的MVC，我会说三个或三个

315
00:15:37,136 --> 00:15:39,704
四次，让沉浸在。总是一个新的MVC，

316
00:15:39,772 --> 00:15:42,306
它使它成为堆栈的顶部或

317
00:15:42,375 --> 00:15:45,910
把它放在splitViewController的右侧。

318
00:15:45,978 --> 00:15:47,912
所以这里是存在的种类。

319
00:15:47,981 --> 00:15:50,581
有一个Show Segue，就是那种有效的segue

320
00:15:50,650 --> 00:15:51,982
在navigationController中。

321
00:15:52,051 --> 00:15:54,418
好的，这会导致新的MVC成为现实

322
00:15:54,487 --> 00:15:57,254
如果您不在导航中，请放在堆叠顶部

323
00:15:57,323 --> 00:16:00,024
控制器你可能不应该做Show Segue。

324
00:16:00,092 --> 00:16:04,828
然后显示细节，在分割视图中工作。所以

325
00:16:04,897 --> 00:16:08,866
显示细节将取代分割视图的右侧。

326
00:16:08,935 --> 00:16:10,201
然后是Modal和Popover，

327
00:16:10,270 --> 00:16:11,869
我将在本季度晚些时候讨论这个问题。

328
00:16:11,937 --> 00:16:15,773
modal接管了整个屏幕。所以忘了任何

329
00:16:15,842 --> 00:16:17,575
导航控制器或分割视图控制器，或

330
00:16:17,643 --> 00:16:19,777
标签视图控制器。它占据了整个屏幕和

331
00:16:19,846 --> 00:16:22,112
只是用MVC填充屏幕。

332
00:16:22,181 --> 00:16:24,748
我们通常会尽量避免使用Modal，因为它提供了

333
00:16:24,817 --> 00:16:27,518
在这种只有MVC的卡住状态下的应用程序

334
00:16:27,587 --> 00:16:30,488
你已经接管了屏幕，并且处于活动状态，

335
00:16:30,556 --> 00:16:32,190
可能会让用户感到不安，但是

336
00:16:32,258 --> 00:16:34,525
有时候我们希望事情成为Modal。和

337
00:16:34,594 --> 00:16:37,328
然后Popover Segue有点像Modal segue但是

338
00:16:37,397 --> 00:16:38,562
而不是接管整个屏幕，

339
00:16:38,631 --> 00:16:40,264
它只是把它放在一个小popover。

340
00:16:40,332 --> 00:16:42,366
尤其在iPad上你已经看到了这一点。但

341
00:16:42,434 --> 00:16:45,636
它仍然是模态的，因为背景变灰了

342
00:16:45,705 --> 00:16:46,671
你不能与它互动，

343
00:16:46,739 --> 00:16:48,473
你只能做popover中的东西。所以

344
00:16:48,541 --> 00:16:50,074
我们将在本季度晚些时候讨论这些问题。

345
00:16:50,142 --> 00:16:53,644
今天我只想谈谈节目和展示细节。所以

346
00:16:53,712 --> 00:16:57,014
这是红色的。

347
00:16:57,083 --> 00:17:01,285
我只是再强调一下，segues总是创造一个新的

348
00:17:01,353 --> 00:17:05,590
MVC的实例。 Segues总是创建一个新实例

349
00:17:05,658 --> 00:17:08,091
的MVC。这是重要的理解。你不是

350
00:17:08,160 --> 00:17:11,395
会重新使用你之前在屏幕上的一些MVC。和

351
00:17:11,464 --> 00:17:14,231
我们将在今天的演示中展示如果我们能做些什么

352
00:17:14,300 --> 00:17:18,869
我们确实希望重新使用MVC。顺便说一句，后面

353
00:17:18,938 --> 00:17:21,505
导航控制器中的按钮不是一个segue。

354
00:17:21,574 --> 00:17:22,807
这只是导航控制器的一部分，

355
00:17:22,875 --> 00:17:25,442
所以当你回去时你不会创建一个新的MVC。你是

356
00:17:25,511 --> 00:17:27,945
回到下面的堆栈中。

357
00:17:29,515 --> 00:17:31,081
好，那么我们如何让这些赛段发生？

358
00:17:31,150 --> 00:17:33,684
按Ctrl键。我们按住Ctrl键拖动一切。

359
00:17:33,753 --> 00:17:35,286
它也可以在代码中完成，并且

360
00:17:35,355 --> 00:17:37,921
我会告诉你如何在演示中做到这一点。

361
00:17:37,990 --> 00:17:40,457
所以，如果我有这个计算器的例子。这是我的分割视图

362
00:17:40,526 --> 00:17:42,760
与主人周围的导航控制器，以及

363
00:17:42,828 --> 00:17:43,994
我的计算器中有一个按钮

364
00:17:44,063 --> 00:17:45,963
这向我展示了目前的情况

365
00:17:46,031 --> 00:17:48,733
计算机。我只是按住Ctrl键从该按钮拖动。

366
00:17:48,801 --> 00:17:51,902
在这里左下方到我的细节。和

367
00:17:51,971 --> 00:17:54,738
当我放开控制器拖动一个小黑窗时

368
00:17:54,807 --> 00:17:58,141
会出现，并有更多的细节和

369
00:17:58,210 --> 00:18:02,179
它会在那里选择显示细节segue。好的，和

370
00:18:02,248 --> 00:18:05,082
这将创造这条小线。看到它的线

371
00:18:05,151 --> 00:18:08,352
在那里创建，我们可以点击并检查。和

372
00:18:08,421 --> 00:18:10,754
那条小线叫做segue，就这样

373
00:18:10,823 --> 00:18:13,190
在你的故事板中你可以检查的东西。

374
00:18:13,259 --> 00:18:15,292
你为什么要检查那条小线？

375
00:18:15,361 --> 00:18:17,829
主要是因为你想给一个唯一的标识符是

376
00:18:17,897 --> 00:18:19,764
只是一个字符串。所以我会调用给这个

377
00:18:19,832 --> 00:18:23,834
示例显示图形cuz，这是segue所做的。和

378
00:18:23,903 --> 00:18:27,371
那么在我的代码中，我可以通过名称来引用那个segue，

379
00:18:27,439 --> 00:18:29,740
显示图形。界面生成器文件中的所有内容，

380
00:18:29,808 --> 00:18:32,776
所有这些故事板，总是以名称引用。和

381
00:18:32,845 --> 00:18:35,413
最棒的是你可以复制和粘贴

382
00:18:35,481 --> 00:18:38,048
事情到一个故事板到另一个只要名称

383
00:18:38,117 --> 00:18:40,684
在你的代码中是他们的正确名称，它只是工作。

384
00:18:40,753 --> 00:18:41,885
所以这就是为什么它的名字。

385
00:18:41,954 --> 00:18:44,688
好吧，它按名称完成所有事情。有人认为

386
00:18:44,757 --> 00:18:46,624
可能有点烦人，你必须拥有

387
00:18:46,693 --> 00:18:49,026
这些名称在代码中完全一样

388
00:18:49,095 --> 00:18:50,861
在故事板中。但事实证明是相当的

389
00:18:50,930 --> 00:18:53,764
这是一种灵活的方式。多一点工作

390
00:18:53,833 --> 00:18:56,733
程序员要确保这些东西是相同的，但是

391
00:18:56,802 --> 00:18:58,135
我觉得在柔韧性方面值得。

392
00:18:58,204 --> 00:19:02,472
好的，所以这是你想检查的主要事情。

393
00:19:02,541 --> 00:19:05,710
您还可以检查它是显示细节还是

394
00:19:05,778 --> 00:19:08,479
显示，但你会看到，在我的演示中，你实际上

395
00:19:08,547 --> 00:19:11,115
不想改变显示细节以显示在那里。

396
00:19:11,184 --> 00:19:15,319
你最好创建一个新的segue。可以，然后呢

397
00:19:15,388 --> 00:19:18,522
这是继续。所以那个标识符。我们为什么要它？

398
00:19:18,591 --> 00:19:21,459
我们将在我们的代码中使用它？什么是一个例子？好，

399
00:19:21,527 --> 00:19:24,395
一种方法是你可以从代码执行segue。

400
00:19:24,463 --> 00:19:28,032
所以手动导致一个segue发生。好吧，那样做

401
00:19:28,100 --> 00:19:30,968
你需要知道它在故事板中的哪一段

402
00:19:31,037 --> 00:19:33,938
希望手动执行，因此您可以执行segue。

403
00:19:34,006 --> 00:19:36,640
我们通常不会手动执行。我会展示它

404
00:19:36,708 --> 00:19:39,910
我们通常不会经常这样做。好吧，因为

405
00:19:39,979 --> 00:19:42,246
我们这样做的真正方式只是控制拖拉和

406
00:19:42,315 --> 00:19:44,348
那会自动从那个按钮继续播放

407
00:19:44,417 --> 00:19:46,284
我们不需要从代码中完成。但

408
00:19:46,352 --> 00:19:49,420
标识符最重要的用途是准备

409
00:19:49,489 --> 00:19:53,357
segue使用的MVC。好，想想

410
00:19:53,425 --> 00:19:56,860
计算器的例子。我按图，它会

411
00:19:56,929 --> 00:19:59,530
给我看一张图，想必它会给我看一张图

412
00:19:59,599 --> 00:20:01,832
我的计算器中有什么。好吧，我有

413
00:20:01,901 --> 00:20:05,402
以某种方式让新的图形MVC知道什么

414
00:20:05,471 --> 00:20:10,174
方程图。我们称之为准备

415
00:20:10,242 --> 00:20:14,111
MVC做它的工作和segues总是创建一个新的MVC

416
00:20:14,179 --> 00:20:16,947
他们总是必须准备好去做他们所做的事情。

417
00:20:17,015 --> 00:20:20,784
说得通？所以我们用一个叫做prepare的函数来做到这一点

418
00:20:20,853 --> 00:20:24,021
对于segues。该功能在MVC中实现，

419
00:20:24,090 --> 00:20:27,624
这是导致赛段发生的原因。很明显

420
00:20:27,693 --> 00:20:31,395
唯一可以准备新MVC的人准备好了。

421
00:20:31,464 --> 00:20:32,596
这就是这个方法的样子。

422
00:20:32,665 --> 00:20:35,532
准备继续。它有两个参数：segue，

423
00:20:35,601 --> 00:20:38,336
这是一个UI故事板segue。

424
00:20:38,404 --> 00:20:42,072
segue大多只有标识符和

425
00:20:42,141 --> 00:20:44,541
也是我们需要准备的MVC。

426
00:20:44,610 --> 00:20:47,811
它刚刚创建的MVC，我们将继续

427
00:20:47,880 --> 00:20:50,748
第二个参数在那里，发件人是按钮或

428
00:20:50,816 --> 00:20:54,017
表格视图中的行。或者如果你是从代码中完成的

429
00:20:54,086 --> 00:20:56,853
它几乎可以是任何东西，这就是为什么它是任何类型的原因。

430
00:20:56,922 --> 00:20:58,322
这导致这种情况发生，

431
00:20:58,390 --> 00:21:02,726
那也可能是零。发生了，你不知道或者

432
00:21:02,795 --> 00:21:07,665
关心，谁做的。这就是这两个参数。

433
00:21:08,834 --> 00:21:10,534
好，现在让我们深入这个事情。

434
00:21:10,602 --> 00:21:12,936
我们平时做的第一件事就是看看

435
00:21:13,005 --> 00:21:16,340
在我们的标识符中，我们的segue标识符可能为零。

436
00:21:16,408 --> 00:21:18,509
不应该，你总是想在你的身上设置一个标识符

437
00:21:18,577 --> 00:21:20,243
故事板。但我们看看它

438
00:21:20,312 --> 00:21:21,545
在这里我要打开它，虽然，

439
00:21:21,614 --> 00:21:25,515
我们可以使用它，然后找出它是哪个segue。

440
00:21:25,584 --> 00:21:28,052
那是因为MVC可以有多种不同的

441
00:21:28,120 --> 00:21:31,521
按钮，每个按钮都是不同类型的MVC。所以

442
00:21:31,590 --> 00:21:33,224
我们显然必须以不同的方式准备它们。

443
00:21:33,293 --> 00:21:36,260
所以，我们需要知道哪一个是哪个。

444
00:21:36,329 --> 00:21:38,261
所以，这就是我们检查标识符以查看的原因

445
00:21:38,330 --> 00:21:41,432
我们正在谈论的这个问题。然后，我们需要得到

446
00:21:41,501 --> 00:21:44,802
我们正在继续并准备的MVC。

447
00:21:44,871 --> 00:21:48,872
好的，那么，segue.destination，var segue。

448
00:21:48,941 --> 00:21:51,909
segue对象中的var目标被传递给你。

449
00:21:51,978 --> 00:21:54,511
这是您继续使用的视图控制器，

450
00:21:54,580 --> 00:21:58,182
全新创建的MVC，没事。但

451
00:21:58,250 --> 00:22:03,120
该参数的类型不会是图表

452
00:22:03,188 --> 00:22:06,156
控制器或类似的东西，这将是公正的

453
00:22:06,225 --> 00:22:09,192
UI视图控制器。那是因为segue，

454
00:22:09,261 --> 00:22:12,329
UI Storyboard Segue类，每个var都必须有一个类型，

455
00:22:12,398 --> 00:22:13,697
它无法知道关于图的任何事情。

456
00:22:13,766 --> 00:22:16,366
它是由Apple在几年前编写的。它的

457
00:22:16,435 --> 00:22:21,137
一个类型的UI视图控制器。这意味着我们必须使用as，

458
00:22:21,206 --> 00:22:24,441
正确的，类型转换来降低它，

459
00:22:24,510 --> 00:22:28,112
我们认为这是MVC控制器，

460
00:22:28,180 --> 00:22:31,381
基于它是哪个segue。所以在这种情况下，

461
00:22:31,450 --> 00:22:34,118
这是计算器的情况，我认为它是一个图形控制器，

462
00:22:34,187 --> 00:22:36,520
控制这些绘图事件之一。所以

463
00:22:36,589 --> 00:22:38,689
我会沮丧。如果失败了，

464
00:22:38,757 --> 00:22:40,390
那么显然我无法做好准备。

465
00:22:40,459 --> 00:22:44,895
这就是为什么如果让那里。好吧，但如果它没有失败

466
00:22:44,964 --> 00:22:47,531
那么现在我可以在图形控制器中设置属性，

467
00:22:47,600 --> 00:22:50,567
调用方法，无论是需要知道的方法

468
00:22:50,636 --> 00:22:54,004
什么功能图表，以便它可以完成其工作。好的，我们

469
00:22:54,072 --> 00:22:57,641
准备它。很酷，每个人？每个人都有道理？

470
00:22:57,710 --> 00:22:59,509
理解为赛季做准备非常重要。

471
00:22:59,578 --> 00:23:01,912
没有理解，你不能做任何多个MVC的东西

472
00:23:01,981 --> 00:23:04,715
这种方法。这是最重要的方法

473
00:23:04,784 --> 00:23:10,521
多个MVC，好吗？现在，红了。

474
00:23:10,589 --> 00:23:13,390
看，幻灯片上有些红色。这绝对是至关重要的

475
00:23:13,459 --> 00:23:17,194
明白当你执行这些黄线时，

476
00:23:17,263 --> 00:23:19,563
当这种情况发生时，你正在准备MVC。

477
00:23:19,631 --> 00:23:24,635
MVC的outlet还没有确定。所以

478
00:23:24,704 --> 00:23:25,803
所有这些outlet，

479
00:23:25,871 --> 00:23:28,238
就像我们的专注卡按钮一样，

480
00:23:28,307 --> 00:23:32,209
翻转计数，所有这些标签都是零。现在，

481
00:23:32,277 --> 00:23:35,045
他们隐含的解包选项，但他们仍然

482
00:23:35,114 --> 00:23:37,814
当你尝试访问它们时会被解开。

483
00:23:37,883 --> 00:23:40,550
这会导致你的应用程序崩溃，因为你会

484
00:23:40,619 --> 00:23:43,253
忘记，哎呀，并在准备期间，

485
00:23:43,322 --> 00:23:46,223
我意外地访问了我的一个outlet。特别是从，

486
00:23:46,291 --> 00:23:49,093
当你正在准备，你有点需要outlet，因为

487
00:23:49,161 --> 00:23:52,863
你正在尝试准备UI。但你必须得到使用

488
00:23:52,931 --> 00:23:54,998
这个事实发生在这之前。我不确定

489
00:23:55,067 --> 00:23:57,700
为什么他们做出这样的决定，但是

490
00:23:57,769 --> 00:23:59,336
这可能是一种痛苦。我的意思是，

491
00:23:59,404 --> 00:24:01,939
有时当你准备你正在准备的MVC时，

492
00:24:02,008 --> 00:24:03,874
它只是收集信息。和

493
00:24:03,943 --> 00:24:06,876
然后，在它的视图中加载，这是一个函数，请记住，

494
00:24:06,945 --> 00:24:09,680
我们知道的是在我们的网点被吸引后才被调用。

495
00:24:09,749 --> 00:24:12,816
然后你与网点对话并将信息分类

496
00:24:12,884 --> 00:24:15,485
管他呢。所以它可能很烦人。

497
00:24:15,554 --> 00:24:18,755
但是我会故意在演示中崩溃，就这样

498
00:24:18,824 --> 00:24:21,725
你可以看到这发生，因为它会发生在你身上。

499
00:24:23,396 --> 00:24:25,262
好，所以这是准备继续。您可以

500
00:24:25,331 --> 00:24:27,765
防止这种方法发生继续

501
00:24:27,834 --> 00:24:30,300
应该在UIViewController中执行。

502
00:24:30,369 --> 00:24:33,170
好的，你得到标识符，如果你从这个返回false，

503
00:24:33,239 --> 00:24:34,672
那么赛格将不会发生。

504
00:24:34,740 --> 00:24:37,207
所以有些人会点击那个图表按钮，系统看起来

505
00:24:37,276 --> 00:24:40,511
用这种方法。如果它说不，那么它不会继续

506
00:24:40,579 --> 00:24:43,047
到一个新的图形控制器。这就像你从来没有

507
00:24:43,115 --> 00:24:47,217
点击那个按钮。这很难做到，

508
00:24:47,286 --> 00:24:50,120
但偶尔，你可能想要这样做。好吧，

509
00:24:50,189 --> 00:24:51,622
所以让我们看看所有的东西的演示。

510
00:24:51,691 --> 00:24:54,624
我可能会在这里向你展示所有这些东西。

511
00:24:54,693 --> 00:24:58,762
我认为我们有时间完成所有这些。是的，我们很可能会这样做。

512
00:24:58,831 --> 00:25:03,600
好吧，让我们回头看看我们的专注。所以

513
00:25:03,669 --> 00:25:07,137
我要在这里做什么，这是浓度，因为我们离开了它

514
00:25:07,205 --> 00:25:10,140
关闭上次。我会改变它有多个

515
00:25:10,209 --> 00:25:13,343
MVC，所以我要添加的新MVC是一个主题选择器。

516
00:25:13,411 --> 00:25:16,647
记住你的家庭作业如何为你的主题添加主题

517
00:25:16,715 --> 00:25:20,751
浓度游戏？你做了，但它选择了一个随机主题。

518
00:25:20,820 --> 00:25:24,021
所以我要为我的主题机制添加一个简单的

519
00:25:24,090 --> 00:25:27,524
一个是因为它是一个演示。然后，但我会拥有

520
00:25:27,593 --> 00:25:32,695
另一个MVC让我选择主题。所以，让我们来做

521
00:25:32,764 --> 00:25:37,200
那。让我们从我做的一件事开始，我想在这里做

522
00:25:37,269 --> 00:25:40,170
一直在推迟，但我想要做的是现在我有多个

523
00:25:40,239 --> 00:25:44,040
MVC，我不希望我的任何MVC拥有他们的控制器

524
00:25:44,109 --> 00:25:47,611
称为视图控制器。好的，那太普通了。

525
00:25:47,680 --> 00:25:48,645
好吧，我将拥有多个MVC。

526
00:25:48,714 --> 00:25:51,148
我希望每个人都有一个控制类。

527
00:25:51,217 --> 00:25:54,017
它会是，你知道，很好地命名。所以在这里，

528
00:25:54,086 --> 00:25:59,723
我要走了，哎呀，控制器在这里。

529
00:25:59,792 --> 00:26:02,292
我要重命名这个。而重命名这种方式，

530
00:26:02,361 --> 00:26:04,928
你不能只在这里输入一个新的名字。

531
00:26:04,997 --> 00:26:07,697
因为这也出现在故事​​板上的名字。

532
00:26:07,766 --> 00:26:10,133
故事板中的所有内容都是按名称排列的。所以

533
00:26:10,202 --> 00:26:14,871
这里重命名的方法是做特殊的Cmd + Click，

534
00:26:14,940 --> 00:26:17,474
记得菜单？并选择重命名和

535
00:26:17,543 --> 00:26:22,145
Xcode会去查看所有使用的地方。

536
00:26:22,214 --> 00:26:23,113
现在我只需输入，

537
00:26:23,181 --> 00:26:25,148
我将这个称为我的ConcentrationViewController。

538
00:26:25,217 --> 00:26:31,020
因为它是控制这个的视图控制器

539
00:26:31,089 --> 00:26:36,827
视图控制器就在这里，我的集中游戏，好吗？

540
00:26:36,895 --> 00:26:43,100
好的，让我们开始将这个主题支持添加到我的应用程序中。

541
00:26:43,168 --> 00:26:45,769
我会做得超级简单。这是我所有的表情符号

542
00:26:45,838 --> 00:26:49,373
东西是。我只是要添加一个叫做主题的变种，我就是

543
00:26:49,441 --> 00:26:53,309
会有一个可选的字符串，这是其中之一。

544
00:26:53,378 --> 00:26:56,814
好吧，所以我的主题，当你设定我的主题时，你就设定好了

545
00:26:56,882 --> 00:26:59,817
你想要的表情符号，那就是主题。好吧，好吧，

546
00:26:59,885 --> 00:27:02,619
如果我们粘贴在这里，这将是万圣节的主题。

547
00:27:02,688 --> 00:27:04,621
当它发生时，

548
00:27:04,690 --> 00:27:08,892
我只是要重置我的表情符号选择等于这个主题。

549
00:27:08,961 --> 00:27:10,660
顺便说一下，这是一个可选项。

550
00:27:10,729 --> 00:27:13,330
它会从nil开始，如果你将它设置为nil，

551
00:27:13,399 --> 00:27:16,433
那么我只会没有表情符号作为你的主题。

552
00:27:16,501 --> 00:27:18,735
在这种情况下，你最终会得到这个问题

553
00:27:18,804 --> 00:27:21,204
如果你还记得，如果你没有任何表情符号，请留下标记。

554
00:27:21,273 --> 00:27:24,340
然后我也会重置我们已经使用过的表情符号

555
00:27:24,409 --> 00:27:26,910
因为它可能来自不同的主题。

556
00:27:26,979 --> 00:27:29,078
所以我会重置它，顺便说一下，

557
00:27:29,147 --> 00:27:31,882
我所需要做的就是创建一个空字典

558
00:27:31,951 --> 00:27:34,818
因为斯威夫特会从中推断出这种类型。

559
00:27:34,887 --> 00:27:38,588
所以我不需要在这里放入卡片和字符串。

560
00:27:38,657 --> 00:27:40,791
最后，如果有人设定了我的主题，那么该怎么办？

561
00:27:40,859 --> 00:27:44,027
我正在参加一场比赛？我想我最好更新我的

562
00:27:44,095 --> 00:27:47,664
从我的模型中查看。好的，记住updateViewFromModel，

563
00:27:47,732 --> 00:27:51,468
所以无论如何显示，如果它有错误的主题，

564
00:27:51,537 --> 00:27:55,071
将更新到我的新主题。好吧，就这样。

565
00:27:55,140 --> 00:27:58,074
这就是我要如何做我的主题。它非常简单，

566
00:27:58,143 --> 00:28:01,211
可能有点太简单了。我要做的另一件事是

567
00:28:01,280 --> 00:28:05,449
因为我们现在让主题确定下来了，但我确实没有

568
00:28:05,517 --> 00:28:08,651
这里想要这个万圣节颜色主题。所以我会去的

569
00:28:08,720 --> 00:28:13,090
将所有这些东西都改为更加标准的颜色。

570
00:28:13,158 --> 00:28:15,759
蓝色，蓝色是这里的默认蓝色

571
00:28:15,827 --> 00:28:18,428
可能是最标准的颜色之一，所以

572
00:28:18,497 --> 00:28:22,098
让我们把这里的一切都变成蓝色。我必须改变

573
00:28:22,167 --> 00:28:27,704
我的代码也很容易在这里改变。好吧，

574
00:28:27,773 --> 00:28:30,240
然后，背景不想变黑，

575
00:28:30,308 --> 00:28:33,243
这是非常不寻常的，我们会让这个白色。和

576
00:28:33,311 --> 00:28:35,511
那么我们在这里翻转想要变黑，

577
00:28:35,580 --> 00:28:40,483
只是标准的颜色黑色，哪里是黑色的，就是这样。

578
00:28:40,552 --> 00:28:42,786
所以现在我们的用户界面看起来更加标准一点。

579
00:28:42,855 --> 00:28:46,489
让我们在这里的代码中做同样的事情。

580
00:28:46,558 --> 00:28:48,024
浓度ViewController，

581
00:28:48,093 --> 00:28:49,559
看到我们这里有这些颜色，

582
00:28:49,628 --> 00:28:51,061
所以这橙色就在这里，

583
00:28:51,130 --> 00:28:53,696
这是卡片的后面，我们会让它变成蓝色。

584
00:28:53,765 --> 00:28:55,965
我们不希望卡的背景是白色的，所以

585
00:28:56,034 --> 00:28:57,367
我们的整体背景是白色的。

586
00:28:57,436 --> 00:28:58,769
所以我会让它变成浅灰色

587
00:28:58,837 --> 00:29:01,137
我们可以更好地看到牌的边缘。和

588
00:29:01,206 --> 00:29:03,407
那么我也是，我们有我们的翻盖计数标签，

589
00:29:03,475 --> 00:29:06,709
我们会让它变成黑色。好的，我添加了主题，

590
00:29:06,778 --> 00:29:09,846
我改变了我的配色方案。让我们运行并制作

591
00:29:09,915 --> 00:29:13,383
在我们潜入之前，我确信我没有破坏任何东西。

592
00:29:18,557 --> 00:29:20,557
好的，所以我们得到了这个蓝色的主题，而且

593
00:29:20,625 --> 00:29:24,260
我们得到了万圣节默认，我们的默认主题，

594
00:29:24,329 --> 00:29:26,697
看起来它运作正常。

595
00:29:26,766 --> 00:29:28,732
我们甚至获得了我们的轮廓字体。和

596
00:29:28,800 --> 00:29:32,803
我们在这里得到了正常的颜色。好的，现在我们走吧

597
00:29:32,872 --> 00:29:36,139
添加这个其他的MVC，对吧？我们有这个MVC，

598
00:29:36,208 --> 00:29:40,477
我们需要另一个。我们如何将MVC添加到我们的应用程序？好，

599
00:29:40,545 --> 00:29:42,913
我们只是在这里，我们得到一个按钮或相同的地方

600
00:29:42,981 --> 00:29:45,749
来自一个标签。最重要的是View Controller。

601
00:29:45,817 --> 00:29:48,085
我只是把它拖出来放进去。

602
00:29:48,153 --> 00:29:52,923
所以现在我有两个MVC，两个视图控制器。

603
00:29:52,991 --> 00:29:55,325
顺便说一句，我们称这些东西，

604
00:29:55,393 --> 00:29:59,929
这些东西中的每一个都是场景，场景，场景。好的，

605
00:29:59,998 --> 00:30:03,266
所以，我们在这里有两个视图控制器，

606
00:30:03,335 --> 00:30:06,936
两个MVC，还有一个，我需要在这里做一些事情。

607
00:30:07,005 --> 00:30:10,273
一个是，每次我有一个视图控制器时，都需要它

608
00:30:10,342 --> 00:30:13,476
一个视图控制器子类来控制它。这个有一个，

609
00:30:13,545 --> 00:30:15,879
ConcentrationViewController。我们需要为此而努力

610
00:30:15,948 --> 00:30:18,549
这里。我用File> New File来做到这一点。

611
00:30:18,617 --> 00:30:21,551
这总是我创建一个新类的方式。和

612
00:30:21,620 --> 00:30:24,287
这是一个用户界面的事情，所以我会做Cocoa Touch类。

613
00:30:24,356 --> 00:30:26,289
它是UIViewController的子类。

614
00:30:26,358 --> 00:30:32,228
我要把这个叫做ConcentrationThemeChooserView-

615
00:30:32,297 --> 00:30:35,531
Controller。好的长名字在那里，不会有

616
00:30:35,600 --> 00:30:39,001
尽管输入很多。我要确保不要放

617
00:30:39,070 --> 00:30:41,738
它在我的项目级别。我会把它放在一个水平，

618
00:30:41,806 --> 00:30:46,310
我的所有文件都在那里。现在我们开始。

619
00:30:46,378 --> 00:30:48,445
这是我们的viewController。我们会摆脱

620
00:30:48,513 --> 00:30:51,014
这些viewController生命周期方法就像我们总是这样做的。

621
00:30:51,083 --> 00:30:53,383
这就给我们留下了这一个方法，

622
00:30:53,452 --> 00:30:56,720
所有重要的准备（继续，所以我们会回来

623
00:30:56,788 --> 00:31:01,158
在那里准备（继续），并且很快实施它。

624
00:31:01,226 --> 00:31:03,259
但我们刚刚做的第一件事就是你做的同样的事情

625
00:31:03,328 --> 00:31:07,130
当你拖出一个空白的UI视图。你做了什么？

626
00:31:07,199 --> 00:31:10,100
你去了这里的身份检查员。和

627
00:31:10,169 --> 00:31:12,835
您将其身份更改为您的自定义子类。

628
00:31:12,904 --> 00:31:15,339
所以我们想在这里做同样的事情。所以我会选择这个

629
00:31:15,407 --> 00:31:18,241
家伙，我要去这里找身份检查员。

630
00:31:18,310 --> 00:31:22,178
我将从通用的UIViewController中改变它

631
00:31:22,247 --> 00:31:24,714
成为我的ConcentrationThemeChooser

632
00:31:24,783 --> 00:31:27,784
视图控制器。好吧，别忘了那一步。

633
00:31:27,852 --> 00:31:30,153
如果你不这样做，那么你的prepare(for segue),，

634
00:31:30,221 --> 00:31:31,688
例如，永远不会被调用。

635
00:31:31,756 --> 00:31:34,457
您将无法创建任何outlets或任何actions，

636
00:31:34,526 --> 00:31:37,427
或任何东西。你需要这样做。另一件事我会

637
00:31:37,496 --> 00:31:40,230
做这个小箭头，你看到这个箭头吗？

638
00:31:40,299 --> 00:31:42,932
这是说这个应用程序运行时的箭头，

639
00:31:43,001 --> 00:31:46,369
我首先显示哪个视图控制器？好的，和

640
00:31:46,438 --> 00:31:49,305
显然现在，我想先展示一个主题。所以

641
00:31:49,374 --> 00:31:52,241
我只是，你可以选择它并将其拖到任何MVC

642
00:31:52,310 --> 00:31:56,079
你想成为第一个。好的，这是我的主题

643
00:31:56,148 --> 00:31:59,148
选择器就在这里。如果我们真的这样做，

644
00:31:59,217 --> 00:32:02,619
这可能是一个表格视图。或者是一些可扩展的列表

645
00:32:02,687 --> 00:32:05,321
的主题，我可以添加更多的主题与一条线

646
00:32:05,390 --> 00:32:07,524
代码，就像你被要求做你的功课。

647
00:32:07,592 --> 00:32:10,159
但是我还没有教过你桌子的视角，所以我做不到

648
00:32:10,228 --> 00:32:12,696
那样。相反，我只会有三个按钮，

649
00:32:12,764 --> 00:32:16,432
每一个都是一个主题。所以，我要抓住三个

650
00:32:16,501 --> 00:32:19,302
按钮，并为这个MVC制作这个漂亮的UI。

651
00:32:19,371 --> 00:32:23,473
我们会让字体变得好看，所以你可以看到它。

652
00:32:23,541 --> 00:32:27,611
过来这里，也许有40点或类似的东西。

653
00:32:30,082 --> 00:32:32,014
我们需要其中三个，所以我会复制并粘贴，

654
00:32:32,083 --> 00:32:34,884
然后粘贴另一个。可以，然后呢，

655
00:32:34,953 --> 00:32:39,856
我有三个主题，我有一个体育主题，

656
00:32:39,925 --> 00:32:45,395
我有一个面孔主题，我有一个动物主题。所以

657
00:32:45,464 --> 00:32:48,965
这些是我的主题。让我们快速回顾一下自动布局。

658
00:32:49,034 --> 00:32:51,768
我将选择这些并将它们放入一个堆栈中

659
00:32:51,837 --> 00:32:54,470
按钮在这里。然后在堆栈视图中，他们在这里。

660
00:32:54,539 --> 00:32:56,806
我要让它们集中在堆栈中。

661
00:32:56,875 --> 00:32:59,209
而且我会让它们的尺寸相同。

662
00:32:59,278 --> 00:33:02,578
我会选择一个标准间距，就像那样。

663
00:33:02,647 --> 00:33:04,181
我也打算把它放在中心位置，

664
00:33:04,249 --> 00:33:07,517
并做我的控制拖到我的外层，和

665
00:33:07,586 --> 00:33:11,321
在那里有中心，水平和垂直。

666
00:33:11,389 --> 00:33:15,324
注意我得到黄色。那黄色只是警告我，

667
00:33:15,393 --> 00:33:19,529
这些帧在运行时会有所不同。

668
00:33:19,598 --> 00:33:21,465
我可以在文档大纲中解决这个问题。

669
00:33:21,533 --> 00:33:23,833
如果你会记得这个小家伙，

670
00:33:23,902 --> 00:33:26,903
在右上角有这个黄色按钮，然后去这里

671
00:33:26,972 --> 00:33:29,105
然后点击黄色的东西。和

672
00:33:29,174 --> 00:33:32,242
它可以通过更新框架来解决我的错位问题，

673
00:33:32,310 --> 00:33:35,545
所以我们会这样做。它稍微移动了它，然后

674
00:33:35,614 --> 00:33:39,515
现在一切都解决了。好吧，这很好。

675
00:33:39,584 --> 00:33:43,019
我在这里得到了不错的用户界面，我有自动布局，所以

676
00:33:43,088 --> 00:33:46,055
它应该在我旋转时工作，并完成所有这些事情。所以，

677
00:33:46,124 --> 00:33:49,692
现在我需要做的就是连接这两个MVC。好的，

678
00:33:49,761 --> 00:33:51,661
做到这一点，当我点击其中一个按钮时，

679
00:33:51,730 --> 00:33:54,464
它显示了这个MVC在这里的权利。和我

680
00:33:54,533 --> 00:33:57,000
用控制拖动来做到这一点。所以，我只是要控制拖动

681
00:33:57,069 --> 00:34:00,236
从这里的运动按钮。我会把这个

682
00:34:00,305 --> 00:34:02,973
在导航控制器无论如何启动。

683
00:34:03,041 --> 00:34:05,541
所以我要在这里选择Show，而不是Show Detail

684
00:34:05,610 --> 00:34:08,344
拆分视图，我要选择显示。好吧，我们也一样

685
00:34:08,413 --> 00:34:11,180
这件事。这也将是一个展会，并且

686
00:34:11,249 --> 00:34:15,918
这里也是一个Show，所以他们都会去Show。和

687
00:34:15,987 --> 00:34:19,088
我想确保点击它们中的每一个，

688
00:34:19,157 --> 00:34:22,425
它很好，它显示了什么导致了这里的segue，和

689
00:34:22,493 --> 00:34:23,860
过来这里给检查员

690
00:34:23,929 --> 00:34:27,430
更改标识符。这是什么？

691
00:34:27,499 --> 00:34:29,933
它基本上让你选择一个主题，如此

692
00:34:30,001 --> 00:34:32,569
我会调用给这个选择主题，我会

693
00:34:32,638 --> 00:34:36,239
调用给他们三个人，确定选择主题，

694
00:34:36,308 --> 00:34:39,242
因为他们三人都做同样的事情。

695
00:34:39,311 --> 00:34:42,212
他们选择一个主题，好吗？

696
00:34:42,280 --> 00:34:45,448
现在我会做一些不好的事情，其实并不友好

697
00:34:45,517 --> 00:34:49,018
坏，非常糟糕，这是我要看看按钮

698
00:34:49,087 --> 00:34:52,589
导致segue决定显示哪个主题。

699
00:34:52,657 --> 00:34:55,491
任何人都能想到为什么那样会很糟糕？

700
00:34:55,560 --> 00:35:00,596
不应该那样做，没有猜测？因为，会发生什么

701
00:35:00,665 --> 00:35:05,235
当我将它转换成法语或中文？我会有我的

702
00:35:05,304 --> 00:35:07,103
代码必须有法文和中文

703
00:35:07,172 --> 00:35:10,039
它在这些语言中起作用，不是没有意义？

704
00:35:10,108 --> 00:35:12,609
所以你永远不会真的想从某些东西中驱动你的代码

705
00:35:12,678 --> 00:35:13,310
这是在用户界面中，

706
00:35:13,378 --> 00:35:15,311
因为你的用户界面将会有40种不同的语言，

707
00:35:15,380 --> 00:35:17,680
你希望你的应用程序成功。但对于

708
00:35:17,749 --> 00:35:20,250
下载它真的很好，因为它的代码非常少，

709
00:35:20,318 --> 00:35:22,619
我可以很快做到这一点。所以这是下载软件，

710
00:35:22,687 --> 00:35:25,822
不要复制我们今天正在做的事情的这个方面。

711
00:35:27,325 --> 00:35:30,259
好的，所以我们在这里创建了这些赛段。

712
00:35:30,328 --> 00:35:31,928
让我们继续前进，看看。

713
00:35:31,996 --> 00:35:35,098
等等，我们还有一件事要做。我们错过了一个MVC。

714
00:35:35,167 --> 00:35:38,168
我们的第一张牌是我们的第一张牌，是第二张牌

715
00:35:38,237 --> 00:35:40,169
我们的堆栈，但我们没有堆栈本身。

716
00:35:40,238 --> 00:35:43,039
我们从来没有放过导航控制，我们可以得到

717
00:35:43,107 --> 00:35:46,576
从这里开始。如果你下来看看这里，对

718
00:35:46,645 --> 00:35:49,245
这里导航控制器。我可以把它拖出来，然后

719
00:35:49,314 --> 00:35:50,747
然后控制拖动来连接它，但是

720
00:35:50,816 --> 00:35:53,115
我将使用我正在告诉你的那个嵌入。

721
00:35:53,184 --> 00:35:55,818
所以我只是选择这个视图控制器，和

722
00:35:55,887 --> 00:35:58,822
做编辑器，嵌入导航控制器。

723
00:36:00,758 --> 00:36:03,493
现在我们有三个MVC在这里没关系，

724
00:36:03,562 --> 00:36:06,028
导航控制器，堆叠中的第一张卡片，以及

725
00:36:06,097 --> 00:36:10,467
那么我们要推入堆栈的那个好吧，

726
00:36:10,535 --> 00:36:12,335
我们很酷吗？好吧，现在让我们运行吧，

727
00:36:12,403 --> 00:36:15,171
并注意它在我时自动移动箭头

728
00:36:15,240 --> 00:36:18,842
嵌入，这是不错的。所以，

729
00:36:18,910 --> 00:36:22,945
让我们希望这有效，并看看会发生什么。

730
00:36:23,014 --> 00:36:26,682
好的，这里是我们的用户界面，好吧。好吧，它进入

731
00:36:26,751 --> 00:36:29,619
正确的空间至少是我们的选择者。让我们看看是否

732
00:36:29,687 --> 00:36:33,222
当我们选择这些主题之一时，如果它会继续

733
00:36:33,291 --> 00:36:36,092
那个MVC。事实上，让我们把它移开，所以我们

734
00:36:36,161 --> 00:36:41,131
可以看到这里发生了什么。准备好了，呜呼它做到了。

735
00:36:41,199 --> 00:36:46,535
但是，主题是万圣节。那么，动物呢，

736
00:36:46,604 --> 00:36:50,707
仍然万圣节。所以当然这仍然是万圣节，

737
00:36:50,776 --> 00:36:53,409
因为我们从来没有做过任何事情

738
00:36:53,478 --> 00:36:57,147
准备MVC成为这些主题之一吧？我们刚刚

739
00:36:57,215 --> 00:36:59,515
把名字放在这里，我们实际上没有做准备。所以，

740
00:36:59,584 --> 00:37:03,652
我们的下一步是准备这个MVC，这将被放在

741
00:37:03,721 --> 00:37:06,423
堆叠的顶部有正确的主题。

742
00:37:06,491 --> 00:37:08,958
所以，我们要准备。所以，让我们去做那个。和

743
00:37:09,027 --> 00:37:13,062
我们在ConcentrationThemeChooserView的代码中这样做 -

744
00:37:13,131 --> 00:37:15,565
控制器，对吧？这是我们选择的控制器

745
00:37:15,633 --> 00:37:18,034
主题。所以，我们取消注释

746
00:37:18,103 --> 00:37:19,736
这个非常重要的功能就在这里。和

747
00:37:19,804 --> 00:37:22,672
摆脱评论。我们必须实施准备。

748
00:37:22,741 --> 00:37:25,241
那么，我们需要做什么来实施准备？

749
00:37:25,309 --> 00:37:27,844
那么，第一件事，就像我以前谈到的那样，

750
00:37:27,913 --> 00:37:31,947
我们要检查一下我们正在做什么。

751
00:37:32,016 --> 00:37:35,284
现在，我们只有一种延续。所以让我们来检查它，

752
00:37:35,353 --> 00:37:38,821
如果标识符等于选择主题segue，

753
00:37:38,890 --> 00:37:41,357
这就是我们在检查员中所做的，

754
00:37:41,426 --> 00:37:46,029
请记住故事板。然后我们想看看我们能不能

755
00:37:46,097 --> 00:37:50,200
找到浓度游戏MVC和

756
00:37:50,269 --> 00:37:53,369
通过讲述它的主题来准备它。所以，

757
00:37:53,438 --> 00:37:55,338
让我们来看看这个主题。我们如何获得主题？

758
00:37:55,407 --> 00:37:59,642
那么，为了加快速度，我实际上创造了一些

759
00:37:59,711 --> 00:38:02,979
这里创建了这个字典的代码片段。所以

760
00:38:03,048 --> 00:38:06,248
这本字典，它只是得到了主题的名字，

761
00:38:06,317 --> 00:38:07,584
这与按钮标题相同，

762
00:38:07,652 --> 00:38:09,352
这就是为什么我说这是糟糕的设计，而且

763
00:38:09,420 --> 00:38:12,455
那么主题本身。好，所以有运动，

764
00:38:12,524 --> 00:38:13,622
有一群动物，

765
00:38:13,691 --> 00:38:17,594
有一堆面孔。好吧，我们想要得到那个主题。

766
00:38:17,662 --> 00:38:21,297
所以，我们将从按钮中获取主题的名称。

767
00:38:21,366 --> 00:38:23,899
这是发件人的参数，发件人是事情

768
00:38:23,968 --> 00:38:27,470
导致这种继续。所以，我们想说的是，

769
00:38:27,539 --> 00:38:32,408
如果我们可以让themeName等于发件人的

770
00:38:32,477 --> 00:38:37,380
currentTitle，那么我们会从中获得主题。但，

771
00:38:37,449 --> 00:38:41,685
这我们不能这样做，因为发件人，发件人是什么类型？

772
00:38:44,523 --> 00:38:47,056
事实上，它的类型是Any，可选的Any。

773
00:38:47,125 --> 00:38:50,192
您不能使用currentTitle方法发送可选的Any，

774
00:38:50,261 --> 00:38:52,028
这是一个按钮方法。

775
00:38:52,096 --> 00:38:55,698
好的，所以我们将不得不使用as，任何时候我们都会看到Any

776
00:38:55,767 --> 00:38:58,835
我们几乎总是必须使用as。所以我会说，

777
00:38:58,904 --> 00:39:03,573
如果我可以让按钮等同于发件人作为UI按钮，

778
00:39:05,443 --> 00:39:09,345
那么我可以做这个主题的主要事情。因为我现在有

779
00:39:09,413 --> 00:39:13,983
一个类型为Button，UIbutton，

780
00:39:14,051 --> 00:39:18,854
好吧。所以，现在我可以说button.currentTitle。那么你

781
00:39:18,923 --> 00:39:21,358
看看我们如何用它来解决那里的结局。

782
00:39:23,161 --> 00:39:25,895
现在我们有主题名称，我可以说我是否可以放过

783
00:39:25,964 --> 00:39:30,433
主题等于我的主题子主题名称。

784
00:39:31,936 --> 00:39:35,137
然后我准备好去准备吧？

785
00:39:35,206 --> 00:39:37,473
我们只是看着这个主题。所以

786
00:39:37,542 --> 00:39:40,009
我正在查找它，并且我们知道这当然会失败，

787
00:39:40,078 --> 00:39:42,878
因为也许这个主题名字不在这本词典里。所以

788
00:39:42,947 --> 00:39:46,882
这就是为什么我们如果让。顺便说一下，这两个如果让我们如此

789
00:39:46,951 --> 00:39:50,119
相互关联，我们几乎肯定会在这里，

790
00:39:50,188 --> 00:39:53,822
并用逗号将它们放在同一行上。因为他们真的，

791
00:39:53,891 --> 00:39:55,058
真的走在一起。顺便一提，

792
00:39:55,127 --> 00:39:56,726
我们可能也不会这样做。

793
00:39:56,795 --> 00:40:00,229
我们会把它放在这里。

794
00:40:00,298 --> 00:40:01,564
事实上，我会告诉你如何做到这一点。

795
00:40:01,633 --> 00:40:03,733
所以，我不会在这里创建一个单独的栏

796
00:40:03,801 --> 00:40:07,337
就拿这个出来吧，摆脱这个，

797
00:40:07,405 --> 00:40:12,475
把括号括在里面。因为这可能会返回零

798
00:40:12,544 --> 00:40:17,947
我需要可选的链接它。现在我可以摆脱了

799
00:40:18,016 --> 00:40:22,385
所有这些。这就是我们如何在这里编写这段代码。

800
00:40:22,454 --> 00:40:24,153
如果让我们不会有所有这些额外的东西，

801
00:40:24,222 --> 00:40:26,255
我们试图将这一点简化，因为这就是全部

802
00:40:26,324 --> 00:40:28,525
与获得这个主题的同样的事情有关。

803
00:40:29,961 --> 00:40:32,361
如果你不明白我在这里做了什么。

804
00:40:32,430 --> 00:40:35,597
在广场询问，去TA，回去做你的阅读

805
00:40:35,666 --> 00:40:39,501
这对于了解发生了什么很重要

806
00:40:39,570 --> 00:40:42,271
这里。好吧，所以我得到了这个，现在我有了主题，

807
00:40:42,340 --> 00:40:44,106
现在我需要准备目的地。

808
00:40:44,175 --> 00:40:47,476
所以我想说说像segue.destination，

809
00:40:47,545 --> 00:40:51,781
将你的主题设为这个主题。哎呀，

810
00:40:51,849 --> 00:40:56,018
不是那个主题，这个主题。但我也做不到。

811
00:40:56,087 --> 00:40:57,954
因为再次，这segue的目的地，

812
00:40:58,022 --> 00:41:00,523
让我们来看看这个segue目的地的类型。

813
00:41:00,592 --> 00:41:04,160
选项点击它。它采用了类型UI视图控制器。

814
00:41:04,229 --> 00:41:07,430
当然，UI视图控制器没有

815
00:41:07,498 --> 00:41:10,133
var主题，所以我们不能这样做。

816
00:41:10,201 --> 00:41:15,404
所以我们不得不说在这里使用并说我们是否可以let CVC，

817
00:41:15,473 --> 00:41:19,341
浓度视图控制器，等同于Segue目标

818
00:41:19,410 --> 00:41:23,913
降至浓度视图控制器。现在我们可以

819
00:41:23,981 --> 00:41:27,417
比较，通过设置它的主题来准备这个东西。

820
00:41:30,321 --> 00:41:34,390
大家都看到了吗？看看我们如何使用沮丧？

821
00:41:34,459 --> 00:41:36,825
了解这一点非常重要。所以现在就是这样，

822
00:41:36,894 --> 00:41:40,930
我们已经成功地准备了这件事。那我们走吧，

823
00:41:40,999 --> 00:41:48,270
运行我们的应用，看看它是如何工作的。好的，

824
00:41:48,339 --> 00:41:53,877
希望体育。不，这是怎么回事？我的应用程序崩溃。

825
00:41:55,446 --> 00:41:59,482
为什么我的应用程序崩溃？不，让我们来看看

826
00:41:59,551 --> 00:42:01,584
看看我们能否在这里找到答案。它说，

827
00:42:01,653 --> 00:42:05,154
意外地发现了零，同时展开一个可选值。

828
00:42:05,223 --> 00:42:08,257
这里是我在左边的调用堆栈，它看起来像

829
00:42:08,326 --> 00:42:13,729
卡按钮在这里。我所有卡片按钮的出口都是零。

830
00:42:13,798 --> 00:42:19,435
让我们确保这是真的。 PO卡按钮nil，

831
00:42:19,504 --> 00:42:22,337
没有。所以，让我们回去调用stack和

832
00:42:22,406 --> 00:42:25,474
看看我们是如何到达这里。好的，我们正在更新视图

833
00:42:25,543 --> 00:42:28,878
模型。这是从设定主题开始的。

834
00:42:28,947 --> 00:42:30,112
因为我们设定了我们更新的主题

835
00:42:30,181 --> 00:42:33,783
从模型的角度来看。这个主题设置被要求

836
00:42:33,852 --> 00:42:37,519
准备。所以，准备工作就是要准备

837
00:42:37,588 --> 00:42:40,223
它在设定主题。但是，当它设置它的主题

838
00:42:40,291 --> 00:42:43,426
调用尝试访问该卡的updateViewFromModel

839
00:42:43,494 --> 00:42:46,495
由于幻灯片上的红色，这些按钮是nil。

840
00:42:46,564 --> 00:42:50,399
当你准备的时候，你的店铺没有设置。

841
00:42:50,468 --> 00:42:54,770
好的，那我们该怎么做呢。不幸，

842
00:42:54,839 --> 00:42:57,506
即使这是一个隐含的解包可选，

843
00:42:57,575 --> 00:43:00,276
我们必须检查并查看cardButton是否不

844
00:43:00,344 --> 00:43:03,179
等于零。如果cardButtons不等于nil，

845
00:43:03,248 --> 00:43:06,382
那么我们可以从我们的模型更新我们的视图。但

846
00:43:06,450 --> 00:43:09,952
如果它不是nil ，那么我们，如果它是nil ，那么我们只是

847
00:43:10,021 --> 00:43:13,656
不能这样做。现在，希望在我们的代码后面的某个地方

848
00:43:13,725 --> 00:43:17,259
无论是在观看的负载或情况下，当有人触摸一张卡时，

849
00:43:17,328 --> 00:43:19,695
从模型更新视图发生。

850
00:43:19,764 --> 00:43:22,298
所以，一切都会好的，因为所有的牌

851
00:43:22,367 --> 00:43:25,067
直到有人碰到一个，所以我们很好

852
00:43:25,136 --> 00:43:28,103
走。所以理解这一点非常重要，你必须做到

853
00:43:28,172 --> 00:43:30,639
保护你的代码，当你的MVC正在被调用时

854
00:43:30,708 --> 00:43:38,214
准备。好的，现在，让我们再试一次。

855
00:43:38,283 --> 00:43:40,916
让我们试试体育。好吧，它被困住了。

856
00:43:40,985 --> 00:43:44,553
让我们穿过我们的手指，这些是与体育有关的，并且

857
00:43:44,622 --> 00:43:48,324
他们很优秀。游戏运行得很好。我们走吧

858
00:43:48,392 --> 00:43:51,460
回来，当我回击时，我们会打回来，那就是运动

859
00:43:51,529 --> 00:43:55,865
游戏被扔掉了。所以现在，当我选择动物，并且

860
00:43:55,933 --> 00:44:00,336
前进，看看，全新的MVC。游戏开始了，并且

861
00:44:00,404 --> 00:44:04,540
它是动物，所以这很好。回到这里，面孔。

862
00:44:04,609 --> 00:44:08,877
全新的MVC。 Segueing总是创建一个全新的MVC。

863
00:44:08,946 --> 00:44:13,816
这是一个很好的例子，

864
00:44:13,885 --> 00:44:17,653
好吧。现在我们来做iPad吧。这是我们第一次

865
00:44:17,722 --> 00:44:18,854
在这个过程中完成了iPad

866
00:44:18,923 --> 00:44:20,923
你会从这里开始做这件事

867
00:44:20,992 --> 00:44:24,526
你将不得不在你的下一个任务中做到这一点。所以

868
00:44:24,595 --> 00:44:27,629
让我们来做这个，让我们现在就来看看我们现在拥有的应用程序

869
00:44:27,698 --> 00:44:31,867
看看我们iPad上的故事板会是什么样子。所以

870
00:44:31,936 --> 00:44:34,970
我们在这里查看iPhone X视图，

871
00:44:35,039 --> 00:44:38,107
我只是要转而将其视为iPad。

872
00:44:38,176 --> 00:44:40,976
你可以看到，作为一个iPad，它真的很大

873
00:44:41,045 --> 00:44:42,978
也许我想缩小一点点

874
00:44:43,047 --> 00:44:46,515
我可以看到它好一点。而这个UI看起来并不怎么样

875
00:44:46,584 --> 00:44:50,019
好。看看周围所有这些额外的空白空间。

876
00:44:50,088 --> 00:44:53,188
如果我有一个iPad应用程序，它看起来像这样，我会说，

877
00:44:53,257 --> 00:44:56,425
这是一个可怕的设计。这有点浪费，因为

878
00:44:56,494 --> 00:44:59,262
我们真的会在左边的这个分割视图中进行分割

879
00:44:59,330 --> 00:45:00,395
这是正确的。

880
00:45:00,464 --> 00:45:03,599
这将会更有效地利用空间，

881
00:45:03,667 --> 00:45:06,802
特别是在景观。想象一下在景观中

882
00:45:06,871 --> 00:45:08,838
这部分在左边，这在右边，

883
00:45:08,906 --> 00:45:11,840
那将会很好地利用那里的空间。

884
00:45:11,909 --> 00:45:15,111
好的，这就是我们想要做的。我们该怎么做？

885
00:45:15,180 --> 00:45:17,246
当然，我们需要一个分割视图控制器

886
00:45:17,314 --> 00:45:19,782
那。现在，我建议您随时添加拆分视图

887
00:45:19,851 --> 00:45:23,118
控制器到你的应用程序，你放大。

888
00:45:23,187 --> 00:45:26,722
好吧，真的，真的很远。那是因为你走了

889
00:45:26,791 --> 00:45:29,391
在这里抓住这些拆分视图中的一个，你就可以获得全部

890
00:45:29,460 --> 00:45:32,561
那些随之而来的额外视图，这将是真正的

891
00:45:32,630 --> 00:45:36,632
大。看，所以很高兴你的规模很小。

892
00:45:36,701 --> 00:45:39,201
所以我会把它放在这里。你可以看到这一点

893
00:45:39,270 --> 00:45:41,871
已经放弃了分割视图控制器。和

894
00:45:41,939 --> 00:45:45,141
然后它给了我一个导航控制器和一个主人

895
00:45:45,209 --> 00:45:48,310
一个细节。好吧，我不想要这些东西。

896
00:45:48,379 --> 00:45:49,912
所以我只是选择它们并删除。

897
00:45:49,980 --> 00:45:53,215
对，因为我已经有我的主人，这就在这里，而且

898
00:45:53,283 --> 00:45:56,986
我在这里有我的细节。所以，让我们把它提出来，如果我

899
00:45:57,055 --> 00:45:59,921
可以抓住它，它是如此之小。所以我们可以做到这一点

900
00:45:59,990 --> 00:46:03,559
我甚至会在这里移动我的细节。如果我能抓住它，

901
00:46:03,628 --> 00:46:06,562
当它很小时很难抓住它。

902
00:46:06,630 --> 00:46:09,364
在这里，以便我可以轻松控制拖动。让我们

903
00:46:09,433 --> 00:46:12,468
现在放大，我们收集了一切。

904
00:46:12,536 --> 00:46:15,771
从那里得到它。还有两件事我想做，一件，

905
00:46:15,840 --> 00:46:19,541
我想让这个箭头出现在分割视图上

906
00:46:19,610 --> 00:46:22,178
控制器，以便我的应用程序以分割视图开始

907
00:46:22,246 --> 00:46:25,748
控制器。不会从主显示开始。

908
00:46:25,817 --> 00:46:28,517
然后，我要控制拖动到我的主人和

909
00:46:28,586 --> 00:46:31,553
在这里选择主视图控制器。然后我会去的

910
00:46:31,622 --> 00:46:35,924
控制拖动到我的细节并选择Detail View Controller。

911
00:46:35,993 --> 00:46:39,094
现在注意我在这里仍然有这些segues。

912
00:46:39,163 --> 00:46:42,631
所以当我点击这些时，我的主人仍然试图继续

913
00:46:42,699 --> 00:46:45,234
到这个视图控制器。所以让我们在iPhone上运行，

914
00:46:45,303 --> 00:46:47,737
在iPad上，并看看这是否适用于iPad。

915
00:46:47,805 --> 00:46:49,538
我们把它放在分割视图中。我们试试吧。

916
00:46:49,607 --> 00:46:54,277
让我们来看看这里发生了什么。可以，然后呢

917
00:46:54,345 --> 00:46:57,046
这是我的iPad，哇，它看起来像在工作，

918
00:46:57,115 --> 00:46:59,948
对？我们已经得到了我们的主人左边我们有我们的游戏

919
00:47:00,017 --> 00:47:02,251
在这里右边，好吧，看起来不错。

920
00:47:02,320 --> 00:47:06,989
我们继续并选择一个主题。哎呀，

921
00:47:07,057 --> 00:47:11,060
这不好。这不是我们想要的。看那个。

922
00:47:11,129 --> 00:47:13,929
现在为什么会这样。当我点击选择这个，

923
00:47:13,998 --> 00:47:17,633
我希望通过这里来改变一个新的体育比赛。

924
00:47:17,701 --> 00:47:19,168
我为什么在这里得到它？好，

925
00:47:19,236 --> 00:47:22,371
这是因为这些segues的类型。

926
00:47:22,440 --> 00:47:25,340
你看到这些segues？他们都是Show Segues。

927
00:47:25,409 --> 00:47:29,946
显示Segues意味着做导航控制器的窍门。

928
00:47:30,014 --> 00:47:34,416
我想显示细节，也知道作为替代，因为它

929
00:47:34,485 --> 00:47:37,253
替换分割视图的详细视图。现在，

930
00:47:37,321 --> 00:47:40,622
你可能会认为我们只是改变它，哎呀我们改变了它。

931
00:47:40,691 --> 00:47:44,994
好的，有一个bug界面生成器，这不起作用。

932
00:47:45,062 --> 00:47:49,431
所以不要试图在这里改变你的种类。

933
00:47:49,500 --> 00:47:51,967
我不确定在什么情况下它不起作用，

934
00:47:52,036 --> 00:47:54,636
但它往往不起作用。所以我们要做的就是删除

935
00:47:54,705 --> 00:47:57,772
他们。我只是将它们全部选中并按下Delete。和

936
00:47:57,841 --> 00:48:00,876
我要重新接通他们。重新布线是一件简单的事情

937
00:48:00,945 --> 00:48:03,278
向上。这次我要选择Show Detail。

938
00:48:03,347 --> 00:48:04,980
它让我告诉你获得它和

939
00:48:05,049 --> 00:48:07,883
击中显示细节，这是一种很好的副作用。

940
00:48:07,952 --> 00:48:10,852
我要把所有这三个电线连接起来

941
00:48:10,921 --> 00:48:14,689
这并不坏。但不幸的是，我也是

942
00:48:14,758 --> 00:48:17,593
必须在这里检查他们

943
00:48:17,661 --> 00:48:21,564
三个人都把标识符重新置于蒸汽状态。

944
00:48:26,737 --> 00:48:30,039
而且你可以看到他们三个都很好看

945
00:48:30,108 --> 00:48:33,408
现在细节。显示细节，显示细节，显示细节。所以

946
00:48:33,477 --> 00:48:35,978
现在当我们运行它会工作。

947
00:48:40,251 --> 00:48:42,084
好吧，我们走吧，交叉我们的手指。所以

948
00:48:42,152 --> 00:48:46,989
我们有这是万圣节风格。和运动。

949
00:48:47,057 --> 00:48:51,827
现在，它再次创造了一款新游戏，希望能与体育赛事结合。

950
00:48:51,896 --> 00:48:56,932
动物，与动物的新游戏。

951
00:48:57,001 --> 00:49:00,202
现在，真正的问题是我们打破了iPhone

952
00:49:00,271 --> 00:49:02,938
版本在这里？因为我们在这里做了很多iPad的工作。

953
00:49:03,007 --> 00:49:04,206
我们添加了这个分割视图，

954
00:49:04,275 --> 00:49:07,076
我们知道，至少不会在iPhone上工作

955
00:49:07,145 --> 00:49:10,745
iPhone Plus。我们改变了这些阶段

956
00:49:10,814 --> 00:49:15,083
查看详细。 iPhone无法显示拆分视图，所以

957
00:49:15,152 --> 00:49:17,219
它不能显示细节。这是否破坏了一切？

958
00:49:17,288 --> 00:49:21,690
答案是否定的。因为iOS真的很聪明

959
00:49:21,758 --> 00:49:24,460
它知道如果这种分裂的结构

960
00:49:24,528 --> 00:49:26,328
在里面用导航控制器查看，

961
00:49:26,397 --> 00:49:30,299
即使使用Show Detail的东西。当我们在iPhone上时，

962
00:49:30,368 --> 00:49:35,504
这意味着所有这些都在导航控制器中完成。所以

963
00:49:35,572 --> 00:49:39,808
这称为适应不同的特征集合。

964
00:49:39,877 --> 00:49:41,543
当我们谈论更多时，我们会讨论这个问题

965
00:49:41,612 --> 00:49:45,847
关于自动布局。但是这里出现我们的用户界面。

966
00:49:45,916 --> 00:49:48,817
有一件事有趣的事情要注意，它没有出现

967
00:49:48,886 --> 00:49:54,223
显示的主题，它出现再次显示与默认值

968
00:49:54,292 --> 00:50:00,061
主题。现在我可以回去选择一个主题，它的工作。

969
00:50:00,130 --> 00:50:03,899
但有趣的是，它出现时。当它第一次出现时，

970
00:50:03,968 --> 00:50:06,067
它会出现这个默认的主题。和

971
00:50:06,136 --> 00:50:09,371
这只是他们做出的决定，一些应用程序想要这样做，

972
00:50:09,440 --> 00:50:11,973
有些应用程序不会。我想苹果认为这是最多的

973
00:50:12,042 --> 00:50:14,443
常见的一个。在我们的例子中，我们不希望这样。

974
00:50:14,512 --> 00:50:17,746
我们希望它提出这个，对吧？所以

975
00:50:17,815 --> 00:50:21,283
如果我们有时间在我们的演示中，我们将解决这个问题。所以要做到这一点，

976
00:50:21,352 --> 00:50:23,485
我们必须成为分割视图的委托

977
00:50:23,554 --> 00:50:25,687
这是一项复杂的工作。

978
00:50:25,756 --> 00:50:28,657
代码并不复杂，但作为代表，你们

979
00:50:28,725 --> 00:50:32,027
还没有看到太多，所以我们必须这样做。但

980
00:50:32,096 --> 00:50:34,696
否则，请注意，它工作得很好。

981
00:50:34,765 --> 00:50:37,032
好吧，并注意到在iPhone上的风景，

982
00:50:37,101 --> 00:50:39,534
它不会做并排分割视图的事情。

983
00:50:39,603 --> 00:50:42,871
它使用整个屏幕。但是，在iPhone Plus上，

984
00:50:42,940 --> 00:50:45,307
让我们来看看iPhone 8 Plus和

985
00:50:45,375 --> 00:50:49,978
在那里运行。在加号时，它确实做了分割视图。

986
00:50:50,047 --> 00:50:52,481
你看？这是在这里做拆分视图，

987
00:50:52,550 --> 00:50:56,852
面孔，运动。所以它在这里做分割视图。

988
00:50:56,920 --> 00:51:01,356
但在肖像模式下，它是导航控制器。看到

989
00:51:01,425 --> 00:51:04,426
看看有一个后退按钮。我不能从左边滑出来，

990
00:51:04,495 --> 00:51:07,028
当我从左边拉出时，它会回到导航中

991
00:51:07,097 --> 00:51:12,401
控制器。所以iPhone Plus，iPhone 8 Plus，iPhone 7 Plus，

992
00:51:12,470 --> 00:51:16,872
这些都是iPad和iPad之间的混合设备

993
00:51:16,940 --> 00:51:21,876
苹果手机。好的，让我们再走一步

994
00:51:21,945 --> 00:51:24,946
把这整个东西放在标签栏控制器中。就这样

995
00:51:25,015 --> 00:51:28,117
你可以看到这看起来像什么。再次，真的很简单。

996
00:51:28,185 --> 00:51:30,819
我要再放大一次。任何时候我拖动这些视图

997
00:51:30,888 --> 00:51:33,254
控制器，他们带来了一堆额外的垃圾。所以

998
00:51:33,323 --> 00:51:36,525
这里是一个标签栏控制器。我只是把它拖出来。这里是。

999
00:51:36,593 --> 00:51:38,360
它把它带出来。我不知道你是否可以看到它。

1000
00:51:38,429 --> 00:51:41,997
但它实际上给了我两个小空白视图控制器

1001
00:51:42,066 --> 00:51:44,933
在那里，我会继续前进并离开。

1002
00:51:45,002 --> 00:51:48,003
我会把他们留在那里。它总共有三个标签。

1003
00:51:48,072 --> 00:51:49,672
所以让我们看看我们是否能够抓住这一点

1004
00:51:49,740 --> 00:51:50,839
把它拖到这里。所以

1005
00:51:50,908 --> 00:51:54,142
我会留下这两个作为标签和

1006
00:51:54,211 --> 00:51:57,379
那么我会控制拖动到我的分割视图来使它成为

1007
00:51:57,447 --> 00:52:01,149
关系视图控制器，这就是你如何添加它。

1008
00:52:01,218 --> 00:52:03,919
这不是一个segue。它只是将其添加为视图控制器

1009
00:52:03,988 --> 00:52:07,522
在那里。我们可以放大看看它是什么

1010
00:52:07,591 --> 00:52:11,293
在那里。这是我的标签栏控制器。如果你放大

1011
00:52:11,362 --> 00:52:13,795
在你可以看到它说标签栏控制器就在那里。和，

1012
00:52:13,864 --> 00:52:16,698
当然，我想把这个小箭头移到这里

1013
00:52:16,767 --> 00:52:18,467
它从标签栏控制器开始。

1014
00:52:18,535 --> 00:52:23,872
您可以设置小标签所具有的属性，

1015
00:52:23,940 --> 00:52:25,707
如果你想的话，在故事板中。你在这里看到？

1016
00:52:25,776 --> 00:52:28,009
如果你点击它。就像这是我的集中游戏所以

1017
00:52:28,078 --> 00:52:32,581
我可以说浓度。这些在这里添加的，

1018
00:52:32,649 --> 00:52:34,816
让我们看看它对他们有什么，也许我们会离开它。

1019
00:52:34,885 --> 00:52:39,287
它有项目一。第二项是两件事，

1020
00:52:39,356 --> 00:52:42,124
我们就这样离开它。你可以点击这些和

1021
00:52:42,193 --> 00:52:46,761
不只是设置它使用的名称。

1022
00:52:46,830 --> 00:52:49,531
我们在哪？所以当你放大时很难找到

1023
00:52:49,600 --> 00:52:50,332
你在哪里。

1024
00:52:50,401 --> 00:52:53,235
那就是我们经常放大的时候。所以我们也可以点击

1025
00:52:53,303 --> 00:52:55,404
在这件事情上，并设置像图像的东西。

1026
00:52:55,472 --> 00:52:58,506
顺便说一下，这个图像进入这个标签栏项目。

1027
00:52:58,575 --> 00:53:01,843
好的，这是一个仅限alpha的图像。所以所有的绘图你

1028
00:53:01,912 --> 00:53:04,312
do是透明像素还是不透明像素。

1029
00:53:04,381 --> 00:53:07,349
如果它们是透明的，那么iOS就是这样

1030
00:53:07,418 --> 00:53:09,985
通过那些透明像素和光线照射光线

1031
00:53:10,053 --> 00:53:12,520
这就是将显示为标签栏的内容。

1032
00:53:12,589 --> 00:53:16,157
另一件你可以做得很酷的事是你可以做到的

1033
00:53:16,226 --> 00:53:18,526
重新排列标签。所以在这里我有三个标签，

1034
00:53:18,595 --> 00:53:21,397
第1项，第2项。让我们把我们的专注力放在一个

1035
00:53:21,465 --> 00:53:25,934
最左边的选项卡。好吧，让我们再次运行它。干的好

1036
00:53:26,003 --> 00:53:31,707
它在iPhone 8 Plus上。这并不重要。好的，

1037
00:53:31,775 --> 00:53:34,076
开始了。你几乎看不到底部的这些标签。

1038
00:53:34,145 --> 00:53:35,444
我不知道是否有助于使它更大。

1039
00:53:35,512 --> 00:53:38,813
但他们在那里。有浓度标签。

1040
00:53:38,882 --> 00:53:41,183
这是项目1选项卡。这是项目2。

1041
00:53:41,252 --> 00:53:43,151
他们是空白的。如果我们回到浓度，

1042
00:53:43,220 --> 00:53:45,520
我们仍然有我们的完整的用户界面。好的，

1043
00:53:45,589 --> 00:53:48,990
它只是在一个选项卡上，如果我们旋转，也是如此。

1044
00:53:49,059 --> 00:53:53,261
这里有三个选项卡。好吧，那就是酒吧。所以

1045
00:53:53,330 --> 00:53:57,633
它真的很简单。好的。让我们谈谈另一个

1046
00:53:57,701 --> 00:54:01,804
我们有这个应用程序有点不可思议的事情。

1047
00:54:01,872 --> 00:54:05,874
我将再次在iPad上运行它。只要注意一下

1048
00:54:05,943 --> 00:54:08,610
它确实如此。其实在我做之前，即使我要做一个

1049
00:54:08,679 --> 00:54:13,181
其他的东西是让你告诉你如何从中继续

1050
00:54:13,250 --> 00:54:17,419
码。好吧，我们这里的游戏只是直接

1051
00:54:17,488 --> 00:54:19,821
从这些按钮，如果我点击一个segue它是直接

1052
00:54:19,890 --> 00:54:23,759
从按钮到MVC。有一种方法可以做到这一点

1053
00:54:23,827 --> 00:54:27,896
你这样做是在没有代码的情况下执行的

1054
00:54:27,965 --> 00:54:30,699
执行了segue线。所以表明我要删除

1055
00:54:30,768 --> 00:54:34,069
这些segue。所以现在按钮不再延续和

1056
00:54:34,138 --> 00:54:38,240
相反，我会从代码中退出。我会这样做的

1057
00:54:38,308 --> 00:54:40,909
改变这些按钮。而不是segue，

1058
00:54:40,978 --> 00:54:43,011
他们会做目标行动。所以

1059
00:54:43,079 --> 00:54:47,048
让我们把它们带到这里。放大一点。和

1060
00:54:47,117 --> 00:54:48,516
只是做我们的正常目标行动。

1061
00:54:48,585 --> 00:54:51,186
所以这与你做目标没什么两样

1062
00:54:51,255 --> 00:54:53,889
行动四分之一长。我只是要控制拖动

1063
00:54:53,957 --> 00:54:56,358
从这里的按钮，并创建一个动作。

1064
00:54:56,426 --> 00:54:59,261
我打算把这个动作叫做ChangeTheme，

1065
00:54:59,329 --> 00:55:02,097
因为这就是它要做的。只是为了好玩，

1066
00:55:02,166 --> 00:55:06,201
你知道我通常在哪里说，设置这个用户界面按钮或其他。

1067
00:55:06,270 --> 00:55:08,437
好吧，实际上现在你不需要设置那个UI Button或者

1068
00:55:08,506 --> 00:55:10,439
其他因为你知道如何处理任何。所以

1069
00:55:10,508 --> 00:55:12,508
我将把它和任何参数连接起来。

1070
00:55:12,576 --> 00:55:15,210
好的发件人，而不是被用户界面按钮它的任何，

1071
00:55:15,278 --> 00:55:17,212
而你现在知道如何处理。好的，

1072
00:55:17,281 --> 00:55:18,747
你以前没有，但现在你知道，

1073
00:55:18,816 --> 00:55:21,950
与你可以处理的。我们将介绍这一点，

1074
00:55:22,019 --> 00:55:25,554
我们将有三个按钮都发送相同的东西

1075
00:55:25,623 --> 00:55:28,690
这里。所以我会在这里放置一个选择主题，

1076
00:55:28,759 --> 00:55:30,659
但它不会来自特定的按钮。

1077
00:55:30,728 --> 00:55:34,863
它只是从这个视图控制器到这个继续

1078
00:55:34,932 --> 00:55:38,233
视图控制器。所以它有点像通用segue

1079
00:55:38,302 --> 00:55:41,536
这两者之间。那么你如何创建这样的segue？

1080
00:55:41,605 --> 00:55:44,306
好吧，你控制拖动像一个按钮，

1081
00:55:44,375 --> 00:55:47,309
而不是控制从某个UI元素拖动

1082
00:55:47,378 --> 00:55:49,711
你控制从这个小圆黄色的东西拖动。

1083
00:55:49,780 --> 00:55:51,913
你看这只是浓度主题控制。

1084
00:55:51,982 --> 00:55:56,018
这里的权利代表了这个MVC。这是事情

1085
00:55:56,086 --> 00:55:58,553
您可以使用拖动或拖动来表示此MVC。

1086
00:55:58,622 --> 00:56:01,390
所以，我要控制从这里拖动

1087
00:56:01,458 --> 00:56:04,593
到这里。好吧，它会显示细节，因为我们

1088
00:56:04,661 --> 00:56:06,995
处于分割视图上下文中。我要去这里和

1089
00:56:07,064 --> 00:56:11,466
仍然给它一个名字。同名，选择主题，现在，

1090
00:56:11,535 --> 00:56:13,968
我在这个视图控制器和之间创建了一个segue

1091
00:56:14,037 --> 00:56:15,603
这个视图控制器，不在这些按钮之间。

1092
00:56:15,672 --> 00:56:17,338
看到我点击这些按钮时，或

1093
00:56:17,407 --> 00:56:19,474
当我点击它时，它不会选择这些按钮。

1094
00:56:19,543 --> 00:56:22,143
它选择整个视图控制器。

1095
00:56:22,212 --> 00:56:24,779
所以，这就是你如何做一个手动循环。你创建

1096
00:56:24,848 --> 00:56:27,616
两个视图控制器之间的一段时间。然后，在你的

1097
00:56:27,685 --> 00:56:31,720
你只需说出与该主题名称相关的代码即可。

1098
00:56:52,676 --> 00:56:55,577
好的，或者你可能或不想在这里逗留。

1099
00:56:55,645 --> 00:56:58,080
现在，你也可以使用那个应该执行segue方法

1100
00:56:58,148 --> 00:57:00,715
有条件地继续，但我会告诉你我们该怎么做

1101
00:57:00,784 --> 00:57:02,484
有条件的在这里，

1102
00:57:02,553 --> 00:57:06,621
这是一个非常好的例子。所以，让我们回到我们的iPad

1103
00:57:06,690 --> 00:57:09,491
我们在这里跑的Pro。而且我会变得很酷

1104
00:57:09,559 --> 00:57:12,528
功能在这里，这是如果我在一场比赛中，

1105
00:57:12,596 --> 00:57:16,465
我讨厌运动，它不会取代这个。

1106
00:57:17,901 --> 00:57:20,402
这将实际上改变主题和飞行

1107
00:57:20,471 --> 00:57:24,138
不重置游戏。这不是一种更好的方式吗？

1108
00:57:24,207 --> 00:57:26,942
UI在这里？我们每次都不想开始新的游戏

1109
00:57:27,010 --> 00:57:28,343
改变主题。所以，

1110
00:57:28,412 --> 00:57:31,312
如果我要这样做，我不能segue。

1111
00:57:31,381 --> 00:57:34,515
你明白为什么我不能继续下去并做到这一点？因为总是在segue

1112
00:57:34,584 --> 00:57:38,987
创建一个新的MVC，所以没有办法让我继续下去

1113
00:57:39,055 --> 00:57:42,790
像这样保持这个MVC。所以，我必须在代码中这样做

1114
00:57:42,859 --> 00:57:46,094
相反，所以在这里改变主题，而不是segue。

1115
00:57:46,162 --> 00:57:49,698
我要看看我的分割视图控制器，和

1116
00:57:49,767 --> 00:57:54,803
在这里找到这个小视图控制器，

1117
00:57:54,872 --> 00:57:56,871
并直接与它交谈。只是要和它谈谈，

1118
00:57:56,940 --> 00:57:59,541
我不会继续下去，我会看看我能不能找到它。

1119
00:57:59,609 --> 00:58:01,276
如果我在那里找到它，我只是想谈谈它，

1120
00:58:01,345 --> 00:58:03,578
并告诉它改变它的主题。可以，然后呢

1121
00:58:03,646 --> 00:58:04,279
我该怎么做？

1122
00:58:04,348 --> 00:58:07,182
所以，现在，我要把那个我删除的代码放回去

1123
00:58:07,251 --> 00:58:09,484
这个主题名称在这里。和

1124
00:58:09,553 --> 00:58:14,989
如果我有一个主题，那么在这里，好吧，在这里面

1125
00:58:15,058 --> 00:58:18,627
我要谈谈我的分裂视图的细节。所以，

1126
00:58:18,696 --> 00:58:20,295
这将是一件事情，如果我在分裂的视角，

1127
00:58:20,364 --> 00:58:22,463
我可以找到我的细节，我只会和它谈谈

1128
00:58:22,532 --> 00:58:25,100
把它告诉主题，否则我会去做演出。

1129
00:58:25,169 --> 00:58:28,203
所以，这就是我的意思是关于有条件的执行这里。

1130
00:58:28,272 --> 00:58:31,072
所以，我会找出来，找到那个分割视图控制器

1131
00:58:31,141 --> 00:58:34,342
说，如果让cvc =然后我会创建一个小变量，

1132
00:58:34,411 --> 00:58:38,580
这是我的splitViewDetailConcentrationV-

1133
00:58:38,649 --> 00:58:43,819
iewController，如果我找不到它，可能为nil。所以，

1134
00:58:43,887 --> 00:58:46,621
我要这样做，然后如果我能找到那个，

1135
00:58:46,690 --> 00:58:50,792
那么我会得到主题并设置CVC主题相同

1136
00:58:50,861 --> 00:58:55,463
到这个主题。我们走了，

1137
00:58:55,532 --> 00:59:00,869
像那样。否则，我会执行segue。所以，每个人

1138
00:59:00,938 --> 00:59:03,038
看看我在这里做什么。所以，我只需要实现这一点。

1139
00:59:03,106 --> 00:59:05,840
这将是一个可以找到我的分割视图的变种

1140
00:59:05,909 --> 00:59:08,843
细节控制器作为浓度视图控制器。

1141
00:59:08,912 --> 00:59:11,346
所以，这将是一个名为this的私有变量。

1142
00:59:12,716 --> 00:59:14,649
复制粘贴。

1143
00:59:14,718 --> 00:59:17,219
这将是类型浓度视图控制器，

1144
00:59:17,287 --> 00:59:20,054
可选，但因为我可能无法找到它。

1145
00:59:20,123 --> 00:59:24,459
而我只是要返回我在if中的splitViewController

1146
00:59:24,527 --> 00:59:29,597
任何一点，它的viewControllers，这是主，

1147
00:59:29,666 --> 00:59:34,001
主数组和细节，对吧？点最后，

1148
00:59:34,070 --> 00:59:39,407
这应该是作为ConcentrationViewController的细节。

1149
00:59:39,476 --> 00:59:41,609
所以，如果所有的可选链接，和

1150
00:59:41,678 --> 00:59:43,277
那么就像通过这里一样，

1151
00:59:43,346 --> 00:59:45,814
然后我能够找到ConcentratonViewController

1152
00:59:45,883 --> 00:59:47,849
在我的splitViewController的细节。

1153
00:59:49,152 --> 00:59:51,085
看看我在那里做什么？好的，和

1154
00:59:51,154 --> 00:59:53,722
如果我能够做到这一点，那么我会在这里设置主题。

1155
00:59:53,790 --> 00:59:57,825
所以，让我们看看这是否有效。好吧，我们走吧，

1156
00:59:57,894 --> 00:59:59,695
让我们试试看。所以，我们在这里有我们的万圣节主题，

1157
00:59:59,763 --> 01:00:01,662
那很棒。现在，我会打体育，希望，

1158
01:00:01,731 --> 01:00:04,499
它不会重置游戏，因为它会希望找到

1159
01:00:04,568 --> 01:00:07,935
这个浓度视图控制器。呜呼！它只是

1160
01:00:08,004 --> 01:00:11,707
重置主题，没有重置游戏，因为我们没有继续。

1161
01:00:11,775 --> 01:00:15,743
我们这样做，而不是继续。好的，什么

1162
01:00:15,812 --> 01:00:18,346
关于这在iPhone上？这将在iPhone上运行？

1163
01:00:18,415 --> 01:00:22,516
我们来看看。可以，然后呢

1164
01:00:22,585 --> 01:00:24,986
让我们回去吧，其实，让我们在这里选择一个，让我们说，

1165
01:00:25,055 --> 01:00:28,290
这是我们的运动之一。现在，让我们回去尝试

1166
01:00:28,358 --> 01:00:32,728
改变它为动物和看到。不，它没有工作。

1167
01:00:33,863 --> 01:00:38,866
为什么它不工作？因为，哎呀。

1168
01:00:38,935 --> 01:00:42,470
对不起，因为我们只能做

1169
01:00:42,539 --> 01:00:45,073
这个如果我们在一个具有细节的分割视图控制器中

1170
01:00:45,141 --> 01:00:47,942
视图控制器。而在iPhone上没有细节

1171
01:00:48,011 --> 01:00:50,378
分割视图控制器。我们使用导航控制器

1172
01:00:50,447 --> 01:00:54,415
去解决它。那么，我们如何解决这个问题在iPhone上？好，

1173
01:00:54,484 --> 01:00:59,721
在iPhone上我们要做的就是抓住

1174
01:00:59,789 --> 01:01:04,092
一个我们继续使用的MVC，并且坚持一个强大的MVC

1175
01:01:04,160 --> 01:01:07,562
指针。所以，当它被抛弃导航

1176
01:01:07,631 --> 01:01:10,398
堆叠它不会离开堆，我们会保持住

1177
01:01:10,467 --> 01:01:13,701
的。然后下一次有人想要去它，

1178
01:01:13,770 --> 01:01:16,370
我们将直接放在导航控件上。

1179
01:01:16,439 --> 01:01:18,506
我们不会接近它，因为那会重置它。

1180
01:01:18,575 --> 01:01:20,208
我们会在那里推它，并且

1181
01:01:20,277 --> 01:01:22,977
它会告诉你我们如何做导航

1182
01:01:23,046 --> 01:01:25,012
控制器直接推送和弹出。

1183
01:01:25,081 --> 01:01:26,080
那么，我们该怎么做呢？好，

1184
01:01:26,149 --> 01:01:27,949
我只想在这里创建一个小的私有变量，

1185
01:01:28,018 --> 01:01:33,120
我将打电话给我的LastSeguedtToConcentrationVie-

1186
01:01:33,189 --> 01:01:37,059
wController，这将是

1187
01:01:37,127 --> 01:01:40,128
一个ConcentrationViewController可选。和

1188
01:01:40,197 --> 01:01:43,298
只要我成功，我就会设置这个

1189
01:01:43,367 --> 01:01:45,333
继续某事。所以，

1190
01:01:45,402 --> 01:01:49,637
这成为我最后的集中视图控制器。

1191
01:01:49,706 --> 01:01:51,505
对吗？所以我只是在那里抓住它。

1192
01:01:51,574 --> 01:01:54,309
这是一个已知的正常变量，所以它会成为一个强大的指针

1193
01:01:54,378 --> 01:01:56,477
太。它会保存在堆中。所以，

1194
01:01:56,546 --> 01:01:58,246
即使我们点击后退按钮，

1195
01:01:58,315 --> 01:02:00,548
它会从导航堆栈中抛出，但是

1196
01:02:00,617 --> 01:02:03,818
它会留在堆中，好吗？指向这个变种。

1197
01:02:03,886 --> 01:02:06,421
然后，在这里，当我们改变主题时，如果我做不到的话

1198
01:02:06,490 --> 01:02:10,759
splitView技巧，然后我会说，否则，如果我可以让

1199
01:02:10,828 --> 01:02:16,697
cvc相当于最后一件事的两件事。然后，

1200
01:02:16,766 --> 01:02:19,100
我只是将它推向导航堆栈。

1201
01:02:19,169 --> 01:02:21,769
并记住我们是如何从幻灯片中做到这一点的？我们只是说，

1202
01:02:21,838 --> 01:02:26,775
我所在的导航控制器，如果我在一个，

1203
01:02:26,843 --> 01:02:32,313
.pushviewController实际上是CVC的最后一个。

1204
01:02:32,382 --> 01:02:35,917
动画？真正。并且让我们确保我们，当然，

1205
01:02:35,986 --> 01:02:38,653
设定它的主题。必须在这里复制和粘贴代码，所以

1206
01:02:38,721 --> 01:02:41,556
我们会希望稍微清理一下。

1207
01:02:41,624 --> 01:02:46,361
但是我们会在推动之前在这里设定主题。好吧？

1208
01:02:47,330 --> 01:02:48,796
所以，这里有很多。

1209
01:02:48,865 --> 01:02:50,865
您正在了解如何找到拆分视图。

1210
01:02:50,934 --> 01:02:52,834
你正在学习如何把东西放在堆里

1211
01:02:52,903 --> 01:02:54,803
从导航甲板上被抛出。你正在学习如何

1212
01:02:54,871 --> 01:02:57,138
推动导航甲板上的东西而不会继续。

1213
01:02:57,207 --> 01:02:59,907
你正在学习如何从代码中退出。所有这一切

1214
01:02:59,976 --> 01:03:02,310
一种方法在这里。所以，让我们看看这是否有效。

1215
01:03:08,184 --> 01:03:08,916
好吧，我们继续，所以

1216
01:03:08,985 --> 01:03:11,319
我们会选择一个像动物一样的主题，

1217
01:03:11,388 --> 01:03:14,322
这里我们看起来不错。现在，我们走吧

1218
01:03:14,390 --> 01:03:17,892
将其改为运动，回到这里运动。呜呼，

1219
01:03:17,960 --> 01:03:21,462
它的工作，因为我们没有第二次继续。

1220
01:03:21,531 --> 01:03:24,532
我们第一次遇到它并且抓住了它。和

1221
01:03:24,601 --> 01:03:28,770
下一次，我们只是将它推到导航堆栈上，

1222
01:03:28,838 --> 01:03:33,041
并设置。我们可以回去把它设置成，你知道，运动，

1223
01:03:33,109 --> 01:03:39,514
如何面对动物。好的？所以，最后一个

1224
01:03:39,582 --> 01:03:44,619
我要做的事情，这个有点复杂。

1225
01:03:44,687 --> 01:03:47,455
再一次，实现起来并不复杂，但它使用了一些

1226
01:03:47,524 --> 01:03:50,458
在这里像委托的概念，你不习惯。

1227
01:03:50,527 --> 01:03:53,994
但我会做到这一点，当我运行我的iPhone版本时，

1228
01:03:54,063 --> 01:03:57,598
它不会显示给我一个集中游戏

1229
01:03:57,667 --> 01:04:02,704
默认的万圣节。我想让它出现这个。

1230
01:04:02,773 --> 01:04:06,674
所以，要做到这一点，我的ThemeChooserViewController

1231
01:04:06,742 --> 01:04:10,411
这里将成为分割视图的代表

1232
01:04:10,480 --> 01:04:13,048
它所在的控制器。请记住，即使在iPhone上，

1233
01:04:13,116 --> 01:04:14,849
即使它仍然在分割视图控制器中

1234
01:04:14,918 --> 01:04:18,553
不会将其显示为分割视图控制器。现在事实证明

1235
01:04:18,621 --> 01:04:22,824
那十个左右的视图委托方法之一是

1236
01:04:22,892 --> 01:04:27,495
一个控制它是否崩溃。他所说的

1237
01:04:27,563 --> 01:04:30,431
辅助视图控制器，这是细节。

1238
01:04:30,500 --> 01:04:33,067
它是否在主要的基础上崩溃

1239
01:04:33,136 --> 01:04:35,970
在任何时候，在应用程序的运行。所以我们

1240
01:04:36,039 --> 01:04:38,372
只是要实现splitView委托方法。

1241
01:04:38,441 --> 01:04:40,808
我们将会返回一些说明该做什么的bool。

1242
01:04:40,877 --> 01:04:43,144
我们只是要告诉它做正确的事情。

1243
01:04:43,213 --> 01:04:46,414
那么我们该怎么做？那么，首先我们必须设定我们的自我

1244
01:04:46,483 --> 01:04:49,183
作为分割视图控制器的代表，

1245
01:04:49,252 --> 01:04:51,852
我将在那个函数awakeFromNib中做到这一点。

1246
01:04:51,921 --> 01:04:54,021
我没有机会让你醒来从Nib。

1247
01:04:54,090 --> 01:04:56,157
这是每个出来的对象都要调用的函数

1248
01:04:56,226 --> 01:04:59,661
你的界面生成器文件。在这里你永远不会，

1249
01:04:59,729 --> 01:05:02,130
你永远不可能建立这个整体

1250
01:05:02,199 --> 01:05:05,099
拆分视图导航控制器标签栏的东西

1251
01:05:05,168 --> 01:05:08,269
在代码中，这将是很多杂乱的代码。

1252
01:05:08,338 --> 01:05:10,304
你要在故事板上制作它，所以没关系

1253
01:05:10,373 --> 01:05:12,840
我在awakeFromNib中做了这个小拆分视图技巧。

1254
01:05:12,909 --> 01:05:14,075
我不必担心

1255
01:05:14,144 --> 01:05:17,645
这是在其他地方创建的。我只是要告诉

1256
01:05:17,713 --> 01:05:22,450
我在我的SplitViewController中，如果我在一个，

1257
01:05:22,519 --> 01:05:26,053
将它的代表设置为我自己。所以

1258
01:05:26,122 --> 01:05:28,889
它会调用关于顶部折叠的方法

1259
01:05:28,958 --> 01:05:31,993
当然，现在它说你不能这样做，因为它说

1260
01:05:32,061 --> 01:05:36,130
自我不是UISplitViewControllerDelegate。

1261
01:05:36,199 --> 01:05:39,901
所以我必须在这里上去宣布我是一个

1262
01:05:39,970 --> 01:05:44,739
UISplitViewControllerDelegate及其中的所有方法

1263
01:05:44,808 --> 01:05:47,007
是可选的，它是一个Objective-C协议。

1264
01:05:47,076 --> 01:05:49,377
所以我已经实现了它，没有任何警告或

1265
01:05:49,445 --> 01:05:51,713
错误一切都很好。但我当然需要

1266
01:05:51,781 --> 01:05:54,115
要真正实现其中的一个就是崩溃。

1267
01:05:54,184 --> 01:05:55,216
而我不记得它叫什么，但是

1268
01:05:55,284 --> 01:05:58,253
我知道它已经崩溃了，它就在这里

1269
01:05:58,321 --> 01:06:03,391
这个。好吧，我会让你看看这个人。

1270
01:06:03,459 --> 01:06:07,661
它被称为UIViewController collapseSecondary

1271
01:06:07,730 --> 01:06:12,433
primaryViewController。和这个secondaryViewController

1272
01:06:12,502 --> 01:06:15,203
是primaryViewController的细节

1273
01:06:15,271 --> 01:06:18,005
大师。它基本上在这里问，

1274
01:06:18,074 --> 01:06:20,708
嘿我适应的事实，我是一个splitViewController

1275
01:06:20,777 --> 01:06:24,678
在iPhone上。我想用细节折叠细节

1276
01:06:24,747 --> 01:06:27,282
导航控制器，在主要的，

1277
01:06:27,350 --> 01:06:31,219
大师。我应该这样做。不幸的是，回报

1278
01:06:31,287 --> 01:06:34,021
这个价值看起来应该是真的，就这样做。

1279
01:06:34,090 --> 01:06:37,558
但实际上，如果我们想要防止这种情况发生，

1280
01:06:37,627 --> 01:06:41,195
我们回归真实。发生的原因是如果你回来

1281
01:06:41,264 --> 01:06:42,697
从这个方法错误，

1282
01:06:42,766 --> 01:06:46,234
你基本上说我没有为你这么折腾

1283
01:06:46,303 --> 01:06:49,403
你做吧。所以返回值是相反的。

1284
01:06:49,472 --> 01:06:52,640
但底线是如果我们不希望这种崩溃

1285
01:06:52,709 --> 01:06:56,811
发生，好吧，我们需要从这个方法返回true。

1286
01:06:56,880 --> 01:07:00,014
那么我们什么时候不想让它崩溃呢？那么，我们不想要

1287
01:07:00,083 --> 01:07:02,950
它随时随地崩溃secondaryViewController，

1288
01:07:03,019 --> 01:07:05,286
那个集中的游戏，有一个稀有的主题。

1289
01:07:05,355 --> 01:07:08,122
如果它没有主题，那么主题从未设置，

1290
01:07:08,190 --> 01:07:11,926
我们想，不想做那个崩溃。所以我只是会去

1291
01:07:11,995 --> 01:07:16,264
在这里说，如果我可以让cvc = secondaryViewController为

1292
01:07:16,332 --> 01:07:20,902
concentrationViewController。然后，

1293
01:07:20,970 --> 01:07:26,106
如果cve.theme ==nil。所以

1294
01:07:26,175 --> 01:07:30,378
它从未被设置，那么我将会返回false。除此以外，

1295
01:07:30,447 --> 01:07:34,716
我只会回到真实，这对系统是真实的

1296
01:07:34,784 --> 01:07:38,552
意味着是的，请为我崩溃。其实是的

1297
01:07:38,621 --> 01:07:40,622
另一种方式。看，我总是感到困惑，true和

1298
01:07:40,690 --> 01:07:44,992
false。如此真实意味着我做到了。但我其实并没有去

1299
01:07:45,061 --> 01:07:46,694
去做吧。所以它不会完成。

1300
01:07:46,763 --> 01:07:49,330
假意味着没有，我没有如此折叠它

1301
01:07:49,399 --> 01:07:51,599
你应该这样做。这很混乱。

1302
01:07:51,668 --> 01:07:53,167
即使我在这个真假之间感到困惑。

1303
01:07:53,235 --> 01:07:58,139
但这是事实。所以这有点复杂。

1304
01:07:58,208 --> 01:08:00,508
有一些先进的代表团使用。

1305
01:08:00,577 --> 01:08:04,578
但让我们看看它是否有效。所以当我们第一次运行它的时候，

1306
01:08:04,647 --> 01:08:07,949
因为那通常会在那里发生的事情

1307
01:08:08,018 --> 01:08:11,252
一个无主题，使用该默认主题。但

1308
01:08:11,321 --> 01:08:14,222
如果我点击，现在它会在那里崩溃，因为

1309
01:08:14,290 --> 01:08:17,691
主题不是nil。我将主题设置为运动，对吧？

1310
01:08:17,760 --> 01:08:20,261
所以现在这是一个体育主题。让我回到这里

1311
01:08:20,329 --> 01:08:23,031
现在我们正在获得重用，因为我们不是segwaying。

1312
01:08:25,001 --> 01:08:28,436
好吧，好吧，就这样，我给你看了

1313
01:08:28,505 --> 01:08:32,039
很多有关多个MVC的东西，对吧？所以，

1314
01:08:32,108 --> 01:08:35,043
你知道，确保你通过这一点堆积并理解它

1315
01:08:35,111 --> 01:08:37,779
所有这些都是因为你会在很多方面使用它

1316
01:08:37,847 --> 01:08:40,714
你的下一项任务马上。你必须这样做

1317
01:08:40,783 --> 01:08:42,784
几乎所有这些东西在你的下一个任务。

1318
01:08:44,287 --> 01:08:46,153
好吧，让我们跳回到幻灯片中

1319
01:08:46,222 --> 01:08:48,189
尽可能地到达这里

1320
01:08:48,257 --> 01:08:51,592
这个动画的东西。我们只有大约七八个

1321
01:08:51,661 --> 01:08:53,428
还剩几分钟，所以我们可能不会一路通过。

1322
01:08:53,496 --> 01:08:55,463
但没关系，我们会在星期三继续。

1323
01:08:57,500 --> 01:08:59,133
有关该MVC的任何问题？

1324
01:08:59,201 --> 01:09:03,704
我没有看到任何举手，所以。好吧，定时器，所以定时器，

1325
01:09:03,773 --> 01:09:06,707
在谈论动画之前，我正在谈论计时器。

1326
01:09:06,776 --> 01:09:09,210
定时器不是真的用于动画。

1327
01:09:09,279 --> 01:09:11,078
你不会使用计时器来做动画。

1328
01:09:11,147 --> 01:09:14,315
但有时它会与动画一起使用。所以

1329
01:09:14,384 --> 01:09:16,050
我在同一时间教它。

1330
01:09:16,119 --> 01:09:19,554
现在你们中有些人实际上在额外的功劳中使用了计时器

1331
01:09:19,622 --> 01:09:22,323
对于任务二我想，我不知道，是的任务

1332
01:09:22,392 --> 01:09:26,427
两个定时器是非常简单的小结构，

1333
01:09:26,495 --> 01:09:28,930
非常简单的结构。它基本上适合你

1334
01:09:28,998 --> 01:09:31,933
给它一个闭包，一个会执行的小函数

1335
01:09:32,001 --> 01:09:34,635
在未来某个时候。你告诉它多少，

1336
01:09:34,704 --> 01:09:37,538
未来两秒钟，十秒钟，一分钟，一小时，

1337
01:09:37,607 --> 01:09:39,273
它会去执行该代码。

1338
01:09:39,342 --> 01:09:41,175
如果你想或者可以每小时做一次

1339
01:09:41,244 --> 01:09:44,278
每两秒钟或它可以做一次。

1340
01:09:44,347 --> 01:09:49,184
那么我们如何使用Timer呢？最简单的方法来使用计时器

1341
01:09:49,252 --> 01:09:52,053
就是在调用timer的时候使用这个类的函数

1342
01:09:52,121 --> 01:09:55,189
scheduledTimer。它只有三个参数。

1343
01:09:55,258 --> 01:09:58,959
一个是等到执行它的时间间隔，

1344
01:09:59,028 --> 01:10:01,796
是否重复它，继续这样做，和

1345
01:10:01,865 --> 01:10:05,633
代码块是一个简单的小块

1346
01:10:05,701 --> 01:10:09,337
定时器作为参数并不返回任何内容。和

1347
01:10:09,405 --> 01:10:11,973
它会执行该代码，所以它不会更简单。

1348
01:10:12,042 --> 01:10:13,441
所以这里有一个例子，

1349
01:10:13,510 --> 01:10:17,278
我有这个私人弱变量，这是一个计时器，我会的

1350
01:10:17,347 --> 01:10:19,880
解释为什么这是weak，因为这是第一次

1351
01:10:19,949 --> 01:10:22,015
你看过我的outlet使用weak。

1352
01:10:22,084 --> 01:10:25,052
我只是设置该计时器变量等于结果

1353
01:10:25,121 --> 01:10:28,189
调用Timer.scheduledTimer。我在这里做TimeInterval

1354
01:10:28,257 --> 01:10:31,058
两秒钟，它重复。所以每两秒钟，

1355
01:10:31,126 --> 01:10:34,028
它会在这里实现你的代码。每次他

1356
01:10:34,097 --> 01:10:36,497
调用它，你将计时器传递给你

1357
01:10:36,565 --> 01:10:39,366
你有这些手。我把它放在var里，所以

1358
01:10:39,435 --> 01:10:42,036
我不需要它。但是，放过一段话很好

1359
01:10:42,104 --> 01:10:44,471
如果你不想将它存储在var中。

1360
01:10:44,540 --> 01:10:47,942
现在我为什么让这个weak。

1361
01:10:48,011 --> 01:10:52,213
我让它变弱，因为一旦定时器停止运行。

1362
01:10:52,281 --> 01:10:54,348
要么因为它不是一个重复的计时器或

1363
01:10:54,417 --> 01:10:56,751
因为有人阻止它重复。

1364
01:10:56,820 --> 01:10:59,720
那么没有人会有强大的指针。所以

1365
01:10:59,789 --> 01:11:02,389
如果我没有强有力的指针，

1366
01:11:02,458 --> 01:11:06,760
这个计时器var会发生什么？它被设置为nil。

1367
01:11:06,829 --> 01:11:10,130
这很棒。所以这次var会自动设置

1368
01:11:10,199 --> 01:11:12,766
在计时器停止后立即停止，这是一个真正的事情

1369
01:11:12,835 --> 01:11:15,502
不错的功能。所以我总能说出时代是否到来

1370
01:11:15,571 --> 01:11:17,004
那里，时间在那里奔跑

1371
01:11:17,073 --> 01:11:18,705
不管那件事是否为nil。所以

1372
01:11:18,774 --> 01:11:22,343
这是一个很酷的功能。那么你如何停止重复

1373
01:11:22,411 --> 01:11:24,578
计时器？你有计时器每两秒钟关闭一次。好，

1374
01:11:24,647 --> 01:11:27,615
你只需要发送无效的消息给定时器

1375
01:11:27,684 --> 01:11:33,153
它将不再运行。事实上无效将会抛出

1376
01:11:33,222 --> 01:11:37,858
它离开了堆并把我们的弱变量设置为零，这就是全部

1377
01:11:37,927 --> 01:11:41,862
要完成了。就是这样了。超级好用的类定时器，

1378
01:11:41,931 --> 01:11:45,566
结构计时器。现在计时器，对不起，我以为我没有放

1379
01:11:45,635 --> 01:11:48,035
这个宽容在这里。但是你也可以指定计时器

1380
01:11:48,104 --> 01:11:49,103
你的计时器有一个容差。

1381
01:11:49,172 --> 01:11:52,773
这只是说。如果这个计时器每小时一次关闭，就是这样

1382
01:11:52,842 --> 01:11:55,542
好吧，如果它提前30秒或晚了30秒。

1383
01:11:55,611 --> 01:11:58,745
这很好，为什么你想要设置宽容？因为

1384
01:11:58,814 --> 01:12:01,615
它可以帮助系统提高电池使用效率。

1385
01:12:01,684 --> 01:12:05,453
因为这个系统在一个小时后可能不会醒来，

1386
01:12:05,521 --> 01:12:06,820
它可能正在睡觉。

1387
01:12:06,889 --> 01:12:09,623
但它可能会唤醒检查细胞状态或

1388
01:12:09,692 --> 01:12:10,958
类似的东西，然后它可以运行它。

1389
01:12:11,027 --> 01:12:12,493
所以如果你给它一点宽容，

1390
01:12:12,562 --> 01:12:14,461
它不必特意醒来试试

1391
01:12:14,530 --> 01:12:17,097
运行你的计时器。顺便说一句，这些定时器，

1392
01:12:17,166 --> 01:12:19,967
即使他们有零容忍，他们也没有正确运行

1393
01:12:20,036 --> 01:12:23,003
在你指定的微秒上。这些不是

1394
01:12:23,072 --> 01:12:27,441
微秒级别的定时器。他们可能，我的意思是，在实践中，

1395
01:12:27,510 --> 01:12:30,144
他们可能是十分之一秒或百分之一秒，

1396
01:12:30,213 --> 01:12:33,047
非常可靠。但这些不适用于实时动画或

1397
01:12:33,115 --> 01:12:37,785
类似的东西。 >> [不可思议]

1398
01:12:37,854 --> 01:12:39,420
>>是的，所以问题是，

1399
01:12:39,488 --> 01:12:42,590
当应用程序在后台时，计时器可以运行吗？和

1400
01:12:42,659 --> 01:12:44,958
我们还没有谈到整个应用程序的生命周期，

1401
01:12:45,027 --> 01:12:47,361
当事情在后台，并且

1402
01:12:47,430 --> 01:12:48,595
我会谈论这个。但

1403
01:12:48,664 --> 01:12:51,198
答案是，一旦事情进入暂停状态，

1404
01:12:51,267 --> 01:12:54,535
不，没有在您的应用程序中运行。但在那30秒内

1405
01:12:54,604 --> 01:12:58,005
它不完全，你知道，背景，

1406
01:12:58,073 --> 01:13:01,075
它可以在短时间内运行。所以我们会谈谈所有关于

1407
01:13:01,144 --> 01:13:03,711
当我们谈论应用程序生命周期时。

1408
01:13:03,779 --> 01:13:05,779
当你去另一个应用程序时，你的应用程序会发生什么

1409
01:13:05,848 --> 01:13:10,684
例。好的，这里简要介绍几种

1410
01:13:10,753 --> 01:13:14,088
iOS中存在的动画或至少某些种类的动画。

1411
01:13:14,156 --> 01:13:17,024
一个是动画UIView属性，

1412
01:13:17,093 --> 01:13:18,459
有几个UIView属性，

1413
01:13:18,527 --> 01:13:20,127
非常重要的我们会谈论的，

1414
01:13:20,196 --> 01:13:22,262
你可以动画改变。

1415
01:13:22,331 --> 01:13:26,234
好吧，这是最常见的动画，继续，好吧，

1416
01:13:26,302 --> 01:13:28,335
我们会谈谈那一个。

1417
01:13:28,404 --> 01:13:30,571
然后是动画控制器转换，

1418
01:13:30,640 --> 01:13:32,673
这就像你在导航控制器，和

1419
01:13:32,742 --> 01:13:36,610
一张新牌位于甲板之上。那个动画

1420
01:13:36,679 --> 01:13:40,180
滑入或弹出或翻转，或其他。

1421
01:13:40,249 --> 01:13:42,883
这可以是动画，我们不会谈论任何事情

1422
01:13:42,952 --> 01:13:45,185
那。这是一种高级动画主题，

1423
01:13:45,254 --> 01:13:46,987
我们不会谈论这个。

1424
01:13:47,056 --> 01:13:48,655
有核心动画，

1425
01:13:48,724 --> 01:13:51,692
就像绘图UI下面有一个CA层一样，

1426
01:13:51,760 --> 01:13:55,262
在这个UIView属性下有一些核心动画

1427
01:13:55,331 --> 01:13:57,898
顶部的动画，我要谈谈。

1428
01:13:57,967 --> 01:14:00,134
我不会进入核心动画很多，

1429
01:14:00,202 --> 01:14:03,170
它基本上是用于动画属性的基元。

1430
01:14:03,239 --> 01:14:05,839
它可以动画不仅仅是我的UIView属性

1431
01:14:05,908 --> 01:14:08,342
会谈论，但我没有时间去得到

1432
01:14:08,411 --> 01:14:11,145
直至该层。即使对于UIView属性动画，

1433
01:14:11,214 --> 01:14:13,614
我只是想告诉你真正简单，

1434
01:14:13,683 --> 01:14:16,517
最好的方式来做到这一点。这门课大部分都是真的

1435
01:14:16,586 --> 01:14:19,553
试图让你介绍的东西，你可以看看

1436
01:14:19,622 --> 01:14:22,723
更详细的，如果你想做更详细的东西。如果你是

1437
01:14:22,792 --> 01:14:25,860
做3D，当然还有完整的3D动画引擎，

1438
01:14:25,928 --> 01:14:28,829
OpenGL和Metal，这是一个梦幻般的系统

1439
01:14:28,897 --> 01:14:32,199
这样做。我不会在这堂课讨论任何3D

1440
01:14:32,267 --> 01:14:34,302
无论如何，如果你是一个3D人物，

1441
01:14:34,370 --> 01:14:37,104
我假设你可能已经知道OpenGL。

1442
01:14:37,173 --> 01:14:40,241
你可能知道如何计算如何让你的OpenGL进入

1443
01:14:40,309 --> 01:14:43,878
你拥有一个观点，但这并不是那么困难。

1444
01:14:43,947 --> 01:14:46,714
SpriteKit也是一个完整的框架

1445
01:14:46,782 --> 01:14:48,349
做2.5D动画，

1446
01:14:48,417 --> 01:14:51,919
基本上就像马里奥兄弟那种动画，

1447
01:14:51,987 --> 01:14:54,988
对？。你有图像的地方，它们重叠在一起

1448
01:14:55,057 --> 01:14:57,725
创造看起来像是一个3D世界，但它确实如此

1449
01:14:57,793 --> 01:15:01,495
绘制2D，其中图像重叠。所以这是完整的

1450
01:15:01,564 --> 01:15:03,664
对此的机制，不会谈论这一点。

1451
01:15:03,733 --> 01:15:05,732
也许我们会有一个星期五的部分，可能，

1452
01:15:05,801 --> 01:15:07,234
本季度稍后。但我怀疑它，

1453
01:15:07,303 --> 01:15:11,004
因为我们在管道中有一些其他的东西。

1454
01:15:11,073 --> 01:15:13,607
最后，还有动态动画，

1455
01:15:13,676 --> 01:15:16,376
这是使用物理动画的视图。所以

1456
01:15:16,445 --> 01:15:18,946
你给视图一个质量和速度和

1457
01:15:19,015 --> 01:15:21,748
一个弹性，然后你操作它。

1458
01:15:21,817 --> 01:15:24,752
例如，你推它，它会开始飞过

1459
01:15:24,820 --> 01:15:27,254
屏幕。并取决于它的质量是多少

1460
01:15:27,322 --> 01:15:30,090
它碰撞什么，它会反弹并做各种各样的事情

1461
01:15:30,159 --> 01:15:33,493
的东西。我将在星期三告诉你。

1462
01:15:33,562 --> 01:15:37,231
因为这对于一些动人的观点来说真的很棒，

1463
01:15:37,299 --> 01:15:40,033
数学并让他们互相交流。

1464
01:15:40,102 --> 01:15:42,035
当你从iPhone的底部向上滑动时，

1465
01:15:42,104 --> 01:15:43,637
它有点反弹，

1466
01:15:43,706 --> 01:15:45,272
那是动态的动画，对吧？

1467
01:15:45,340 --> 01:15:48,375
这只是一点弹性和反弹。

1468
01:15:48,444 --> 01:15:49,510
让我们等待UIView动画，

1469
01:15:49,579 --> 01:15:51,812
因为我不想急于这么做，所以

1470
01:15:51,881 --> 01:15:53,714
我们将从星期三开始。

1471
01:15:53,782 --> 01:15:57,417
UIView属性动画就是这些黄色属性

1472
01:15:57,486 --> 01:16:00,154
就在你的视角，就像它在哪里，它的中心。

1473
01:16:00,223 --> 01:16:02,623
或者转换，请记住我们旋转的东西

1474
01:16:02,691 --> 01:16:06,527
当我们制作了卡片的角落时，视图颠倒了。

1475
01:16:06,596 --> 01:16:09,697
或者说alpha是多么的透明，让事物淡入淡出

1476
01:16:09,765 --> 01:16:12,333
或背景颜色，这是罕见的动画。

1477
01:16:12,401 --> 01:16:15,068
单独这些属性和这些属性，

1478
01:16:15,137 --> 01:16:18,572
您可以制作动画，以便您的视图可以跨屏幕飞行，

1479
01:16:18,641 --> 01:16:21,842
它可以淡出，它可以翻转，因为它

1480
01:16:21,911 --> 01:16:24,377
转化可以改变。它可以扩大规模并扩大规模

1481
01:16:24,446 --> 01:16:26,547
然后回到小，因为它的规模，

1482
01:16:26,616 --> 01:16:28,482
变换比例可以改变等。

1483
01:16:28,550 --> 01:16:30,884
所以有一个用于动画这些东西的API，

1484
01:16:30,953 --> 01:16:33,253
这就是我们将在周三开始的。

1485
01:16:33,322 --> 01:16:35,622
然后我会做动态动画，然后我们会做

1486
01:16:35,691 --> 01:16:38,024
一个演示，会在那个时候受到时间限制，但是

1487
01:16:38,093 --> 01:16:40,828
我们会做一个包含所有这些东西的演示，希望，

1488
01:16:40,896 --> 01:16:42,296
在里面。然后你的任务即将完成

1489
01:16:42,365 --> 01:16:45,399
周三到期是为了设置你的游戏和

1490
01:16:45,468 --> 01:16:47,634
添加动画。和

1491
01:16:47,703 --> 01:16:50,570
这也将是另一部分

1492
01:16:50,639 --> 01:16:54,408
多个MDC。好，听起来不错，没事，

1493
01:16:54,477 --> 01:16:57,144
我下次见。 >>更多信息，

1494
01:16:57,213 --> 01:17:00,381
请访问stanford.edu。

