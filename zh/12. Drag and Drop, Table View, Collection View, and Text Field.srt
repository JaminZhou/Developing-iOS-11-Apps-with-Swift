1
00:00:00,401 --> 00:00:04,937
[音乐]

2
00:00:05,005 --> 00:00:07,439
斯坦福大学。 >>好的，好吧，

3
00:00:07,508 --> 00:00:12,177
欢迎来到Stanford CS193P的第12讲座，

4
00:00:12,246 --> 00:00:16,481
2017年秋天。今天，我们将继续演示

5
00:00:16,550 --> 00:00:19,251
我们从表情符号艺术开始，我们会，

6
00:00:19,320 --> 00:00:22,787
我们在最后一次了解了一些关于表格视图的知识。

7
00:00:22,856 --> 00:00:25,791
这一次，我们要了解更多关于集合视图和

8
00:00:25,860 --> 00:00:28,293
也学习一点点如何拖放和

9
00:00:28,362 --> 00:00:31,229
集合视图和表视图全部放在一起。然后我是

10
00:00:31,298 --> 00:00:33,498
会回到幻灯片并谈论TextField。

11
00:00:33,567 --> 00:00:36,468
我原本打算在表情符号艺术中做一个演示，

12
00:00:36,537 --> 00:00:38,437
在那里添加一个TextField，但是

13
00:00:38,505 --> 00:00:41,673
我们也必须在今天早些时候完成，因为有一些

14
00:00:41,742 --> 00:00:44,609
巨大的中期，在这个房间在我们后面，和

15
00:00:44,678 --> 00:00:46,911
我们必须有时间清理出这里

16
00:00:46,980 --> 00:00:51,082
所以，我可能会在下周一做第一件事，

17
00:00:51,151 --> 00:00:54,653
或者我可能跳过这个演示，我们会​​看看它是如何发展的。

18
00:00:55,856 --> 00:00:57,489
好，那么回到表情符艺术吧。

19
00:00:57,558 --> 00:01:01,359
我们要做的就是先制作表情符艺术

20
00:01:01,428 --> 00:01:04,796
可滚动的，因为我们没有，它只是目前，

21
00:01:04,865 --> 00:01:08,333
它是固定的。然后我们要添加一个collectionView

22
00:01:08,401 --> 00:01:10,134
那里的顶部，你从演示中记住它，

23
00:01:10,203 --> 00:01:13,205
我们将能够从中选择我们的表情符号。和

24
00:01:13,273 --> 00:01:16,908
那么我们会添加一些拖放

25
00:01:16,977 --> 00:01:20,912
collectionView，包括我们的视图和其他应用程序，以及

26
00:01:20,981 --> 00:01:26,218
反之亦然等。所以让我们，实际上，

27
00:01:26,287 --> 00:01:31,589
让我们快速看看我们的应用程序是什么样的

28
00:01:31,658 --> 00:01:36,628
远，好吧，它基本上可以很好地工作

29
00:01:36,697 --> 00:01:41,833
我们可以拿起图像。所以我在这里拿起一张图片

30
00:01:41,902 --> 00:01:44,869
将其拖入并放下即可更改它。

31
00:01:44,938 --> 00:01:47,739
当然，我们在左边有我们的表格视图

32
00:01:47,808 --> 00:01:50,242
选择文件和添加文件。

33
00:01:50,310 --> 00:01:52,677
当然，我们还没有把我们的表格视图挂上去，而且

34
00:01:52,746 --> 00:01:55,847
没关系，但是因为下周我们会这样做。但

35
00:01:55,916 --> 00:01:58,750
有一件事我想让你注意一下这个表格视图

36
00:01:58,819 --> 00:02:02,654
这有点令人讨厌的是我无法摆脱它。

37
00:02:02,722 --> 00:02:05,157
在这里看到这个表格视图？你无法将其滑开，

38
00:02:05,226 --> 00:02:07,993
这是因为本质上，这个应用程序认为

39
00:02:08,062 --> 00:02:10,929
它在iPad上处于横向模式，当然，

40
00:02:10,998 --> 00:02:14,098
这个主人和splitView的细节是并排的。

41
00:02:14,167 --> 00:02:17,436
但是，由于我在这里处于多任务模式，

42
00:02:17,504 --> 00:02:19,738
我的屏幕大部分被占用，

43
00:02:19,806 --> 00:02:21,973
Safari在右边，

44
00:02:22,041 --> 00:02:26,211
这很烦人，因为我真的想专注于我的

45
00:02:26,279 --> 00:02:29,581
表情符号艺术文件。所以我会跟你谈谈一点

46
00:02:29,649 --> 00:02:32,550
如何做到这一点，使左侧的splitView可以

47
00:02:32,619 --> 00:02:35,887
即使在splitView和横向模式下也不会滑动。

48
00:02:35,955 --> 00:02:39,024
所以这是我们要做的第一件小事。让我们

49
00:02:39,092 --> 00:02:42,661
跳过我们的代码在这里，看看我们是如何做到这一点。

50
00:02:42,730 --> 00:02:46,131
这很容易，实际上，splitView有一个var，

51
00:02:46,200 --> 00:02:49,634
其中的一个属性称为首选显示模式，

52
00:02:49,703 --> 00:02:54,139
你可以通过它来控制主人发生的事情。

53
00:02:54,208 --> 00:02:56,341
而且，这只是默认的不是我们的

54
00:02:56,409 --> 00:02:59,444
想。现在有点奇怪的事情，

55
00:02:59,512 --> 00:03:04,016
我将在我的主代码中设置这个var。所以我要走了

56
00:03:04,084 --> 00:03:07,486
我的emojiArtDocument TableViewController，对吧？

57
00:03:07,554 --> 00:03:10,088
这是TableViewController与一，二，三，

58
00:03:10,157 --> 00:03:11,990
我们想要滑出的东西。和

59
00:03:12,058 --> 00:03:14,626
我要设定它是一个不寻常的地方。

60
00:03:14,695 --> 00:03:18,463
我将把它设置在viewWillLayoutSubviews中。和

61
00:03:18,532 --> 00:03:20,531
你可能会喜欢，哇，viewWillLayoutSubviews，

62
00:03:20,600 --> 00:03:22,801
这似乎是一个奇怪的地方来设置。好，

63
00:03:22,869 --> 00:03:25,770
我要设置它的原因是因为布局时

64
00:03:25,839 --> 00:03:28,907
splitView的变化，它经常重置那个首选项

65
00:03:28,976 --> 00:03:32,577
模式。所以如果我想继续执行这个事情，

66
00:03:32,646 --> 00:03:35,814
主人在顶级模式下滑动，我必须保持

67
00:03:35,883 --> 00:03:38,950
告诉它这样做，但我也必须小心

68
00:03:39,018 --> 00:03:42,587
因为设置该首选模式可能导致其中继

69
00:03:42,656 --> 00:03:44,989
出。所以我不想在这里陷入无限循环，

70
00:03:45,058 --> 00:03:46,458
对，在LayoutSubViews中，

71
00:03:46,526 --> 00:03:48,760
我正在设置首选模式，这是导致布局，

72
00:03:48,828 --> 00:03:52,697
我要回来了，所以我会说，如果我的话

73
00:03:52,766 --> 00:03:56,034
splitViewController？.prefer，红色，

74
00:03:56,103 --> 00:03:59,671
调用给preferredDisplayMode！=一个我

75
00:03:59,740 --> 00:04:03,008
想。你可以看到这里有很多，

76
00:04:03,077 --> 00:04:06,311
有primaryOverlay，有primaryHidden，

77
00:04:06,380 --> 00:04:09,681
有Automatic，总是有ShowBoth等。

78
00:04:09,750 --> 00:04:13,318
但是我想要的是primaryOverlay，所以如果不是

79
00:04:13,387 --> 00:04:18,156
primaryOverlay，然后我要设置我的splitViewControllers，

80
00:04:18,225 --> 00:04:22,394
preferredDisplayMode = .primaryOverlay。所以

81
00:04:22,463 --> 00:04:25,897
每次都会继续执行它，即使，

82
00:04:25,965 --> 00:04:28,300
每当我们旋转或什么的时候，

83
00:04:28,368 --> 00:04:32,303
我会继续强迫这个因为我总是想要这个，这个

84
00:04:32,372 --> 00:04:36,408
表格视图出现在我的表情符号艺术视图之上。

85
00:04:36,477 --> 00:04:40,211
但我也希望能够将它滑开，

86
00:04:40,280 --> 00:04:42,614
我只是把它擦掉了。

87
00:04:42,682 --> 00:04:46,785
等等，你看不到，坚持，我会告诉你。让我隐藏

88
00:04:46,853 --> 00:04:50,522
在这里，隐藏他人，好的，所以在这里，我正在刷卡，并且

89
00:04:50,591 --> 00:04:53,624
然后我把它擦掉。刷卡，刷卡

90
00:04:53,693 --> 00:04:56,828
离开，我总是希望它是那样，因为它非常

91
00:04:56,897 --> 00:04:59,830
不重要的访问此表。我只是在这里进去

92
00:04:59,899 --> 00:05:03,234
选择我想要的文件，现在文件在那里，

93
00:05:03,303 --> 00:05:05,570
我想要让你知道更多的空间，

94
00:05:05,639 --> 00:05:08,473
拖我的东西，尽可能在这里工作。

95
00:05:08,541 --> 00:05:12,110
你知道主要覆盖的东西吗？

96
00:05:12,179 --> 00:05:14,312
我会请你在你的家庭作业中这样做，就这样

97
00:05:14,381 --> 00:05:18,082
你有点看到，这是关于那里的一切。好吧，

98
00:05:18,151 --> 00:05:21,686
我想要做的下一件事就是让它如此

99
00:05:21,755 --> 00:05:24,956
我的EmojiArtView是可滚动的

100
00:05:25,024 --> 00:05:29,026
zoomable，right，cuz现在，它只是一个固定的图像。

101
00:05:29,095 --> 00:05:30,262
我们已经知道如何做到这一点，所以

102
00:05:30,330 --> 00:05:32,830
我不会浪费太多时间向你展示如何制作

103
00:05:32,899 --> 00:05:35,800
它可以滚动，我会尽快完成。我会有一些

104
00:05:35,869 --> 00:05:39,170
但是这不是什么新鲜事，它什么都不是

105
00:05:39,239 --> 00:05:42,140
你以前从未见过，在我们以前的演示中。

106
00:05:42,208 --> 00:05:44,576
所以我要回到我的故事板，在这里，

107
00:05:44,645 --> 00:05:48,346
就在这儿。我要去看这个viewController的权利

108
00:05:48,415 --> 00:05:51,750
在这里，而不是，现在，我们有什么，

109
00:05:51,819 --> 00:05:54,953
只是为了提醒你，我们是否有这个放置区。

110
00:05:55,021 --> 00:05:57,222
在放置区域内，我们只放置了EmojiArtView。

111
00:05:57,290 --> 00:05:59,925
这就是为什么它不能在那里滚动。所以我会去的

112
00:05:59,993 --> 00:06:03,427
删除它，而是我会把scrollView放在那里，

113
00:06:03,496 --> 00:06:06,631
所以我要去这里搜索一个scrollView，

114
00:06:06,700 --> 00:06:09,667
这里是。我要在这里拖动scrollView，我会

115
00:06:09,736 --> 00:06:12,070
将scrollView固定到放置区域的边缘，

116
00:06:12,139 --> 00:06:13,605
当然。所以我会去这里和

117
00:06:13,674 --> 00:06:16,241
只需将其固定到边缘即可。我们知道如何做到这一点

118
00:06:16,309 --> 00:06:18,809
有了这个小pin 的东西，bloop，它旋转了出来，就是这样

119
00:06:18,878 --> 00:06:23,048
大。现在我要为这个scrollView创建一个出口，

120
00:06:23,116 --> 00:06:26,884
放它，我们要放在哪里？我们说得对

121
00:06:26,953 --> 00:06:29,754
在放下区域，在这里。所以我会按Ctrl +拖动，

122
00:06:29,823 --> 00:06:34,993
创建该scrollView。现在我们知道，当我们

123
00:06:35,062 --> 00:06:39,064
有这样的scrollView出口，顺便说一下，在这里，

124
00:06:39,132 --> 00:06:42,767
这emojiArtView不再是一个出路。好的，

125
00:06:42,836 --> 00:06:45,337
它只是一个普通的变种和

126
00:06:45,405 --> 00:06:49,006
我只会设置它=创建一个。这正是我们的

127
00:06:49,075 --> 00:06:52,276
在我们的其他演示中使用了我们的图像视图。所以我们还没有完成

128
00:06:52,345 --> 00:06:55,780
这里任何新东西。当我们有这样的scrollView时，

129
00:06:55,849 --> 00:06:57,815
我们记得我们必须设置其最小滚动视图，

130
00:06:57,884 --> 00:06:59,817
最大。我们必须设置代表，

131
00:06:59,886 --> 00:07:01,419
我们必须实现该视图以进行缩放。

132
00:07:01,487 --> 00:07:04,188
还记得这一切吗？所以我会尽快做到这一切

133
00:07:04,257 --> 00:07:08,259
这里。试着记住我所说的，是的，emojiscroll。

134
00:07:08,328 --> 00:07:11,029
所以在这里，这是所有的代码。我只是在那里弹出它。

135
00:07:11,098 --> 00:07:14,932
事实上，让我去这里展示它，所以

136
00:07:15,001 --> 00:07:16,701
你可以看到。所以这里是ScrollView Outlet。

137
00:07:16,770 --> 00:07:20,037
所以我只是加了一个didSet来设置这些东西，

138
00:07:20,106 --> 00:07:22,173
对，代表。然后我将它添加为子视图。

139
00:07:22,241 --> 00:07:23,875
这里是viewForZooming。

140
00:07:23,943 --> 00:07:26,378
我们显然正在放大我们的emojiArtView。

141
00:07:26,446 --> 00:07:29,180
然后我在这里添加了一个var emojiArt背景图片，

142
00:07:29,249 --> 00:07:31,816
我们需要做的就是设置我们的内容

143
00:07:31,885 --> 00:07:33,918
大小等于框架。

144
00:07:33,987 --> 00:07:36,454
对，记得我们想要那个。我们总是想要那个框架

145
00:07:36,523 --> 00:07:39,023
我们的图片视图与我们的内容大小相同。

146
00:07:39,092 --> 00:07:41,025
我在这里放了一些缩放代码，你可以去

147
00:07:41,094 --> 00:07:42,360
后来看，这很有趣，

148
00:07:42,429 --> 00:07:46,364
给它一个很好的初始缩放。接着，

149
00:07:46,433 --> 00:07:48,700
当然，我们需要在这里下去并使用它。

150
00:07:48,769 --> 00:07:51,503
所以我们不用设置表情符号艺术，而是使用背景

151
00:07:51,571 --> 00:07:54,839
直接图像，我会用这个表情符号艺术背景

152
00:07:54,908 --> 00:07:59,811
我刚刚创建的图像变种。这就是这个变种。

153
00:08:01,114 --> 00:08:03,448
嘿，大家。看到我在那里做的一切？

154
00:08:03,517 --> 00:08:06,784
当然，它抱怨我不是UI分割视图

155
00:08:06,853 --> 00:08:09,954
或者用户界面滚动视图委托的方式，所以我会这样做。

156
00:08:10,023 --> 00:08:14,592
UI滚动视图委托，现在我实现了。所以

157
00:08:14,661 --> 00:08:19,397
让我们确保这一切工作。所以在这里我在我的应用程序，

158
00:08:19,466 --> 00:08:21,599
我只是想把那个东西抹掉。

159
00:08:21,668 --> 00:08:23,968
我要在这里抓住一张图片并拖动

160
00:08:24,036 --> 00:08:28,072
把它放进去。在这里，希望我能滚动。呼！

161
00:08:28,141 --> 00:08:31,809
我可以在滚动盘周围滚动

162
00:08:31,878 --> 00:08:35,413
滚动，但你知道什么？这看起来非常难看

163
00:08:35,482 --> 00:08:37,782
在左上角有这个东西。像那样，

164
00:08:37,850 --> 00:08:40,185
如果我真的在做这件事，而且我有

165
00:08:40,253 --> 00:08:41,385
对我左上方的所有工作来说，

166
00:08:41,454 --> 00:08:43,654
那绝对是荒谬的。所以

167
00:08:43,723 --> 00:08:46,824
我真正想要的是，我希望这件事保持中心。

168
00:08:46,893 --> 00:08:49,693
当我放大和缩小时，当我在这里缩小时。

169
00:08:49,762 --> 00:08:52,697
当我放大时，我想在中间说。不要跳起来

170
00:08:52,766 --> 00:08:55,767
像那样左边。那么我该怎么做呢？

171
00:08:55,836 --> 00:08:58,769
那么，实际上有很多方法可以做到这一点。我会去的

172
00:08:58,838 --> 00:09:01,272
以简单的方式做到这一点，让我教你如何

173
00:09:01,340 --> 00:09:05,377
从代码中控制故事板中的约束。

174
00:09:07,047 --> 00:09:09,247
这就是我要做的事情

175
00:09:09,315 --> 00:09:12,117
告诉你这里。所以我要做的是我要回去

176
00:09:12,185 --> 00:09:16,954
到我的故事板。我会去的

177
00:09:17,023 --> 00:09:22,093
有这个滚动视图在这里总是居中。

178
00:09:22,162 --> 00:09:24,028
所以我会在这个中心保留这个滚动视图，

179
00:09:24,097 --> 00:09:26,498
现在，通常情况已经发生了，因为我是固定的

180
00:09:26,566 --> 00:09:29,500
到边缘。所以当然它在中心，但是

181
00:09:29,569 --> 00:09:33,370
我要做的是有滚动视图的宽度和

182
00:09:33,439 --> 00:09:37,008
高度坚持其内容大小。所以，如果你放大

183
00:09:37,077 --> 00:09:38,843
内容区域变得非常小，

184
00:09:38,912 --> 00:09:40,945
滚动视图会变小，它会留下来

185
00:09:41,014 --> 00:09:42,947
居中。所以我们就是这么做的，就是这样

186
00:09:43,016 --> 00:09:46,251
诀窍。那么我们该怎么做？那么，我们当然需要

187
00:09:46,319 --> 00:09:48,553
让它在我们的滚动视图中保持居中。

188
00:09:48,622 --> 00:09:51,789
所以我要点击这里，然后选择水平和

189
00:09:51,858 --> 00:09:54,392
垂直放在容器中，所以现在它居中。

190
00:09:54,461 --> 00:09:56,494
再一次，那是因为其他人没有做任何事情

191
00:09:56,563 --> 00:09:59,864
限制。但我仍然想要这些其他限制

192
00:09:59,933 --> 00:10:02,600
这里。我只是不希望他们被修理。

193
00:10:02,669 --> 00:10:04,935
我希望他们大于或等于。这是一些东西

194
00:10:05,004 --> 00:10:07,638
我们也在前一个中做过。所以我要编辑所有的

195
00:10:07,707 --> 00:10:10,875
这些关于边缘的要比平等更大，

196
00:10:10,944 --> 00:10:13,978
因为我真的只想让我的滚动视图永远不会去

197
00:10:14,047 --> 00:10:15,546
在界限之外。

198
00:10:15,615 --> 00:10:18,682
但我很好，如果我的滚动视图比界限小，

199
00:10:18,751 --> 00:10:20,318
我只是不希望它比界限更大，所以

200
00:10:20,386 --> 00:10:22,921
这就是为什么我把这个大于或等于

201
00:10:22,989 --> 00:10:27,358
这里。现在你可以看到事情变成了红色。那是

202
00:10:27,426 --> 00:10:31,429
因为它现在还没有确定滚动的大小

203
00:10:31,498 --> 00:10:36,100
视图是。因为我们把这些平等变成了

204
00:10:36,169 --> 00:10:39,103
大于或等于，所以它不知道它有多大。所以

205
00:10:39,171 --> 00:10:41,473
我将要修复大小以开始。

206
00:10:41,541 --> 00:10:43,641
我要按CTRL自己拖动。和

207
00:10:43,709 --> 00:10:47,612
修复它的宽度和高度。修复它，但

208
00:10:47,681 --> 00:10:51,148
当然现在滚动视图总是会变成这样的大小

209
00:10:51,217 --> 00:10:55,019
这是，我们会看看这里，找出来。 748乘703和

210
00:10:55,088 --> 00:10:57,922
一半。所以我显然不希望那样。我想成为

211
00:10:57,991 --> 00:11:00,091
能够做到的就是让这个宽度和宽度成为可能

212
00:11:00,159 --> 00:11:03,694
高度等于滚动视图的内容大小。现在，

213
00:11:03,763 --> 00:11:05,563
不幸的是我不能这样做。

214
00:11:05,632 --> 00:11:08,032
我只知道控制阻力的方法。要做到这一点，

215
00:11:08,101 --> 00:11:11,936
我必须在代码中这样做。所以，我要outlets

216
00:11:12,005 --> 00:11:16,907
这两个约束，然后修改代码中的这些outlets。

217
00:11:16,976 --> 00:11:19,310
所以，在高度内是由我的代码控制的。

218
00:11:19,378 --> 00:11:21,312
所以，这里就是诡计。和

219
00:11:21,381 --> 00:11:23,982
我想要做的最后一件事是我会尝试和

220
00:11:24,050 --> 00:11:27,285
将滚动视图大小设置为其内容大小。但如果它

221
00:11:27,353 --> 00:11:30,888
变得非常大，我想要这些其他限制赢得。

222
00:11:30,957 --> 00:11:32,890
我想要限制它不会熄灭，所以

223
00:11:32,959 --> 00:11:33,591
边缘是赢。

224
00:11:33,659 --> 00:11:36,194
所以这就是为什么我要确定这两者的优先级

225
00:11:36,263 --> 00:11:37,461
身高和身高

226
00:11:37,530 --> 00:11:41,765
宽度较宽。所以这里的优先权在这里。

227
00:11:41,834 --> 00:11:43,534
目前它在要求的水平。

228
00:11:43,603 --> 00:11:47,705
我要把它们都放在低优先级上。和

229
00:11:47,774 --> 00:11:50,841
所以当它位于界限内时它会很好，因为它

230
00:11:50,910 --> 00:11:53,544
不会有冲突。但一旦滚动视图变得很大，因为我

231
00:11:53,613 --> 00:11:56,247
放大的方式然后它将被固定到边缘

232
00:11:56,316 --> 00:11:59,884
完善。好，那么我该如何在这些渠道上outlets 呢？

233
00:11:59,953 --> 00:12:01,552
当然只是控制拖动。所以

234
00:12:01,621 --> 00:12:04,689
我要提出我的代码，我们会把它放在那里。

235
00:12:04,757 --> 00:12:06,891
所以我会按Ctrl拖动。

236
00:12:06,959 --> 00:12:10,094
在这里你可以看到这个outlet的类型是NS

237
00:12:10,163 --> 00:12:14,666
布局约束。我会称这是我的滚动视图宽度。

238
00:12:16,135 --> 00:12:19,204
这里与高度相同。我们将按Ctrl拖动。

239
00:12:19,272 --> 00:12:24,108
这将是我的滚动视图高度。现在

240
00:12:24,177 --> 00:12:26,410
我们将如何改变这些限制？

241
00:12:26,479 --> 00:12:28,612
所以如果你看看检查员的约束条件，

242
00:12:28,681 --> 00:12:30,014
让我们来检查这些限制，

243
00:12:30,083 --> 00:12:32,416
像约束宽度。这些都是你可以做的

244
00:12:32,485 --> 00:12:34,953
在一个约束中设置，对，所涉及的项目，

245
00:12:35,021 --> 00:12:37,055
关系是否等于，大于或等于

246
00:12:37,123 --> 00:12:40,224
少于。看你可以设置常数

247
00:12:40,293 --> 00:12:43,861
目前是703点半。这是我想要的

248
00:12:43,930 --> 00:12:47,165
改变来修正我的宽度，这个常数在这里。所以

249
00:12:47,233 --> 00:12:49,200
我只是要在我的代码中改变这个常量。

250
00:12:49,268 --> 00:12:53,304
现在我什么时候需要改变它？得到这样你可以看到这里。

251
00:12:53,373 --> 00:12:55,406
我什么时候需要改变这些常量？

252
00:12:55,475 --> 00:12:58,409
那么随时我放大我肯定需要改变它，

253
00:12:58,478 --> 00:12:59,710
对？因为当我缩放时，

254
00:12:59,779 --> 00:13:02,213
我想让我的滚动视图改变大小。所以，

255
00:13:02,281 --> 00:13:06,918
让滚动视图做缩放委托方法。和

256
00:13:06,986 --> 00:13:11,121
我要在这里做的所有事情都是设置我的滚动视图高度

257
00:13:11,190 --> 00:13:15,360
常数等于滚动视图的内容大小。

258
00:13:16,429 --> 00:13:18,796
ContentSize.height。

259
00:13:18,865 --> 00:13:22,199
同样的事情在这里，scrollViewWidth.constant是

260
00:13:22,268 --> 00:13:25,703
等于scrollView.contentSize.Width。

261
00:13:25,772 --> 00:13:29,340
所以现在我只是将scrollView的宽度固定为

262
00:13:29,409 --> 00:13:32,343
其内容大小。现在，如果它变得太大，

263
00:13:32,412 --> 00:13:35,513
这个限制会失去，因为它的优先级低。

264
00:13:35,582 --> 00:13:37,014
显然，我需要做的另一个地方是，

265
00:13:37,083 --> 00:13:39,850
当我第一次在这里设置图像时，

266
00:13:39,919 --> 00:13:41,719
当我第一次设置所有这些内容的大小和

267
00:13:41,788 --> 00:13:45,222
所有这一切。所以在这里我要小心点

268
00:13:45,291 --> 00:13:48,426
如果在准备过程中被调用，可以选择链。

269
00:13:48,495 --> 00:13:51,729
可能，得到，做到这一点，然后，我有内容大小，

270
00:13:51,798 --> 00:13:53,998
实际上，在这里的一个局部变量，大小，

271
00:13:54,067 --> 00:13:57,635
从这里设置这些东西。好的。就是这样。

272
00:13:57,703 --> 00:14:02,506
所以让我们来看看这是否足以使这项工作。和

273
00:14:02,575 --> 00:14:05,742
从代码控制你的约束，我会告诉你

274
00:14:05,811 --> 00:14:07,978
另一个例子。我不会去做另一个例子，

275
00:14:08,047 --> 00:14:09,680
因为我不想，我没有时间在演示中

276
00:14:09,749 --> 00:14:13,251
向你展示两件事。但是，我们会在另一个地方看到

277
00:14:13,320 --> 00:14:15,185
这在这个应用程序中会很有意义。所以

278
00:14:15,254 --> 00:14:18,322
在这里，我要拖进去，它正在调整到这个尺寸，

279
00:14:18,391 --> 00:14:21,592
现在看，我要放大，滚动视图

280
00:14:21,661 --> 00:14:24,495
保持其内容大小的大小。对不起，

281
00:14:24,564 --> 00:14:28,132
你们看不到，回想起来，总是让我想起那件事，

282
00:14:28,201 --> 00:14:31,001
因为我很难记住这一点。所以我做了什么，

283
00:14:31,070 --> 00:14:34,505
我把它拖进去，从这里开始，然后

284
00:14:34,574 --> 00:14:38,343
现在我只是缩小它，你可以看到滚动

285
00:14:38,411 --> 00:14:41,345
视图的界限仍然与其内容挂钩。

286
00:14:41,414 --> 00:14:43,881
即使我使它非常大，现在滚动视图

287
00:14:43,950 --> 00:14:45,850
边界比边界大得多，但是

288
00:14:45,918 --> 00:14:48,085
那些其他约束是更高的优先级。

289
00:14:48,154 --> 00:14:50,621
所以滚动视图实际上，你可以看到它

290
00:14:50,690 --> 00:14:53,725
滚动视图指示器位于右边缘，

291
00:14:53,793 --> 00:14:58,829
它实际上处于界限之内。好的。所以

292
00:14:58,898 --> 00:15:01,665
非常简单，很酷的修复

293
00:15:01,734 --> 00:15:04,869
保持这个东西在这里居中。好吧

294
00:15:04,938 --> 00:15:08,839
那就是回到我们的代码并开始的那个小窍门

295
00:15:08,908 --> 00:15:13,144
谈论我们的集合视图，在这里。所以我们

296
00:15:13,213 --> 00:15:16,747
会沿着顶部添加集合视图

297
00:15:16,816 --> 00:15:20,184
一堆我们将用来拖入我们的表情符号的表情符号

298
00:15:20,253 --> 00:15:24,055
小UI。我们该怎么做？好吧

299
00:15:24,123 --> 00:15:29,060
其实很简单。我们从故事板开始。和

300
00:15:29,129 --> 00:15:30,961
这是我们的，这是我们要添加它的地方。

301
00:15:31,030 --> 00:15:34,799
就在这里，我们只是在同一个地方。现在，

302
00:15:34,868 --> 00:15:39,503
关于何时操纵视图的一件事，

303
00:15:39,572 --> 00:15:44,075
这里有一个非常强烈的倾向

304
00:15:44,144 --> 00:15:47,811
到这些东西，并开始抓住手柄。

305
00:15:47,880 --> 00:15:50,381
抓住这一点，就像我想把这个collectionView放在最上面一样，所以

306
00:15:50,450 --> 00:15:52,583
我真的只是想抓住这个手柄

307
00:15:52,652 --> 00:15:55,819
拉下来腾出空间。但你不能那样做。因为

308
00:15:55,888 --> 00:15:58,823
你有限制是把这件事保持在最前面。

309
00:15:58,892 --> 00:16:00,391
如果你只是开始把它拖下来，

310
00:16:00,460 --> 00:16:01,959
你所有的约束都会变成红色

311
00:16:02,028 --> 00:16:02,960
黄色这样的事情可能会很糟糕。

312
00:16:03,029 --> 00:16:06,296
所以，如果你真的想把它拉下来，你必须脱钩

313
00:16:06,365 --> 00:16:09,766
它首先。真的，这需要你稍微做点

314
00:16:09,835 --> 00:16:12,970
你的编辑速度较慢，以提前思考，我会去

315
00:16:13,038 --> 00:16:16,140
必须解开一些东西？所以我们一定要解开

316
00:16:16,209 --> 00:16:18,308
这个顶部连接在这里的拖放区

317
00:16:18,377 --> 00:16:20,844
到视图的顶部，因为我们要放

318
00:16:20,913 --> 00:16:23,581
在这之间的一个集合视图，好吗？

319
00:16:23,650 --> 00:16:27,584
那么到顶端的连接在哪里？我有这个下降

320
00:16:27,653 --> 00:16:30,721
在大纲中选择的区域集合，以及

321
00:16:30,790 --> 00:16:35,125
在这里，我们就在这里。将顶部与安全区对齐，我只是

322
00:16:35,194 --> 00:16:39,630
要删除那个。现在它不再被挂在顶端。

323
00:16:39,699 --> 00:16:42,899
现在我可以安全地拖下来为我的集合腾出空间

324
00:16:42,968 --> 00:16:45,803
视图。最终，我会把我的集合视图放进去

325
00:16:45,872 --> 00:16:48,172
把一个约束钩住集合视图。

326
00:16:48,241 --> 00:16:52,409
好，那么我们如何获得集合视图？我们走了

327
00:16:52,478 --> 00:16:55,379
在这里下载并搜索集合视图，这是，

328
00:16:55,448 --> 00:16:58,316
你知道，预打包的MVC，但我已经有了我的MVC

329
00:16:58,384 --> 00:17:01,052
我只想要这个集合视图。

330
00:17:01,121 --> 00:17:04,788
我们要把它放在这里。让我们继续前进

331
00:17:04,857 --> 00:17:08,358
做它的约束。所以我希望它可以直接到达顶端，

332
00:17:08,427 --> 00:17:11,762
我希望它的右边在左边，从右边到右边。

333
00:17:11,830 --> 00:17:14,331
我实际上需要一些标准间距到底部

334
00:17:14,400 --> 00:17:17,134
我希望它会说它是最近的邻居

335
00:17:17,202 --> 00:17:17,902
该放置区。

336
00:17:17,970 --> 00:17:21,138
所以让我们试试。看起来像它的工作，但

337
00:17:21,207 --> 00:17:24,408
我的集合视图发生了什么变化？它消失了。为什么

338
00:17:24,477 --> 00:17:27,678
我的集合消失了？我们来看看它的约束。

339
00:17:29,915 --> 00:17:32,783
这是它的限制。它有尾随，领先，

340
00:17:32,852 --> 00:17:36,520
底部空间拖放区，顶部到安全区域。什么是

341
00:17:36,588 --> 00:17:39,957
集合视图的高度？没有指定，对吗？

342
00:17:40,026 --> 00:17:42,526
它就像零。我们从未设置高度。

343
00:17:42,595 --> 00:17:44,395
现在，我们想要什么高度？

344
00:17:44,463 --> 00:17:47,731
其实我们希望高度足够大

345
00:17:47,800 --> 00:17:51,202
包括那些表情符号，并希望这些表情符号是任何东西

346
00:17:51,271 --> 00:17:54,538
用户的辅助字体大小是否正确？

347
00:17:54,607 --> 00:17:56,274
这就是我们真正想要的。我没有时间向你展示

348
00:17:56,342 --> 00:17:58,776
但你知道你需要知道做什么工作

349
00:17:58,844 --> 00:18:01,378
因为我们要做的是创建高度约束

350
00:18:01,447 --> 00:18:04,314
在这里。然后将它连接到我们的代码中

351
00:18:04,383 --> 00:18:07,784
那么我们会根据所需的大小来设置它

352
00:18:07,853 --> 00:18:10,287
适合字体，辅助字体。

353
00:18:10,356 --> 00:18:13,557
但在这种情况下，我们要做的只是我们

354
00:18:13,626 --> 00:18:15,826
去修理它的高度。所以我要去这里。

355
00:18:15,895 --> 00:18:19,696
我已选择集合视图。糟糕的一个。

356
00:18:19,765 --> 00:18:20,764
我要去这里修理它的高度。

357
00:18:20,833 --> 00:18:25,536
我要把它的高度固定在80分左右

358
00:18:25,604 --> 00:18:28,505
所以。 80分足以制作适合的表情符号

359
00:18:28,574 --> 00:18:31,242
在你的手指很好，这是一个很好的默认大小。

360
00:18:31,310 --> 00:18:36,113
所以我的集合视图重新出现。另一个

361
00:18:36,182 --> 00:18:39,316
我们想要做的是设置这些单元格的大小。因为我们是

362
00:18:39,385 --> 00:18:41,251
在我们的集合视图中会有一堆单元格，

363
00:18:41,320 --> 00:18:43,487
这就是集合视图是那里的一堆单元格。

364
00:18:43,555 --> 00:18:45,623
记得从食品演示中，所有的食物？

365
00:18:45,691 --> 00:18:48,325
所以你通过检查集合来做到这一点

366
00:18:48,394 --> 00:18:51,762
在这里查看大小检查员。你可以看到我们的

367
00:18:51,830 --> 00:18:54,531
单元格大小是50乘50，我会让它变大一点。

368
00:18:54,600 --> 00:18:56,066
我们走80后80后吧。

369
00:18:56,135 --> 00:18:59,737
另外还有一件事我们想对这个系列做点

370
00:18:59,806 --> 00:19:02,973
查看，是我们希望它可以水平滚动。

371
00:19:03,041 --> 00:19:06,510
我们希望所有这些表情符号都会落在右边，

372
00:19:06,579 --> 00:19:09,580
或屏幕的一侧。我们不想要他们

373
00:19:09,648 --> 00:19:12,282
下去了，所以我要回去正常的检查员

374
00:19:12,351 --> 00:19:14,952
集合视图，并确保我的滚动方向是

375
00:19:15,021 --> 00:19:17,954
水平。这样它就可以水平滚动。

376
00:19:18,023 --> 00:19:18,723
在集合视图中，

377
00:19:18,791 --> 00:19:20,291
你只能在两个方向中的一个方向上滚动，

378
00:19:20,359 --> 00:19:21,625
垂直或水平。

379
00:19:21,693 --> 00:19:25,296
它不会同时做到这一点。关于集合的另一件事

380
00:19:25,365 --> 00:19:28,366
视图，非常重要的理解，永远不会让你的

381
00:19:28,434 --> 00:19:31,201
单元尺寸大于不可滚动的宽度或

382
00:19:31,270 --> 00:19:34,939
集合视图的高度。集合视图没有

383
00:19:35,007 --> 00:19:37,674
知道如何让单元格大于适合的单元格

384
00:19:37,743 --> 00:19:41,412
它不滚动的方向。所以你必须确保，

385
00:19:41,480 --> 00:19:43,948
就像在你的家庭作业中，你会让你的

386
00:19:44,016 --> 00:19:46,483
单元格不同的大小，确保你比它大

387
00:19:46,552 --> 00:19:48,319
集合视图的宽度。

388
00:19:48,387 --> 00:19:52,089
它并不知道如何处理这个问题。所以这是

389
00:19:52,158 --> 00:19:55,492
现在好了。这些单元格在他们身上会有一个表情符号，

390
00:19:55,561 --> 00:19:59,463
记得？因此，让我们继续并在其中放置U​​I标签

391
00:19:59,532 --> 00:20:04,401
我们可以把我们的表情符号放在那里。我们只是把它放在这里。

392
00:20:04,470 --> 00:20:07,838
让我们继续，只是做，垂直和如何

393
00:20:07,906 --> 00:20:11,509
水平居中？让我们把字体做得更大，

394
00:20:11,578 --> 00:20:13,910
虽然我要用代码设置字体，

395
00:20:13,979 --> 00:20:17,648
再次因为我希望它在那里可以无障碍访问，

396
00:20:17,717 --> 00:20:20,650
但只是为了让它在我的故事板中看起来不错，

397
00:20:20,719 --> 00:20:22,286
我将它设置为64点，

398
00:20:22,354 --> 00:20:25,222
很好，很大。然后，我也会把一个很好的

399
00:20:25,291 --> 00:20:27,057
小笑脸或在那里的东西。

400
00:20:27,126 --> 00:20:29,961
所以，再次，这主要是，我这样做

401
00:20:30,029 --> 00:20:32,530
它在故事板上看起来不错，就在这里。

402
00:20:32,598 --> 00:20:35,933
所以，我可以想象我的事情会发生什么，

403
00:20:36,001 --> 00:20:40,237
看起来就在这里。现在，让我们转到我们的代码并开始

404
00:20:40,306 --> 00:20:43,607
用一些表情符号加载这个集合视图。

405
00:20:43,676 --> 00:20:47,143
好的，让我们过来这里。让我们调出我们的代码

406
00:20:47,212 --> 00:20:50,481
我们当然必须建立一个渠道。所以让我们去吧

407
00:20:50,550 --> 00:20:52,483
那里，就在我们所有的放弃业务和

408
00:20:52,552 --> 00:20:54,417
我们将把我们的集合视图放在这里。

409
00:20:54,486 --> 00:20:57,921
所以我只是要控制从集合视图拖到

410
00:20:57,990 --> 00:21:01,525
我的代码，确保它在集合视图中，它是。

411
00:21:01,594 --> 00:21:06,797
我会调用给我，我会叫它emojiCollectionView。

412
00:21:06,865 --> 00:21:08,766
所以有我的emojiCollectionView。

413
00:21:08,835 --> 00:21:12,603
现在，只要你像这样连接一个集合视图，

414
00:21:12,672 --> 00:21:14,905
你把它放在MVC中，

415
00:21:14,974 --> 00:21:19,643
你会想要做的第一件事。每时每刻，

416
00:21:19,712 --> 00:21:24,948
是去做，并做了设置。并设置新的集合视图

417
00:21:25,017 --> 00:21:30,154
数据源，做你自己和

418
00:21:30,223 --> 00:21:35,893
表情符号集合视图的代表是你自己。

419
00:21:35,962 --> 00:21:38,462
现在，如果你做那个预先包装的集合视图的东西在哪里

420
00:21:38,531 --> 00:21:40,397
你会得到整个MVC它会为你做这个。

421
00:21:40,466 --> 00:21:42,065
但是，如果您将自己的集合夹视图拖入

422
00:21:42,134 --> 00:21:44,635
你绝对想要这样做，当然这是抱怨

423
00:21:44,703 --> 00:21:46,937
我没有实现这些协议，所以我们将继续

424
00:21:47,005 --> 00:21:52,042
顶部并说。 UICollectionViewDataSource，

425
00:21:52,110 --> 00:21:56,847
和UICollectionViewDelegate。和

426
00:21:56,916 --> 00:22:00,717
顺便说一句，当你在这里时，你可能也想做

427
00:22:00,786 --> 00:22:04,488
UICollectionViewDelegateFlowL-ayout。

428
00:22:04,557 --> 00:22:06,423
这个你自动成为如果你是

429
00:22:06,492 --> 00:22:08,826
CollectionViewDelegate。这是代表

430
00:22:08,894 --> 00:22:12,062
做所有文本般的流动布局的东西。

431
00:22:12,131 --> 00:22:13,597
记住集合的布局是完全的

432
00:22:13,666 --> 00:22:16,600
配置？但这是默认的，所以我通常会抛出

433
00:22:16,668 --> 00:22:19,336
这也在这里。它只是帮助逃生完成，

434
00:22:19,404 --> 00:22:22,039
和所有那些有点东西。现在，它抱怨，因为

435
00:22:22,107 --> 00:22:24,274
我没有实现这些协议之一。让我们来找出答案

436
00:22:24,343 --> 00:22:27,911
哪一个。这是一个UICollectionViewDataSource。

437
00:22:27,980 --> 00:22:30,448
我没有实现。它需要在其中使用方法

438
00:22:30,516 --> 00:22:32,916
协议，尽管它是一个Objective-C协议。

439
00:22:32,985 --> 00:22:34,851
让我们看看他们是什么。我会打Fix和

440
00:22:34,920 --> 00:22:37,688
它将它们添加到我的文件顶部。

441
00:22:37,757 --> 00:22:40,757
我会移动它们，但是这两个是numberOfItemsInSection

442
00:22:40,826 --> 00:22:41,825
和cellForItemAt。

443
00:22:41,894 --> 00:22:44,662
当然，这是我们谈论的三个中的两个。

444
00:22:44,730 --> 00:22:46,329
另一个是多个部分。

445
00:22:46,398 --> 00:22:48,832
我们不必执行，因为它默认为

446
00:22:48,901 --> 00:22:50,968
一。对于tableView来说这是真的，对

447
00:22:51,036 --> 00:22:53,703
collectionView也是如此。所以我会把它们移回去

448
00:22:53,772 --> 00:22:56,774
在这里我的其他集合查看东西，和

449
00:22:56,842 --> 00:23:00,644
我们要实施这些。所以我们需要一个模型

450
00:23:00,712 --> 00:23:05,882
这部分我们的MVC。我有这个作为我的模型，哪个

451
00:23:05,951 --> 00:23:10,855
是一个emojis字符串数组，所以我实际上使用了一个字符串

452
00:23:10,923 --> 00:23:16,059
emojis的，我把它映射到一个字符串数组。

453
00:23:16,128 --> 00:23:17,727
希望每个人都能熟悉地图。

454
00:23:17,796 --> 00:23:21,164
Map只需要一个集合并将其转换为一个数组

455
00:23:21,233 --> 00:23:25,335
它在每个项目上执行此封闭。所以

456
00:23:25,404 --> 00:23:28,705
现在emojis，如果你看看它的类型是字符串数组，和

457
00:23:28,774 --> 00:23:30,273
每个字符串都是一个表情符号。

458
00:23:30,342 --> 00:23:35,111
好的，我唯一的部分有多少项？好，

459
00:23:35,180 --> 00:23:39,049
当然，这是表情符号的数量。这是多少项目

460
00:23:39,118 --> 00:23:42,619
有集合视图。我只有一个部分，

461
00:23:42,688 --> 00:23:46,456
并且将我们带到这里来重要的销售

462
00:23:46,525 --> 00:23:48,492
项目在哪里，我们必须让一些

463
00:23:48,561 --> 00:23:51,294
cell = collectionView.dequeueReusabl-

464
00:23:51,363 --> 00:23:55,165
eCell与ReuseIdentifier，对不对？我们必须这样做

465
00:23:55,234 --> 00:23:59,402
指定的东西。我会称它为EmojiCell，并为

466
00:23:59,471 --> 00:24:03,807
索引路径。那是我们正在创建的索引路径

467
00:24:03,875 --> 00:24:06,310
该单元格为。我们将使用返回单元格。

468
00:24:08,247 --> 00:24:11,915
现在我们需要将这个表情符号加载到那个单元格中。

469
00:24:11,983 --> 00:24:14,885
对于集合视图，所有单元格都是自定义单元格。

470
00:24:14,953 --> 00:24:17,787
如果你有任何问题，你必须有一个子类

471
00:24:17,856 --> 00:24:20,457
任何东西的出路，你必须有一个子类。

472
00:24:20,526 --> 00:24:24,027
因为我们的集合中没有展望

473
00:24:24,096 --> 00:24:26,430
查看指向表情符号的本身

474
00:24:26,499 --> 00:24:29,499
因为可能有一百个电池。所以

475
00:24:29,568 --> 00:24:32,969
我们做不到，所以我们必须去

476
00:24:33,038 --> 00:24:36,807
创建一个新文件，它是UI集合视图的子类

477
00:24:36,875 --> 00:24:39,143
单元格。这一个实际上是正确的。

478
00:24:39,211 --> 00:24:42,846
我将把这个称为表情符号集合视图单元格，对吧？

479
00:24:42,915 --> 00:24:47,251
UI集合视图单元的子类。所以它是在这里创建的，

480
00:24:47,319 --> 00:24:50,955
让我们把它放在正确的地方。好的，在这里，

481
00:24:51,023 --> 00:24:54,959
就在这儿。我会静静地去看我的故事板，

482
00:24:55,928 --> 00:24:56,994
我的故事板在哪里？

483
00:24:57,063 --> 00:25:00,865
在这里，我将要检查这个单元。和

484
00:25:02,300 --> 00:25:07,070
我要将其重用标识符设置为表情符号单元格，

485
00:25:07,139 --> 00:25:09,472
无论如何，这是我出场的事情，

486
00:25:09,541 --> 00:25:10,874
做和可重复使用的单元格

487
00:25:10,943 --> 00:25:14,411
我要把它的身份设置成一个表情集体单元。

488
00:25:14,479 --> 00:25:19,650
好吧？所以这个单元格是我的子类的类型，和

489
00:25:19,718 --> 00:25:23,854
它的这个单元格的标识符，我没有在那里输入？

490
00:25:23,923 --> 00:25:27,491
表情符号单元格？表情符号单元格，这是它的类型。

491
00:25:30,362 --> 00:25:33,530
好，现在我们有了这个，让我们继续前进，然后连线

492
00:25:33,599 --> 00:25:37,000
把这个小标签放在我们要放表情符号的地方

493
00:25:37,068 --> 00:25:40,704
该自定义单元格。现在，很多时候，Interface Builder

494
00:25:40,773 --> 00:25:42,940
不会得到这个权利，但这次做了。

495
00:25:43,008 --> 00:25:44,808
如果你去自动模式，

496
00:25:44,877 --> 00:25:48,211
它有点意识到，你选择的东西，

497
00:25:48,280 --> 00:25:50,280
可以连接到控制器，

498
00:25:50,349 --> 00:25:53,417
如果只有其中一个或更多可能，它就被连接起来

499
00:25:53,485 --> 00:25:57,454
到这个自定义单元格。所以你不必使用自动，

500
00:25:57,523 --> 00:25:59,756
你可以使用手册并去找文件。但

501
00:25:59,825 --> 00:26:04,394
自动有时会起作用，有时不会。所以，我们走了。

502
00:26:04,463 --> 00:26:07,264
我们有这个标签。我只是想创造一个出路

503
00:26:07,332 --> 00:26:10,901
它在我的自定义子类中，所以在这里我们去。和

504
00:26:10,970 --> 00:26:14,738
然后进入UI标签，我将其称为标签。

505
00:26:14,807 --> 00:26:17,974
这是这个单元的标签，就是这样。现在，

506
00:26:18,043 --> 00:26:21,978
我没有在这里放任何其他代码，但我可以。它会

507
00:26:22,047 --> 00:26:25,149
在你的单元中放入一堆逻辑不是没有道理的。

508
00:26:25,217 --> 00:26:28,551
如果你有每个单元的逻辑。然后把它放在这里

509
00:26:28,620 --> 00:26:31,288
可能会有很大的意义。只因为这一个

510
00:26:31,356 --> 00:26:33,590
只有一个outlet，它是一个非常非常简单的单元，

511
00:26:33,659 --> 00:26:36,126
并不意味着你无法将其他代码放在那里。我不

512
00:26:36,194 --> 00:26:39,296
希望你明白这些只是出口袋，他们

513
00:26:39,365 --> 00:26:41,999
如果它也有意义的话，它们实际上可以有逻辑。

514
00:26:42,067 --> 00:26:44,200
在你的家庭作业测试逻辑中可能会有意义

515
00:26:44,269 --> 00:26:48,072
你的单元格。好吧？所以我们有这个单元。所以

516
00:26:48,140 --> 00:26:53,109
现在回到我们正在创建的地方

517
00:26:53,178 --> 00:26:56,814
这个单元格。我们有这个出队可重复使用的单元。对于

518
00:26:56,882 --> 00:26:59,683
我们访问它的outlets，我们必须施展它。

519
00:26:59,752 --> 00:27:04,020
我们不得不说，如果让emojiCell等于单元格，

520
00:27:04,089 --> 00:27:08,859
作为我们的自定义子类EmojiCollectionViewCell。

521
00:27:08,928 --> 00:27:12,662
如果我们能够成功地施展它，那么我们可以说

522
00:27:12,731 --> 00:27:17,267
emojiCell标签，好的，可以设置它的属性文本相等

523
00:27:17,336 --> 00:27:21,504
到什么东西，文字，那是什么东西？

524
00:27:21,573 --> 00:27:24,775
那么，有些事情会采取其中之一，

525
00:27:24,844 --> 00:27:27,277
无论这个索引路径是什么，并且

526
00:27:27,346 --> 00:27:30,246
设置它的字体因为我想控制它的代码和字体

527
00:27:30,315 --> 00:27:33,250
然后把它放在那里。所以我只是想让文本平等

528
00:27:33,318 --> 00:27:37,887
NSAttributedString。它的字符串将会是

529
00:27:37,956 --> 00:27:43,894
emojis子indexPath点项，告诉我们哪个

530
00:27:43,963 --> 00:27:47,264
表情符号我们在这里谈论。而属性，

531
00:27:47,332 --> 00:27:49,699
我将只设置字体的属性，

532
00:27:49,768 --> 00:27:52,436
这是我要设置的唯一属性。我会设置它

533
00:27:52,505 --> 00:27:54,571
这个var字体，我要在这里创建，

534
00:27:54,639 --> 00:27:58,208
私人变种字体，这将是一个UIFont。和

535
00:27:58,277 --> 00:28:01,477
我将在这里完成整个无障碍的事情。

536
00:28:01,546 --> 00:28:04,981
也就是说，我必须使用UIFontMetrics，好吗？和

537
00:28:05,050 --> 00:28:10,154
我想要文字样式的点阵体的字体指标。和

538
00:28:10,222 --> 00:28:15,124
我要缩放字体。缩放字体，

539
00:28:15,193 --> 00:28:19,496
而我要使用的字体是UI字体，

540
00:28:19,564 --> 00:28:25,669
首选字体，但我会扩展它。

541
00:28:29,007 --> 00:28:32,275
我会用尺寸来说，它更容易一些，

542
00:28:32,344 --> 00:28:36,279
大小64.所以我想要64点，但我会得到它

543
00:28:36,348 --> 00:28:39,783
无论可访问性是多少，对吧？

544
00:28:39,851 --> 00:28:42,619
所以如果你的可访问性在中间，字体的大小，

545
00:28:42,687 --> 00:28:43,554
我会做64让它变大，

546
00:28:43,622 --> 00:28:45,121
它会在64和更小的更大。

547
00:28:45,190 --> 00:28:48,191
现在，这不会很好，因为我没有

548
00:28:48,259 --> 00:28:51,361
更改集合视图的大小。所以，如果我设置这个大，

549
00:28:51,430 --> 00:28:53,963
它会被切断，如果我把它设置的很小，

550
00:28:54,032 --> 00:28:56,733
集合视图不会缩小到拿着它，

551
00:28:56,802 --> 00:28:59,436
你看到我在说什么吗？你明白我的意思了吗？

552
00:28:59,505 --> 00:29:01,137
所以我们不得不在稍后添加，但是再次，

553
00:29:01,206 --> 00:29:02,405
我不想让你迷恋

554
00:29:02,474 --> 00:29:05,942
到布局约束两次。就是这样了。这是

555
00:29:06,011 --> 00:29:08,345
我们需要做的就是加载我们的集合视图。

556
00:29:08,414 --> 00:29:11,314
我们实施了这些数据源方法

557
00:29:11,383 --> 00:29:12,982
这是必需的，对吧？节数，

558
00:29:13,051 --> 00:29:15,952
行数，段中的项目，然后是单元格

559
00:29:16,021 --> 00:29:20,623
某一个。所以让我们来看看，这样你就可以看到。和

560
00:29:20,692 --> 00:29:24,928
当然，在顶端，我们可以看到我们

561
00:29:24,996 --> 00:29:29,399
有我们的emojis。这是非常好的卷轴。集合

562
00:29:29,467 --> 00:29:31,835
view是一个滚动视图，所以它来回滚动，

563
00:29:31,904 --> 00:29:34,570
这是很不错的。现在，我们想要做的下一件事

564
00:29:34,639 --> 00:29:37,874
是能够挑选这些东西，并把它们放在我们的

565
00:29:37,943 --> 00:29:41,478
很好的背景，如果这是我们的背景，

566
00:29:41,547 --> 00:29:43,480
我们想要挑选这些东西。

567
00:29:43,549 --> 00:29:45,682
请记住，我把蜜蜂扔在那里，苹果，或者

568
00:29:45,751 --> 00:29:49,386
随你。我们想要那样做。那么，我们将如何做拖动和

569
00:29:49,454 --> 00:29:51,855
下降？那么，我们还没有拖累，我们只是下降，

570
00:29:51,924 --> 00:29:53,856
我们唯一做的就是放在那里。

571
00:29:53,925 --> 00:29:56,893
所以我会告诉你拖动集合视图的世界，哪个

572
00:29:56,962 --> 00:29:59,763
看起来几乎与非集合视图世界一样。

573
00:29:59,832 --> 00:30:01,598
集合中的唯一区别

574
00:30:01,667 --> 00:30:02,732
视图世界是，

575
00:30:02,801 --> 00:30:05,769
集合视图可以帮助您找出您使用的索引路径

576
00:30:05,837 --> 00:30:09,306
拖动。它知道你的手指在哪里，就像，

577
00:30:09,374 --> 00:30:12,242
您正在拖动该索引路径，并将其放在

578
00:30:12,310 --> 00:30:15,045
该索引路径，所以真的只是提供索引路径，但

579
00:30:15,113 --> 00:30:18,148
否则，它几乎完全一样。好吧，

580
00:30:18,217 --> 00:30:20,984
任何时候你想要在集合视图中拖动，

581
00:30:21,053 --> 00:30:23,953
你总是会做的第一件事，就像你一样

582
00:30:24,022 --> 00:30:26,790
做拖放交互是你第一次拖动和

583
00:30:26,859 --> 00:30:29,126
以集合视图下载视图，

584
00:30:29,194 --> 00:30:31,694
你会设置你的集合视图的拖动

585
00:30:31,763 --> 00:30:34,431
代表是你的自我。然后，当然，那是，

586
00:30:34,499 --> 00:30:36,132
你会上去，你会说，是的，

587
00:30:36,201 --> 00:30:40,970
我实现了UI集合视图拖拽委托。和

588
00:30:41,039 --> 00:30:44,308
只要你这样做，它会抱怨，不，你没有，

589
00:30:44,376 --> 00:30:46,943
你会点击这个，它会说，

590
00:30:47,012 --> 00:30:49,012
你想让我添加协议的东西？

591
00:30:49,080 --> 00:30:51,815
你会说，是的，当然，我需要做什么？

592
00:30:51,884 --> 00:30:55,018
而且会说，你必须实施项目

593
00:30:55,087 --> 00:30:58,555
开始。如果你还记得从讲座中获得的物品

594
00:30:58,623 --> 00:31:01,491
开始是讲拖曳系统的事情，

595
00:31:01,559 --> 00:31:05,028
这是我们正在拖动的东西。所以我们必须提供这些

596
00:31:05,097 --> 00:31:08,665
拖动项目进行拖动。所以让我们这样做吧，让我们来解决这个问题

597
00:31:08,734 --> 00:31:13,536
再次。在这里，那么，

598
00:31:13,605 --> 00:31:15,739
我们如何提供我们的项目开始？现在，

599
00:31:15,808 --> 00:31:20,811
注意集合视图有一个添加索引路径，所以

600
00:31:20,879 --> 00:31:25,716
它告诉我们哪一个，我们拖动哪个IndexPath

601
00:31:25,784 --> 00:31:28,185
从，这对我们真的很方便。所以

602
00:31:28,253 --> 00:31:30,887
我要创建，我要在这里调用一个小函数。

603
00:31:30,956 --> 00:31:35,758
我只是要在indexPath处返回dragItems。

604
00:31:35,827 --> 00:31:37,727
这是我必须写的功能，

605
00:31:37,796 --> 00:31:43,032
私有func dragItems在indexPath处，

606
00:31:43,101 --> 00:31:46,636
这是一个indexPath，它只是一个部分，一个项目。

607
00:31:46,705 --> 00:31:50,874
并且它返回这个UIDragItem数组，

608
00:31:50,943 --> 00:31:53,476
那些是我们必须返回的项目。所以

609
00:31:53,545 --> 00:31:58,381
这一切我们必须做的，以开始拖动。对我们来说，

610
00:31:58,449 --> 00:32:00,984
再一次，这真的很容易实现，因为

611
00:32:01,053 --> 00:32:04,220
我们要拖动的是NSAttributedString，

612
00:32:04,289 --> 00:32:06,256
这就是我们要拖动的东西，

613
00:32:06,325 --> 00:32:08,858
这就像NSURL一样，

614
00:32:08,927 --> 00:32:11,795
UIImage，NSAttributedString。另外，NSString我们

615
00:32:11,863 --> 00:32:14,497
可以，但是我们会做NSAttributedString，给我们

616
00:32:14,566 --> 00:32:17,600
对于我们正在拖拽的内容来说，更多的灵活性。所以

617
00:32:17,669 --> 00:32:19,169
那将是我们的物品提供者。

618
00:32:19,237 --> 00:32:21,971
所以我们所要做的就是获得我们想要的属性字符串

619
00:32:22,040 --> 00:32:24,274
拖动，然后将其返回到拖动项目中

620
00:32:24,342 --> 00:32:28,211
而已。那么我们如何得到这个归属串？

621
00:32:28,280 --> 00:32:31,681
所以我会说，如果我可以让belongsString =，

622
00:32:31,749 --> 00:32:36,652
而我要做的就是看看这个indexPath，

623
00:32:36,721 --> 00:32:40,690
找到我的自定义单元，看看它的出口，得到它的

624
00:32:40,758 --> 00:32:43,793
attributedText。大家都很酷吗？我就是这样

625
00:32:43,861 --> 00:32:46,462
会这样做。所以让我们在一行代码中完成这一切，

626
00:32:46,531 --> 00:32:51,668
对？所以我要先问我的CollectionView

627
00:32:51,737 --> 00:32:56,673
indexPath中该项目的单元格。

628
00:32:56,742 --> 00:33:01,144
现在这就像TableView的单元格一样

629
00:33:01,212 --> 00:33:03,647
在indexPath行。事情，这只适用于

630
00:33:03,715 --> 00:33:06,216
可见的单元格，但当然，这是在这里工作。

631
00:33:06,285 --> 00:33:09,886
我拖着这个东西，它必须是可见的，对吧？所以

632
00:33:09,954 --> 00:33:13,122
我有这个单元，我们正在这里拖动。

633
00:33:13,191 --> 00:33:19,695
现在我打算将它作为我的自定义子类。

634
00:33:19,764 --> 00:33:23,333
如果这有效，希望它会，我会得到它的

635
00:33:23,402 --> 00:33:28,971
出口，我会去抢其归属文本。

636
00:33:29,040 --> 00:33:32,976
所以如果所有的工作，我只是抓住了那个表情符号

637
00:33:33,045 --> 00:33:35,578
indexPath。所以，现在我有了表情符号，

638
00:33:35,647 --> 00:33:38,481
我需要做的就是创建这些UI拖动项目之一，

639
00:33:38,550 --> 00:33:41,584
使用那个被赋值的String作为提供者，对吧？

640
00:33:41,653 --> 00:33:44,988
提供数据的东西。所以

641
00:33:45,056 --> 00:33:50,326
我可以通过说let letItem = UIDragItem来做到这一点。

642
00:33:50,395 --> 00:33:53,863
而拖动项目创建者，你可以在那里看到它，

643
00:33:53,932 --> 00:33:58,368
需要一个ItemProvider。我们可以为其创建一个ItemProvider

644
00:33:58,437 --> 00:34:01,570
通过说ItemProvider来归类字符串。

645
00:34:01,639 --> 00:34:04,407
它有几个构造函数，但真正好的是这个

646
00:34:04,476 --> 00:34:06,710
一个对象，你只是给它一个对象和

647
00:34:06,778 --> 00:34:08,878
它知道如何像UIImage那样成为提供者

648
00:34:08,947 --> 00:34:12,115
NSAttributedString。所以这就是我要做的。

649
00:34:12,183 --> 00:34:16,018
而且我会给它这个我发现的归属串

650
00:34:16,087 --> 00:34:19,389
在我的牢房里。就是这样。这会创建拖动项目，

651
00:34:19,457 --> 00:34:22,292
现在我们只是返回这个。我们返回它们的数组，

652
00:34:22,360 --> 00:34:24,694
但我们只是拖着这一件事。但

653
00:34:24,762 --> 00:34:26,729
在我回来之前，我会做另外一件事，

654
00:34:26,798 --> 00:34:30,433
我要设置拖动项目的本地对象

655
00:34:30,502 --> 00:34:33,836
成为那个归于String的人。现在这是什么意思？好，

656
00:34:33,905 --> 00:34:36,739
如果您的应用程序中的拖动属于本地，则不必去

657
00:34:36,808 --> 00:34:39,742
通过所有itemProvider的东西，对吧？异步

658
00:34:39,811 --> 00:34:41,711
从中获取数据，记住我们所有的东西

659
00:34:41,779 --> 00:34:43,779
不得不在下降？你不必这样做，

660
00:34:43,848 --> 00:34:45,015
你只需抓住本地对象。

661
00:34:45,083 --> 00:34:47,016
所以这是一种类似于短路的方式，

662
00:34:47,085 --> 00:34:49,518
如果这是一个本地拖动。但它会去实际拖动

663
00:34:49,587 --> 00:34:52,088
从我们的CollectionView到其他应用程序，但是当我们

664
00:34:52,157 --> 00:34:54,591
本地拖动，我们将能够使用它。

665
00:34:54,659 --> 00:34:57,860
所以在这里，我只是要返回一个这个数组

666
00:34:57,929 --> 00:35:00,397
拖动项目。顺便说一句，如果我不能

667
00:35:00,465 --> 00:35:03,433
从该单元格中获取属性字符串

668
00:35:03,502 --> 00:35:07,737
一些原因。然后，我只是要回空，所以不，

669
00:35:07,806 --> 00:35:10,573
那么不要做任何阻力。所以

670
00:35:10,642 --> 00:35:14,143
它会从这里知道不会开始拖累。现在，

671
00:35:14,212 --> 00:35:16,412
记得我也告诉过你，一旦你开始拖动，

672
00:35:16,481 --> 00:35:19,281
您只需点击它们即可添加更多项目。所以你可以

673
00:35:19,350 --> 00:35:22,051
一次拖动多件事。这很容易实现

674
00:35:22,120 --> 00:35:25,989
以及。就像我们有这个项目开始，

675
00:35:26,057 --> 00:35:30,560
我们有另一个名为itemsforaddingto，看起来

676
00:35:30,628 --> 00:35:33,796
与此完全一样。我们会准确地返回

677
00:35:33,865 --> 00:35:36,766
一样的东西。因为它给了我们indexPath

678
00:35:36,835 --> 00:35:38,935
有人在我拖着拖拉的时候轻拍了一下

679
00:35:39,003 --> 00:35:41,404
我只是想从表情符号中取出表情并将其返回，

680
00:35:41,472 --> 00:35:43,839
这就是拖动所需的全部内容。

681
00:35:43,908 --> 00:35:49,078
看这个。我可以从中拖出来。

682
00:35:49,147 --> 00:35:53,383
看，这里是蜜蜂按住并拖动。和

683
00:35:53,452 --> 00:35:57,621
关于这一点的事情是，如果我拖着，我不能放弃我的

684
00:35:57,689 --> 00:35:59,889
CollectionView因为我没有实现drop。

685
00:35:59,958 --> 00:36:02,592
但我可以放弃其他地方。我要去这里和

686
00:36:02,660 --> 00:36:06,329
只需将这只蜜蜂放入Google搜索栏即可。

687
00:36:06,398 --> 00:36:10,734
它搜寻蜜蜂，信不信由你。所以那是

688
00:36:10,802 --> 00:36:13,302
很酷。所以我被拖到其他应用程序工作，

689
00:36:13,371 --> 00:36:15,037
所以我几乎不必在我的应用程序中做任何事情，

690
00:36:15,106 --> 00:36:17,206
只需提供归属的字符串并拖动即可

691
00:36:17,275 --> 00:36:18,708
下降。所以这是关于拖拽的一件很酷的事情

692
00:36:18,776 --> 00:36:22,512
下降，这很容易让它在两个方向上。所以

693
00:36:22,580 --> 00:36:23,813
现在，我们想要放弃。

694
00:36:23,881 --> 00:36:26,616
现在我们希望能够在这里挑选这只蜜蜂

695
00:36:26,685 --> 00:36:30,220
放在我们的CollectionView的其他地方，所以

696
00:36:30,289 --> 00:36:34,890
让我们去做那个。好吧，

697
00:36:34,959 --> 00:36:39,229
所以要做到这一点，就像我们去的时候一样

698
00:36:39,297 --> 00:36:42,532
在这里做拖拽委托，我们必须这样做

699
00:36:42,601 --> 00:36:46,402
emojiCollectionView.dropDelegate = self。

700
00:36:46,471 --> 00:36:49,538
到顶端，看看我们实现了多少协议。

701
00:36:49,607 --> 00:36:52,708
喔，我们今天巡航。所以让我们来做

702
00:36:52,777 --> 00:36:58,348
UICollectionViewDropDelegate，当我们这样做时，

703
00:36:58,416 --> 00:37:01,017
等待它编译。它会抱怨，它说你

704
00:37:01,086 --> 00:37:04,921
不要执行该协议。当然，修复。它说，这

705
00:37:04,989 --> 00:37:09,192
你必须执行哪一个是performDrop。说得通，

706
00:37:09,260 --> 00:37:12,662
对，你必须做表演，否则你甚至不在

707
00:37:12,730 --> 00:37:15,798
做下降。所以让我们在这里复制并粘贴一个。

708
00:37:15,867 --> 00:37:20,636
我实际上会最后执行下降。

709
00:37:20,705 --> 00:37:23,305
因为还有其他一些我需要实施的，

710
00:37:23,374 --> 00:37:26,275
如果你记得我们之前做过的事情？ CanHandle和

711
00:37:26,344 --> 00:37:30,379
会议转移，会议更新。得到，我们可以

712
00:37:30,448 --> 00:37:33,883
实施这两个，让我们得到正确的小加号

713
00:37:33,952 --> 00:37:36,052
当我们拖动它时。所以我们不会尝试和

714
00:37:36,121 --> 00:37:38,321
接受我们不明白的滴剂。所以

715
00:37:38,389 --> 00:37:42,191
让我们来做canHandle。这里是canHandle的collectionView

716
00:37:42,260 --> 00:37:46,263
版。调用canHandle看起来几乎完全一样

717
00:37:46,331 --> 00:37:48,931
并且它将被完全执行，

718
00:37:49,000 --> 00:37:52,535
这就是我只会说，如果session.canLoadObjects

719
00:37:52,603 --> 00:37:57,306
ofClass NSAttributedString，然后我进来。Cuz就是这样

720
00:37:57,375 --> 00:38:00,643
我的CollectionView可以接受。顺便说一句，这意味着我们是

721
00:38:00,712 --> 00:38:03,847
将能够拖动只是随机的字符串

722
00:38:03,915 --> 00:38:07,049
我们的CollectionView。不只是表情符号，首先我就是这样，

723
00:38:07,118 --> 00:38:09,085
我不想那样，但那时我就像那样很酷。

724
00:38:09,154 --> 00:38:11,621
如果我想在某件事上贴上标签，该怎么办？

725
00:38:11,690 --> 00:38:14,891
我的照片。所以我决定这很好，所以我会去的

726
00:38:14,959 --> 00:38:18,394
继续这样做。然后我们有sessiondidupdate，

727
00:38:18,463 --> 00:38:21,164
我们必须做的，sessiondidupdate。

728
00:38:21,233 --> 00:38:24,700
这就是所谓的？ DidUpdate，这是一个吗？

729
00:38:24,769 --> 00:38:28,505
是的，dropSessionDidUpdate和我们需要在这里做什么？

730
00:38:28,573 --> 00:38:31,407
这是我们需要返回提案的地方，

731
00:38:31,476 --> 00:38:34,744
复制移动或​​取消，这就是我们所要做的。和

732
00:38:34,813 --> 00:38:38,647
你可以看到这是一个UICollectionViewDropProposal。

733
00:38:38,716 --> 00:38:40,517
为什么这是不同的？好吧，让我们看看它。

734
00:38:40,585 --> 00:38:45,688
让我们返回一个UICollectionView，

735
00:38:45,757 --> 00:38:50,527
CollectionViewDropProposal。

736
00:38:50,595 --> 00:38:53,963
[空白音频]。并看看构造函数。

737
00:38:54,031 --> 00:38:57,032
还有另一个构造函数，第二个，

738
00:38:57,101 --> 00:39:00,736
看看，意图UICollectionViewDropIntent。

739
00:39:00,805 --> 00:39:02,872
那么，CollectionView中的意图就是说，

740
00:39:02,941 --> 00:39:06,142
你把这个放到这个单元格里吗？

741
00:39:06,211 --> 00:39:08,645
你想添加一个单元格？你看到区别？

742
00:39:08,713 --> 00:39:10,146
所以这就是我们必须指定的。

743
00:39:10,215 --> 00:39:12,915
现在在我们的例子中，我们总是希望添加一个单元格，所以

744
00:39:12,984 --> 00:39:15,985
你会看到我们的意图，让我们，对不起，

745
00:39:16,054 --> 00:39:19,355
让我们回去选择，我们想要这个构造函数。

746
00:39:19,424 --> 00:39:22,491
所以我们首先要做的下降操作是复制，

747
00:39:22,560 --> 00:39:24,793
我会在一秒钟之内改变这一点。但

748
00:39:24,862 --> 00:39:28,865
那么我们想要的放置目标是insertAt目标为

749
00:39:28,934 --> 00:39:33,903
反对插入目标单元格。现在，

750
00:39:33,972 --> 00:39:37,673
让我们来谈谈复制。如果我在里面移动蜜蜂

751
00:39:37,742 --> 00:39:41,410
我的collectionView，我没有复制它。我不想要

752
00:39:41,479 --> 00:39:43,512
用户认为蜜蜂现在将被复制和

753
00:39:43,581 --> 00:39:46,382
会有两只蜜蜂。所以它是移动的。

754
00:39:46,451 --> 00:39:52,188
所以我不得不知道，我是在我自己的内部

755
00:39:52,256 --> 00:39:56,993
的CollectionView。好的，那我该怎么做呢？好，

756
00:39:57,061 --> 00:40:00,830
我会怎么做，顺便问一下这个问题是什么？

757
00:40:00,899 --> 00:40:06,569
只是indexPath。是的，那我该怎么做？

758
00:40:06,638 --> 00:40:09,973
我要做的是当我开始在这里拖

759
00:40:10,041 --> 00:40:14,310
itemsForBeginning，我会在会议中设置一些东西

760
00:40:14,379 --> 00:40:18,147
称为localContext，这是任何类型的任何。

761
00:40:18,215 --> 00:40:22,451
我将把它设置为我的collectionView。所以这是

762
00:40:22,520 --> 00:40:25,588
只是在拖动会话中让Droppees，

763
00:40:25,656 --> 00:40:27,089
已经下降的人知道，嘿，

764
00:40:27,158 --> 00:40:28,357
这是一个本地阻力，而且

765
00:40:28,426 --> 00:40:30,059
这里是它的背景。好，

766
00:40:30,127 --> 00:40:31,894
由于这个拖拽来自collectionView，

767
00:40:31,963 --> 00:40:34,597
我将使用collectionView作为上下文。

768
00:40:34,666 --> 00:40:37,533
好吧，现在我可以看看这个地方的背景

769
00:40:37,602 --> 00:40:40,636
在这里确定我的拖动变量是否应该是

770
00:40:40,705 --> 00:40:45,474
复制或移动。所以我想说一些像，

771
00:40:45,543 --> 00:40:50,947
让isSelf是我自己或其他什么，=会话，

772
00:40:52,783 --> 00:40:57,753
会话，它有一个称为本地拖放DragSession的东西。

773
00:40:57,822 --> 00:41:03,226
这就是解除它的会话，.localContext，

774
00:41:03,294 --> 00:41:07,597
oops，localContext。我真的想说如果那是我的

775
00:41:07,665 --> 00:41:11,834
的CollectionView。这是我想要做的，

776
00:41:11,902 --> 00:41:16,038
但我不能这样做，因为这是什么类型？

777
00:41:16,107 --> 00:41:20,909
任何，你不能做任何==，因为记住，

778
00:41:20,978 --> 00:41:24,647
==只是使用可衡量的协议，对吧？和

779
00:41:24,716 --> 00:41:27,616
任何不能有任何方法或变量，它必须被铸造

780
00:41:27,685 --> 00:41:29,886
之前你可以做任何事情。

781
00:41:29,954 --> 00:41:31,854
所以你当然可以有任何公平的，

782
00:41:31,923 --> 00:41:34,189
你什么都得不到。所以

783
00:41:34,258 --> 00:41:37,927
我要做的是拿这个小东西和

784
00:41:37,996 --> 00:41:41,697
尝试将其转换为UICollectionView。我的意思是如果

785
00:41:41,766 --> 00:41:44,200
它不是一个UICollectionView它不会是平等的

786
00:41:44,269 --> 00:41:47,303
我不妨尝试一下。现在，如果这是零，我们可以做

787
00:41:47,372 --> 00:41:50,106
可以等于零，因为可选可以做equatable，

788
00:41:50,175 --> 00:41:53,976
好吧？所以现在我知道是否是我自己。

789
00:41:54,045 --> 00:41:57,547
所以如果是我自己，那么我就会做出这样的举动，

790
00:41:57,616 --> 00:42:00,283
否则我会做副本。现在我不是，

791
00:42:00,352 --> 00:42:02,451
我甚至还没有实现执行的下降。

792
00:42:02,520 --> 00:42:05,855
但让我们来看看collectionView的功能

793
00:42:05,924 --> 00:42:08,758
从我们这些少量的信息。

794
00:42:14,465 --> 00:42:16,398
所以这里是我的collectionView，

795
00:42:16,467 --> 00:42:19,502
现在看我要拖，点击这里的咖啡。

796
00:42:19,570 --> 00:42:22,405
看看collectionView，看看它在做什么，

797
00:42:22,473 --> 00:42:25,074
它为我留下了新的空间。

798
00:42:25,143 --> 00:42:29,111
你看到了吗？我仍然可以拖累这里，但是

799
00:42:29,180 --> 00:42:31,948
现在我在这里拖着。它也知道，我可以

800
00:42:32,016 --> 00:42:35,518
在那里下降。事实上，如果我放弃，它不起作用

801
00:42:35,587 --> 00:42:38,054
因为我没有执行执行删除。但是你

802
00:42:38,122 --> 00:42:40,723
可以看到collectionView已经知道我是什么了

803
00:42:40,792 --> 00:42:43,493
这样做。所以collectionView真的很酷

804
00:42:43,561 --> 00:42:46,562
做拖放，它是如此强大。我们很难做任何事情，

805
00:42:46,630 --> 00:42:50,666
我们提供了四行代码，以实现这一目标。

806
00:42:50,735 --> 00:42:53,135
所以，让我们回到这里，并进行下降。

807
00:42:53,204 --> 00:42:55,871
那么，我们的四条线即将结束，

808
00:42:55,940 --> 00:42:58,507
因为表演下降更复杂一点，

809
00:42:58,576 --> 00:43:02,244
不是很多。但是当演出下降发生时，我们有

810
00:43:02,313 --> 00:43:06,381
更新我们的模型，这是我们的emojis和

811
00:43:06,450 --> 00:43:08,384
我们必须更新collectionView，

812
00:43:08,453 --> 00:43:11,353
好吧。此处还有两种不同的滴剂，

813
00:43:11,422 --> 00:43:14,957
有从我的collectionView来的下降。

814
00:43:15,026 --> 00:43:17,426
在这种情况下，我必须在菜单中放置，并且

815
00:43:17,495 --> 00:43:19,962
将它从旧地方移除，因为我正在移动。接着，

816
00:43:20,031 --> 00:43:23,165
有一个下降它来自其他应用程序。

817
00:43:23,234 --> 00:43:25,667
这是允许的，看这个，让我们过来这里和

818
00:43:25,736 --> 00:43:28,136
选择一些文字。 >> [不可思议]

819
00:43:28,205 --> 00:43:28,705
>>对不起，你不在

820
00:43:28,773 --> 00:43:33,475
屏幕？是的，谢谢。我会告诉你这个，隐藏

821
00:43:33,544 --> 00:43:37,847
其他。好的，所以我可以过来这里，选择这只蜜蜂，然后

822
00:43:37,915 --> 00:43:41,250
把它拖放到这里。看，这是说，加上，

823
00:43:41,319 --> 00:43:45,054
并且为它腾出空间，并且，我没有做下降。

824
00:43:45,123 --> 00:43:47,055
所以我有这两种情况做下降。

825
00:43:47,124 --> 00:43:50,192
当地案件和Mac案件让我们去做这两种情况。

826
00:43:50,261 --> 00:43:51,661
我们会先做本地案件。

827
00:43:53,164 --> 00:43:55,531
现在，当我们放弃时，collectionView已经

828
00:43:55,599 --> 00:43:58,567
给我们这个协调员。这位协调员，

829
00:43:58,636 --> 00:44:01,070
我会更容易阅读，因为它是如此

830
00:44:01,138 --> 00:44:04,373
在这里名字长，你可以看到有两个参数

831
00:44:04,442 --> 00:44:07,443
这东西。一，这只是collectionView涉及和

832
00:44:07,512 --> 00:44:09,344
一位是这位协调员。现在这个协调员会去的

833
00:44:09,413 --> 00:44:12,948
给我们所有我们需要知道的信息来做这个下降。

834
00:44:13,017 --> 00:44:15,551
它会告诉我们的第一件事，

835
00:44:15,620 --> 00:44:20,857
最重要的是destinationIndexPath。

836
00:44:20,925 --> 00:44:23,992
好的，这显然是我们所在的IndexPath

837
00:44:24,061 --> 00:44:25,661
掉落。和

838
00:44:25,730 --> 00:44:30,866
那=到协调者destinationIndexPath。

839
00:44:30,935 --> 00:44:33,769
但那可能是零，因为你可能会拖累它

840
00:44:33,837 --> 00:44:35,972
不在任何之间的collectionView的一部分

841
00:44:36,040 --> 00:44:38,741
现有的单元，所以这可能是零。所以如果那样

842
00:44:38,810 --> 00:44:43,045
发生，我只是要创建一个IndexPath与项目0和

843
00:44:43,114 --> 00:44:49,752
部分0.好的，我可以选择其他的IndexPath

844
00:44:49,821 --> 00:44:52,822
这就是我使用我的默认设置。可以，然后呢

845
00:44:52,891 --> 00:44:56,625
现在我们知道我们在哪里放弃这个下降。现在，

846
00:44:56,694 --> 00:44:58,428
这只是通过所有的问题

847
00:44:58,496 --> 00:45:03,332
这些项目在协调员项目中。这些

848
00:45:03,401 --> 00:45:07,403
项目是UICollectionViewDrop项目，他们有一些非常

849
00:45:07,471 --> 00:45:09,205
有趣的信息。

850
00:45:09,274 --> 00:45:13,876
例如，如果我可以让sourceIndexPath

851
00:45:13,945 --> 00:45:17,580
=这个项目的sourceIndexPath，

852
00:45:17,649 --> 00:45:21,817
那么我知道这种阻力来自我自己，而且

853
00:45:21,885 --> 00:45:24,787
这是它的sourceIndexPath。所以我甚至不需要

854
00:45:24,855 --> 00:45:27,356
看看这种情况下的本地情况就知道这是事实

855
00:45:27,425 --> 00:45:28,791
来自我，真棒。

856
00:45:28,860 --> 00:45:31,327
而且我现在知道来源和目的地，

857
00:45:31,396 --> 00:45:34,197
这是微不足道的。我所需要做的就是更新我的模型

858
00:45:34,265 --> 00:45:36,499
让信息源到达目的地。

859
00:45:36,568 --> 00:45:39,134
然后更新collectionView以删除

860
00:45:39,203 --> 00:45:42,704
来自源的那个并将它添加到另一个。

861
00:45:42,773 --> 00:45:46,008
所以，这可能是最简单的情况，这是本地的情况

862
00:45:46,077 --> 00:45:49,645
所以我们来做吧。首先，让我们得到属性字符串

863
00:45:49,714 --> 00:45:53,382
我们需要这么说我可以说，如果我能让这个归因于我们，

864
00:45:53,451 --> 00:45:56,118
这是我们正在拖动的归因字符串。

865
00:45:56,187 --> 00:45:58,821
幸运的是，我把它藏在当地的物体中，

866
00:45:58,889 --> 00:46:03,492
记得吗？所以我会得到拖动项目Item和

867
00:46:03,560 --> 00:46:07,929
得到它的本地对象。请记住，我可以把它藏在当地

868
00:46:07,998 --> 00:46:11,033
当我做出拖动项目时，在这里对象。我不必这样做

869
00:46:11,102 --> 00:46:14,169
任何提供者的东西来得到它，但我会有

870
00:46:14,238 --> 00:46:17,773
称为NSAttributed字符串，因为它在任何。所以我会

871
00:46:17,842 --> 00:46:20,442
得到我将能够的属性字符串

872
00:46:20,511 --> 00:46:23,612
因为我知道我设定了。然后我可以把属性字符串

873
00:46:23,681 --> 00:46:27,950
在新的地方，并从旧的地方移动另一个。

874
00:46:28,019 --> 00:46:31,720
所以，我们走吧，我会说emojis，这是我的模特，

875
00:46:31,789 --> 00:46:37,994
在sourceIndexPath.item中删除如此

876
00:46:38,062 --> 00:46:42,198
删除东西从哪里来。和emojis

877
00:46:42,266 --> 00:46:46,468
插入正在拖动的这个归属字符串

878
00:46:46,537 --> 00:46:51,239
在destinationIndex path.item。瞧，我已经更新了

879
00:46:51,308 --> 00:46:55,578
我的模型。好的，我把b从一个地方搬到另一个地方。

880
00:46:55,646 --> 00:47:02,718
好的，destinationIndexPath，Path。

881
00:47:02,786 --> 00:47:07,857
这个可能也在这里，大括号。

882
00:47:07,925 --> 00:47:14,029
好吧，现在我必须更新collectionView本身，

883
00:47:14,098 --> 00:47:18,334
这是不，这不是一个花括号。

884
00:47:18,402 --> 00:47:21,570
我在那做什么？项目，是的，谢谢你，

885
00:47:21,639 --> 00:47:24,773
项目。好，现在我们已经建立了模型。

886
00:47:24,842 --> 00:47:26,341
现在我们要更新collectionView。

887
00:47:26,410 --> 00:47:27,944
那就是collectionView。

888
00:47:28,012 --> 00:47:30,345
现在我可以，我不想在这里做一件事，

889
00:47:30,414 --> 00:47:33,749
非常重要的理解，不要在这里重新加载数据。

890
00:47:33,818 --> 00:47:36,718
不要在拖动中重新加载数据，因为它

891
00:47:36,787 --> 00:47:40,222
重置整个世界，这是坏事，不要这样做。所以与其，

892
00:47:40,291 --> 00:47:43,558
我必须删除行并分别插入行。所以

893
00:47:43,627 --> 00:47:48,831
我要删除sourceIndexPath中的行。和

894
00:47:48,900 --> 00:47:53,369
那么我要去插入行，

895
00:47:54,906 --> 00:47:58,173
InsertItems，对不起，我一直在说行，

896
00:47:58,242 --> 00:48:03,712
使用destinationIndexPath上的表视图。现在，

897
00:48:03,780 --> 00:48:07,649
这看起来像。

898
00:48:07,718 --> 00:48:12,220
插入项目。所以这看起来像这样可以正常工作

899
00:48:12,289 --> 00:48:13,923
实际上这可能会导致程序崩溃。

900
00:48:13,991 --> 00:48:18,894
原因是当你做多个。这是

901
00:48:18,963 --> 00:48:22,898
indexpath.string。当你对你的多个改变

902
00:48:22,967 --> 00:48:27,102
集合视图，每一步通常都必须有

903
00:48:27,171 --> 00:48:30,438
你的模型完全同步，这不会是因为

904
00:48:30,507 --> 00:48:32,041
直到我做了这两件事，

905
00:48:32,110 --> 00:48:34,109
表格将不会与模型同步。但

906
00:48:34,178 --> 00:48:36,045
有一种非常酷的方式来解决这个问题，

907
00:48:36,114 --> 00:48:38,013
这是collectionView和

908
00:48:38,082 --> 00:48:41,883
tableView有这个方法叫做performBatchUpdates。

909
00:48:41,952 --> 00:48:45,887
而performBatchUpdates只是有一个闭包。在里面

910
00:48:45,956 --> 00:48:50,159
闭包，你可以把任何数量的这些删除项目，

911
00:48:50,228 --> 00:48:52,761
插入物品，移动物品，无论你想做什么。和

912
00:48:52,830 --> 00:48:55,464
它将把它们全部作为一项操作来完成

913
00:48:55,533 --> 00:48:57,733
它永远不会与你的模型不同步。

914
00:48:57,802 --> 00:49:00,469
看看那里发生了什么？它也有一个很好的完成

915
00:49:00,537 --> 00:49:02,605
这里我们不需要的东西。

916
00:49:02,673 --> 00:49:04,739
但是，当所有更新都完成后，

917
00:49:04,808 --> 00:49:06,909
它会更接近地完成这个完成。所以

918
00:49:06,977 --> 00:49:10,245
如果您执行多个操作，请不要忘记执行批量更新

919
00:49:10,314 --> 00:49:14,150
调整你的tableView或collectionView。和

920
00:49:14,218 --> 00:49:16,952
那么我们需要做的最后一件事就是询问协调员

921
00:49:17,021 --> 00:49:20,889
做下降。我们需要这样做的原因是，

922
00:49:20,958 --> 00:49:24,459
我们需要为发生的下降发生动画，就在那里。所以

923
00:49:24,528 --> 00:49:28,697
我们会做下降。 dragItem是item.dragItem。

924
00:49:28,766 --> 00:49:34,904
ItemAt是destinationIndexPath。所以

925
00:49:34,972 --> 00:49:36,672
这实际上会让滴剂发生。

926
00:49:36,740 --> 00:49:40,809
所以这将制作动画并移动蜜蜂。

927
00:49:40,878 --> 00:49:44,213
与此同时，这将会放弃这件事

928
00:49:44,281 --> 00:49:47,682
你的手指上的那个东西会消失，而且是加号

929
00:49:47,751 --> 00:49:52,387
标志将消失，所有的业务。好，如此

930
00:49:52,456 --> 00:49:57,659
让我们来看看这个。好的，我们走吧。

931
00:49:57,728 --> 00:50:01,764
现在我们只完成了当地的情况，但在这里，蜜蜂，

932
00:50:01,832 --> 00:50:07,069
移动它并放下。 Woo-hoo，它的工作，好吗？

933
00:50:07,137 --> 00:50:12,641
这在这里，下降。现在这个从外面来这里

934
00:50:12,710 --> 00:50:16,144
仍然不会工作。不工作，因为这样

935
00:50:16,213 --> 00:50:19,949
不是当地的情况，对吧？所以我们来做一下本地案例。

936
00:50:22,953 --> 00:50:27,723
好的，这就是这里的其他地方。是啊，

937
00:50:27,791 --> 00:50:31,894
这是其他的，不是那个，其他的。

938
00:50:31,963 --> 00:50:34,930
这一个，这个源索引路径的其他部分。

939
00:50:34,999 --> 00:50:37,933
所以我们没有源索引路径，这意味着这一点

940
00:50:38,001 --> 00:50:40,803
事情来自其他地方，所以我们如何做到这一点？

941
00:50:40,871 --> 00:50:43,405
现在，事情变得非常简单，太令人惊讶了，

942
00:50:43,473 --> 00:50:45,774
但这里有一点问题。

943
00:50:45,843 --> 00:50:49,144
如果你从外面拖动东西然后放下它，

944
00:50:49,213 --> 00:50:52,347
该信息是否立即可用？没有，

945
00:50:52,416 --> 00:50:54,950
你必须异步地从它那里获取它。

946
00:50:55,019 --> 00:50:55,617
那么，你到底是什么

947
00:50:55,686 --> 00:50:58,286
当你拿走它时，你会怎么处理你的表格？

948
00:50:58,355 --> 00:51:00,422
如果需要十秒钟呢？所以

949
00:51:00,490 --> 00:51:03,425
你要做的是在表格上放置一个占位符。

950
00:51:03,493 --> 00:51:06,128
集合视图为你管理所有这些

951
00:51:06,196 --> 00:51:08,330
你所要做的就是当数据最终到达时。

952
00:51:08,399 --> 00:51:10,633
你告诉占位符，它被调用的上下文。

953
00:51:10,701 --> 00:51:13,001
好的，我收到了信息。更新你的模型和

954
00:51:13,070 --> 00:51:16,171
它会自动换出占位符单元格

955
00:51:16,240 --> 00:51:20,375
您的单元格之一与您拥有的数据类型相匹配。所以

956
00:51:20,444 --> 00:51:21,844
让我们看看我们如何做到这一点。

957
00:51:21,912 --> 00:51:24,413
我们通过创建占位符上下文来完成此操作。

958
00:51:24,481 --> 00:51:27,816
这是要管理占位符的事情。和

959
00:51:27,884 --> 00:51:32,821
placeholderContext，你从协调员处获得，

960
00:51:32,890 --> 00:51:38,260
哎呀，协调员，要求它放弃该项目

961
00:51:38,328 --> 00:51:42,764
到一个占位符。你看到那里的第二个初始化器，

962
00:51:42,833 --> 00:51:45,934
将项目丢弃到占位符。所以我会做这个。所以

963
00:51:46,003 --> 00:51:48,737
我要拖动的项目是item.drag项目。

964
00:51:48,806 --> 00:51:51,407
记住，我们仍然在这个循环中，

965
00:51:51,476 --> 00:51:53,174
因为我们可能会放弃多个项目。

966
00:51:53,243 --> 00:51:55,777
所以我们逐个放弃它们。所以我们就是这样

967
00:51:55,846 --> 00:51:57,913
拖动。然后这里是占位符。

968
00:51:57,982 --> 00:51:59,081
所以我必须创建其中的一个。

969
00:51:59,150 --> 00:52:05,020
让我在这里让你更易于阅读。好的，

970
00:52:05,088 --> 00:52:09,257
让我把这个放在另一条线上。好的，所以我必须

971
00:52:09,326 --> 00:52:12,494
创建一个UIDropPlaceholder。要做到这一点，我需要

972
00:52:12,563 --> 00:52:15,730
知道你要插入占位符的位置。和

973
00:52:15,799 --> 00:52:19,034
那么它有一个重用标识符，我会谈论这个

974
00:52:19,102 --> 00:52:21,970
在第二。因此，让我们将insertionPathIndex设置为，

975
00:52:22,039 --> 00:52:24,939
显然是目的地。好的。哪里

976
00:52:25,008 --> 00:52:28,310
我们正在考虑这个。这就是我们计算的这个东西

977
00:52:28,379 --> 00:52:30,812
在这里开始。那是目的地。和

978
00:52:30,881 --> 00:52:33,582
看看这个重用标识符。那是什么呀？

979
00:52:33,651 --> 00:52:36,885
那么你可以决定什么样的单元格

980
00:52:36,954 --> 00:52:40,388
是占位符。它不包含一些预先包装的。

981
00:52:40,457 --> 00:52:43,258
你可以决定。所以这是要求你重用

982
00:52:43,327 --> 00:52:47,162
在故事板中用于创建该事物的标识符。

983
00:52:47,231 --> 00:52:52,367
所以我会调用给我的DropPlaceholderCell。

984
00:52:52,436 --> 00:52:55,137
我可以称它为我想要的任何东西。这只是那个字符串

985
00:52:55,205 --> 00:52:58,773
我要用我的故事板创作这个东西。现在

986
00:52:58,842 --> 00:53:02,444
有趣的是，你也可以在最后加入

987
00:53:02,513 --> 00:53:07,549
这是一个封闭。在那个封闭中你基本上可以

988
00:53:07,618 --> 00:53:10,186
初始化这个单元格或做同样的事情你会做，

989
00:53:10,254 --> 00:53:12,154
你在哪里做dequeueReusableCell，因为

990
00:53:12,222 --> 00:53:14,089
dequeueReusableCell永远不会被调用。这是

991
00:53:14,157 --> 00:53:16,291
占位符单元格，它不会调用那个东西。所以

992
00:53:16,359 --> 00:53:18,427
在这里你可以做同样的设置，如果你有outlets

993
00:53:18,496 --> 00:53:20,562
在你的牢房里，或者其他什么东西，你可以把它们全部放好。

994
00:53:20,631 --> 00:53:21,663
我们不会在我们的任何渠道，所以

995
00:53:21,731 --> 00:53:24,233
我们不会这样做，但那是你要做的地方。

996
00:53:25,802 --> 00:53:30,205
我记得，所以我只想确保我们得到了这个

997
00:53:30,274 --> 00:53:35,577
好，没有错误。那么让我们回到我们的故事板和

998
00:53:35,646 --> 00:53:37,346
使该占位符单元格。

999
00:53:37,415 --> 00:53:39,448
您在集合视图中制作单元格的方式，

1000
00:53:39,517 --> 00:53:41,783
你只需选择集合视图和

1001
00:53:41,852 --> 00:53:44,486
去检查它。第一件事是物品，

1002
00:53:44,555 --> 00:53:48,056
我想从一个项目到两个项目。好的，和

1003
00:53:48,124 --> 00:53:52,060
它在这里做第二个项目。我会去做

1004
00:53:52,129 --> 00:53:57,999
当然我说它不是表情符号单元格，它是一个放置占位符

1005
00:53:58,068 --> 00:54:02,504
单元格。这就是我将它链接到代码行I的方式

1006
00:54:02,572 --> 00:54:06,375
刚刚写道。它的类型不一定是表情符号集合

1007
00:54:06,443 --> 00:54:08,977
查看单元格，因为它不会在那里有表情符号。

1008
00:54:09,045 --> 00:54:12,413
所以我会让它只是一个普通的UI集合视图

1009
00:54:12,482 --> 00:54:17,452
单元格。没什么特别的，它不需要这个小标签

1010
00:54:17,521 --> 00:54:19,655
在里面，因为它是一个占位符

1011
00:54:19,723 --> 00:54:22,724
该标签，该信息尚未到达。所以

1012
00:54:22,793 --> 00:54:25,661
相反，我会把一个活动指标放在那里。

1013
00:54:26,931 --> 00:54:28,230
所以它在那里旋转，

1014
00:54:28,298 --> 00:54:31,733
让用户知道我在等待一些丢失的数据。

1015
00:54:31,802 --> 00:54:34,103
所以我会把它放在那里。让我们继续并集中它。

1016
00:54:35,939 --> 00:54:39,374
让我们来，这可能够好了。

1017
00:54:39,443 --> 00:54:41,543
让我们做到这一点，它开始了动画。所以，

1018
00:54:41,611 --> 00:54:43,545
我要在这里点击它。所以它开始动画，

1019
00:54:43,614 --> 00:54:47,416
所以我甚至不必告诉它动画。好吧，

1020
00:54:47,484 --> 00:54:52,054
所有这一切。我们在这里使用什么？表情符号，

1021
00:54:52,122 --> 00:54:54,389
我想我改变了这一点，我想不是。是啊。

1022
00:54:54,458 --> 00:54:59,194
我不是已经改变了吗？我做到了。占位符单元格。

1023
00:55:00,664 --> 00:55:03,932
所以现在我们已经为这个占位符单元设置了这个设置，

1024
00:55:04,001 --> 00:55:09,771
我们回到这里来看我们的守则。不，不在那里。在这里。

1025
00:55:09,840 --> 00:55:14,276
好的，我们已经准备好了这个漂亮的占位符。

1026
00:55:14,345 --> 00:55:16,011
我们现在需要做的就是获取数据。

1027
00:55:16,080 --> 00:55:19,647
当它到达时，我们只是告诉占位符上下文，

1028
00:55:19,716 --> 00:55:22,084
在这里，把它们交换出来

1029
00:55:22,152 --> 00:55:24,886
这是我的模型改变。所以，我会得到这些数据

1030
00:55:24,955 --> 00:55:26,689
与以前相比有点不同。

1031
00:55:26,757 --> 00:55:29,591
上次我们使用该方法的加载对象时，

1032
00:55:29,660 --> 00:55:32,827
复数，在会议上加载对象，请记住？

1033
00:55:32,896 --> 00:55:34,763
当我们把图像放在那里。

1034
00:55:34,832 --> 00:55:39,534
这一次，我只是要抓住一件事，而不是加载对象，

1035
00:55:39,603 --> 00:55:41,837
但抓住我物品中的一个物体。

1036
00:55:41,905 --> 00:55:45,474
所以我会在这里说item.dragItem.itemProvider。

1037
00:55:45,542 --> 00:55:49,878
所以这是物品提供者，提供的东西

1038
00:55:49,947 --> 00:55:54,116
我的项目，因为它是异步提供它

1039
00:55:54,185 --> 00:55:57,519
在我的应用程序之外。加载对象，

1040
00:55:57,588 --> 00:56:02,725
我要说类，我想要一个NSAttributedString。

1041
00:56:08,766 --> 00:56:11,934
它会以异步的方式回馈给我

1042
00:56:12,002 --> 00:56:14,802
提供者。这将是属性字符串，和

1043
00:56:14,871 --> 00:56:17,439
也可能和错误，我们会忽略错误。

1044
00:56:17,507 --> 00:56:19,274
您可以查看文档以了解什么类型

1045
00:56:19,343 --> 00:56:21,609
的错误，你可以得到。但你可以想象得很对，

1046
00:56:21,678 --> 00:56:24,345
提供这些数据的错误。现在

1047
00:56:24,414 --> 00:56:28,983
这个特定的闭包不在主队列上执行。所以

1048
00:56:29,052 --> 00:56:31,019
这一个我们需要不幸的

1049
00:56:31,088 --> 00:56:35,990
如果我们想要做任何事，请说DispatchQueue.main.async，

1050
00:56:36,059 --> 00:56:39,394
到我们所做的用户界面。我们要在这里做什么，

1051
00:56:39,463 --> 00:56:42,030
我们是否会改变我们将会造成的模式

1052
00:56:42,099 --> 00:56:45,033
一些UI的东西发生。

1053
00:56:45,102 --> 00:56:47,636
现在，可能实际上这个变化不会

1054
00:56:47,704 --> 00:56:50,271
直接影响UI因为我们只是在改变我们的模型。

1055
00:56:50,340 --> 00:56:53,008
但问题是我们会在提问的背景下做到这一点

1056
00:56:53,077 --> 00:56:54,976
替换该单元格的占位符，以及

1057
00:56:55,045 --> 00:56:58,213
这当然会导致用户界面。那么我们如何做到这一点？

1058
00:56:58,282 --> 00:57:03,285
我们只是说placeholderContext.commitInse-

1059
00:57:03,353 --> 00:57:06,788
我的数据的三分之一。和

1060
00:57:06,857 --> 00:57:11,960
这里就是这个插入索引路径，

1061
00:57:12,029 --> 00:57:16,264
这里是修复我的模型的代码，就是这样。

1062
00:57:16,333 --> 00:57:17,866
这就是我们需要做的和

1063
00:57:17,935 --> 00:57:21,169
它会自动替换该占位符

1064
00:57:21,238 --> 00:57:24,473
一个单元格通过调用你的正常自我或物品的方法。

1065
00:57:24,542 --> 00:57:27,309
注意这个插入索引路径可能

1066
00:57:27,377 --> 00:57:30,512
与此DestinationIndexPath不同。

1067
00:57:30,581 --> 00:57:35,350
为什么？因为这可能需要十秒钟，不太可能，

1068
00:57:35,419 --> 00:57:37,953
但它可能有。所以它可能改变了其他的东西

1069
00:57:38,021 --> 00:57:40,221
集合视图可能一直在进行。好的，和

1070
00:57:40,290 --> 00:57:43,758
新的单元格添加，其他事情来得快。所以

1071
00:57:43,827 --> 00:57:46,794
总是在这里使用插入索引，而你只使用它

1072
00:57:46,863 --> 00:57:49,764
更新你的模型。那么如何在这里更新我的模型？

1073
00:57:49,833 --> 00:57:54,502
那是我的emojis.insert那东西

1074
00:57:54,571 --> 00:57:59,341
回来这是作为一个属性的提供者

1075
00:57:59,409 --> 00:58:04,779
的字符串。那么让我们说，如果我们可以让belongsString

1076
00:58:04,848 --> 00:58:08,684
= provider作为NSAttributedString。

1077
00:58:10,988 --> 00:58:16,224
好的，那么我们可以做到这一点。所以，插入那个

1078
00:58:16,293 --> 00:58:23,064
位于insertionIndexPath.item的attributesString。

1079
00:58:23,133 --> 00:58:26,101
这更新了我们的模型，这件事处理剩下的事情。

1080
00:58:26,170 --> 00:58:27,035
你不需要做其他事情，

1081
00:58:27,104 --> 00:58:29,204
你不必做任何插入行，

1082
00:58:29,272 --> 00:58:33,741
任何业务。是的，这是attribution.string，

1083
00:58:33,810 --> 00:58:36,945
因为我们的模型中只有字符串，而不是定语

1084
00:58:37,014 --> 00:58:39,347
字符串。当然，我们需要你做自我。

1085
00:58:39,416 --> 00:58:43,251
在这里，因为我们在闭包。现在如果

1086
00:58:43,320 --> 00:58:46,321
某些原因你无法从中获得该字符串

1087
00:58:46,390 --> 00:58:47,122
提供者，

1088
00:58:47,190 --> 00:58:50,325
也许这是一个错误。然后你想让

1089
00:58:50,393 --> 00:58:55,496
placeholderContext知道删除该占位符。

1090
00:58:55,565 --> 00:58:57,832
因为你毕竟无法得到另一个字符串，所以

1091
00:58:57,901 --> 00:59:00,735
你走了，就是这样。所以你必须做的就是接受

1092
00:59:00,804 --> 00:59:03,037
从其他地方的东西到一个collectionView。所以

1093
00:59:03,106 --> 00:59:08,577
让我们在这里看到这个行动。所以我们

1094
00:59:08,645 --> 00:59:11,947
没有希望破坏我们的地方。不，还在工作，

1095
00:59:12,015 --> 00:59:14,683
并希望你能把我们的蜜蜂放进去，

1096
00:59:14,751 --> 00:59:17,418
开始了。 Woo-hoo，我们有一只蜜蜂，现在我们的字体是

1097
00:59:17,487 --> 00:59:20,488
真的很大，所以我们不能看到它，我们可能想要我们的

1098
00:59:20,557 --> 00:59:23,891
字体自我调整或其他。但是，这只是，你知道的

1099
00:59:23,960 --> 00:59:27,529
就像现在任何事情一样，我们可以移动它，这是它的一部分

1100
00:59:27,597 --> 00:59:31,800
我们的collectionView等。所以这是collectionView拖动和

1101
00:59:31,869 --> 00:59:35,269
从开始到结束都不是那么复杂

1102
00:59:35,338 --> 00:59:39,507
其实他们做得很好。现在接下来的事情

1103
00:59:39,576 --> 00:59:44,145
我们想要做的是将这些东西拖入我们的形象，对吧？

1104
00:59:44,214 --> 00:59:47,749
我们有我们的，哎呀让我回到我的照片里，

1105
00:59:47,818 --> 00:59:50,485
和，我最喜欢的图像在哪里？

1106
00:59:50,553 --> 00:59:53,054
还有，我们在这里选一些随机图片。

1107
00:59:53,123 --> 00:59:55,923
好的，所以我在这里有我的形象，而且

1108
00:59:55,992 --> 00:59:59,127
我们希望能够拿起一个苹果，并把它

1109
00:59:59,196 --> 01:00:02,630
在树下。那么我们该怎么做这个拖放？

1110
01:00:02,699 --> 01:00:05,633
嗯，我们只是，我们所需要做的就是实现丢弃

1111
01:00:05,702 --> 01:00:09,303
我们的EmojiArtView中的NSAttributedStrings。这就是你

1112
01:00:09,372 --> 01:00:12,841
需要做，而且非常简单，让我们在这里尽快完成

1113
01:00:12,910 --> 01:00:16,211
时间不多了。那么，让我们继续阅读我们的表情符号艺术视图

1114
01:00:16,280 --> 01:00:18,880
这里是我们的EmojiArtView，它看起来很类似

1115
01:00:18,948 --> 01:00:22,684
在这一点上简单化。我要添加或

1116
01:00:22,753 --> 01:00:26,721
放弃它的交互，init的初始化器。所以

1117
01:00:26,789 --> 01:00:31,593
我有这个好的东西，我输入的是模板

1118
01:00:31,662 --> 01:00:34,295
具有UI视图初始化器。记住你必须重写

1119
01:00:34,364 --> 01:00:36,598
这两个inits，记得吗？和

1120
01:00:36,666 --> 01:00:39,134
那么我有这个很好的设置，所以在这里的设置，

1121
01:00:39,203 --> 01:00:41,903
我只是想增加互动。并记住我

1122
01:00:41,972 --> 01:00:44,539
现在在UI视图中，所以我将它添加到自己。

1123
01:00:44,608 --> 01:00:50,578
UIDropInteraction与代表作为我自己，

1124
01:00:50,647 --> 01:00:55,917
现在我是一个UIDropInteractionDelegate。

1125
01:00:55,986 --> 01:00:58,620
我在这里也有一件很好的小东西，

1126
01:00:58,689 --> 01:01:01,656
dropstubs只是给我的存根

1127
01:01:01,725 --> 01:01:05,994
三种方法canHandle，didUpdate，performDrop，

1128
01:01:06,063 --> 01:01:08,663
你现在应该习惯于这一点。和我们一样

1129
01:01:08,732 --> 01:01:09,731
在集合视图但是

1130
01:01:09,800 --> 01:01:11,933
这些是非集合版本。和

1131
01:01:12,001 --> 01:01:14,702
那么我在CanHandle中做什么？我只是说我是否

1132
01:01:14,771 --> 01:01:17,272
在这种情况下可以加载正确类的对象

1133
01:01:17,340 --> 01:01:22,210
attributedStrings。我在sessionDidUpdate中做什么？

1134
01:01:22,278 --> 01:01:24,980
我必须返回一个提案，在这里我总是

1135
01:01:25,048 --> 01:01:27,949
会允许放弃一个属性字符串。它是

1136
01:01:28,017 --> 01:01:30,484
总是会成为一个副本，因为我不会移动的东西

1137
01:01:30,553 --> 01:01:33,054
在我自己的内部拖放。我要移动它们

1138
01:01:33,123 --> 01:01:35,890
直接，所以我会永远在这里复制，然后最终我

1139
01:01:35,959 --> 01:01:38,059
只需加载某个类的对象。

1140
01:01:38,127 --> 01:01:39,994
NSAttributed字符串当然，和

1141
01:01:40,063 --> 01:01:42,997
这是属性字符串列表，项目提供者

1142
01:01:43,066 --> 01:01:46,968
属于字符串。在这里我只需要添加这些

1143
01:01:47,037 --> 01:01:52,474
以我的视图来看，子视图添加标签，子视图。

1144
01:01:52,542 --> 01:01:55,076
所以，我要在这里用一个小功能来做到这一点，

1145
01:01:55,145 --> 01:01:57,178
添加标签，然后我会写。

1146
01:01:57,247 --> 01:02:00,849
这将得到属性的字符串

1147
01:02:00,917 --> 01:02:04,152
让我们来看看我们需要的归属String。

1148
01:02:04,221 --> 01:02:06,420
其实我也需要知道把它放在哪里

1149
01:02:06,489 --> 01:02:09,191
让我们先说一下滴滴点

1150
01:02:09,259 --> 01:02:12,693
会话，拖动会话，这是什么位置

1151
01:02:12,762 --> 01:02:17,665
拖动我的坐标系。所以我只是找到了

1152
01:02:17,734 --> 01:02:20,168
这个东西掉在哪里我显然需要知道，

1153
01:02:20,237 --> 01:02:24,205
它被放弃以便能够做到这一点。那么，我们来补充一下

1154
01:02:24,274 --> 01:02:29,076
所有因循环而做的小事

1155
01:02:29,145 --> 01:02:32,780
在提供商中将字符串归为?,

1156
01:02:32,849 --> 01:02:39,854
一个归属串的数组，它应该是。但也许

1157
01:02:39,923 --> 01:02:42,123
你不知道你可以这样做，但你可以这样说

1158
01:02:42,192 --> 01:02:44,659
一个数组正好在这个四个循环的中间。和

1159
01:02:44,727 --> 01:02:47,696
事实上，你甚至可以说，如果由于某种原因是零，

1160
01:02:47,764 --> 01:02:50,598
因为你不能这样做，那么只需使用一个空数组，

1161
01:02:50,667 --> 01:02:55,570
就在这儿。好吧，这是一个很酷的伎俩。好吧，

1162
01:02:55,639 --> 01:02:58,539
所以我们要添加一个标签，用于attributes，

1163
01:02:58,608 --> 01:03:02,343
我们正在为每个人做这个。我们将会有它

1164
01:03:02,412 --> 01:03:07,982
以dropPoint为中心，所以我们

1165
01:03:08,051 --> 01:03:13,421
写这个方法我自己做那个私人func，这个

1166
01:03:13,490 --> 01:03:18,426
是一个很容易的，addLabel(with attributedString:,

1167
01:03:18,494 --> 01:03:24,565
类型NSAttributedString，centeredAt point：CGPoint）。

1168
01:03:24,634 --> 01:03:29,805
我只是想创建一个UILabel。我

1169
01:03:29,873 --> 01:03:33,474
要设置其backgroundColor以清除，=

1170
01:03:33,543 --> 01:03:38,479
明确，因为我希望你知道我的形象，通过周围展示

1171
01:03:38,548 --> 01:03:40,982
它的边缘我不想要一个大的白色背景或

1172
01:03:41,050 --> 01:03:44,286
一些东西。我会明显地设置归属文本

1173
01:03:44,354 --> 01:03:46,921
被传入的是此字符串。

1174
01:03:46,990 --> 01:03:48,923
我要调整大小来适应它，

1175
01:03:48,992 --> 01:03:53,061
好吧，我不希望这个标签是一些大的随机大小。

1176
01:03:53,130 --> 01:03:56,197
我要去做什么我会做什么？是的，我要走了

1177
01:03:56,266 --> 01:04:00,601
定位它，label.center =下降点在那里，和

1178
01:04:00,670 --> 01:04:06,040
当然我必须添加SubView给自己。而已。

1179
01:04:06,109 --> 01:04:12,780
我们开始做吧。好的，让我们去看一张图片。

1180
01:04:12,849 --> 01:04:16,784
我失去了我最喜欢的形象吗？不，我最喜欢的就是它。

1181
01:04:16,853 --> 01:04:19,253
这是我最喜欢的形象。可以，然后呢

1182
01:04:19,322 --> 01:04:22,056
我在这里有我的形象，我们可以放大和缩小。

1183
01:04:22,125 --> 01:04:26,494
我们可以拿起一只蜜蜂，放下蜜蜂。拿起另一只蜜蜂，

1184
01:04:26,562 --> 01:04:29,830
放下蜜蜂。也许我们会在这里放一个苹果。现在

1185
01:04:29,899 --> 01:04:32,533
当然我们希望能够调整这些东西，而且

1186
01:04:32,602 --> 01:04:35,870
移动它们，对吗？所以，我不想浪费你的时间。

1187
01:04:35,939 --> 01:04:38,306
这只是杰克做一些手势识别器。

1188
01:04:38,375 --> 01:04:40,642
我已经把这些文件放在这里。

1189
01:04:40,710 --> 01:04:44,345
所以让我们把它们放进去

1190
01:04:44,414 --> 01:04:46,414
你可以晚点去看看你的闲暇时光，

1191
01:04:46,483 --> 01:04:50,151
它确实非常简单。手势识别器点击和

1192
01:04:50,219 --> 01:04:53,554
捏和平底锅，这样的事情。我们需要做的就是

1193
01:04:53,623 --> 01:04:57,024
打开它，让我们在这里下载并说addEmoji

1194
01:04:57,093 --> 01:04:59,694
那个标签的GestureRecognizers，所以

1195
01:04:59,763 --> 01:05:01,963
只是将这些识别器添加到标签中。

1196
01:05:02,999 --> 01:05:04,599
好的，让我们看看这是行动。

1197
01:05:10,540 --> 01:05:14,843
让我们把它放在这里，把它拖进去。现在，

1198
01:05:14,911 --> 01:05:18,246
我们在这里拖一只蜜蜂。拽另一只蜜蜂，这是

1199
01:05:18,315 --> 01:05:20,849
我在开始时正在做什么来证明这一点。

1200
01:05:20,917 --> 01:05:23,551
然后我们可以挖掘它们并使它们更大，

1201
01:05:23,619 --> 01:05:25,486
点击它们并使它们变小。

1202
01:05:25,555 --> 01:05:27,322
我们甚至可以放大方式，

1203
01:05:27,390 --> 01:05:29,857
在我们做出一些非常小的之前，像苹果一样放它

1204
01:05:29,926 --> 01:05:32,860
在这里。使它非常小，对吗？

1205
01:05:32,929 --> 01:05:37,431
然后我们放大。这将是一个小小的苹果，

1206
01:05:37,500 --> 01:05:43,637
等等。现在，我要回到幻灯片。

1207
01:05:43,706 --> 01:05:45,706
就像我说的，当我完成幻灯片时，

1208
01:05:45,775 --> 01:05:48,809
我们不能做文本演示，因为我们有

1209
01:05:48,878 --> 01:05:51,813
这期中期将进来。但这几乎是我们所需要的

1210
01:05:51,882 --> 01:05:54,182
做这个集合视图，做全面拖动和

1211
01:05:54,250 --> 01:05:56,884
下降和所有，所以这是相当直接的。

1212
01:05:56,953 --> 01:05:58,252
希望这会有道理。

1213
01:05:58,321 --> 01:06:00,621
如果您对此有任何疑问，

1214
01:06:00,690 --> 01:06:03,258
广场是一个很好的地方。好吧，

1215
01:06:03,326 --> 01:06:08,663
让我们回到我们的幻灯片并谈论UITextField。

1216
01:06:08,731 --> 01:06:11,966
好吧，UITextField很像UILabel和

1217
01:06:12,035 --> 01:06:16,470
你可能会想，这只是一个可编辑的UILabel。

1218
01:06:16,539 --> 01:06:19,340
这比这更复杂一点，但没有更多。

1219
01:06:19,409 --> 01:06:21,876
有一件事要真正思考

1220
01:06:21,944 --> 01:06:25,713
UITextField具有可编辑的文本字段，尤其是在

1221
01:06:25,782 --> 01:06:30,418
iPhone，并不是一个非常好的用户界面。这真的很容易

1222
01:06:30,486 --> 01:06:33,588
陷入投掷文本字段到您的用户界面的陷阱

1223
01:06:33,656 --> 01:06:35,289
思考，好吧，这是一个很好的UI。

1224
01:06:35,358 --> 01:06:36,757
因为你正在模拟器中运行

1225
01:06:36,826 --> 01:06:37,458
你需要键盘。

1226
01:06:37,527 --> 01:06:39,561
你只需在这些文本字段中输入，

1227
01:06:39,629 --> 01:06:42,029
打回来，去下一节，而，

1228
01:06:42,098 --> 01:06:43,865
穷人的用户就像我的拇指一样，

1229
01:06:43,934 --> 01:06:45,232
这是另一个水坝文本字段，

1230
01:06:45,301 --> 01:06:49,303
我恨他们。所以它不是主要的输入源。

1231
01:06:49,372 --> 01:06:52,339
如果你能找到一种方法让他们从列表中选择或者

1232
01:06:52,408 --> 01:06:55,076
否则输入数据而不必输入内容，

1233
01:06:55,145 --> 01:06:57,945
它更好。现在在iPad上并非如此

1234
01:06:58,014 --> 01:07:00,948
不好，至少键盘是相当大的，

1235
01:07:01,017 --> 01:07:02,784
它更容易获得，人们可以把它放下来

1236
01:07:02,852 --> 01:07:06,153
用两只手。所以它在iPad上并不是很糟糕，

1237
01:07:06,222 --> 01:07:08,556
但在iPhone上，不要被愚弄。

1238
01:07:08,624 --> 01:07:10,858
我看到很多你在最终的项目中都这样做。

1239
01:07:10,927 --> 01:07:13,327
你将这些项目提交给我们，就像我的上帝，

1240
01:07:13,396 --> 01:07:15,963
这几乎无法使用。因为我们将全部测试

1241
01:07:16,032 --> 01:07:18,432
您在设备上的最终项目。

1242
01:07:18,501 --> 01:07:21,035
我们不会在模拟器中输入。

1243
01:07:21,104 --> 01:07:24,072
所以想想你的用户，无论是文本字段

1244
01:07:24,140 --> 01:07:27,841
你想要什么。一旦你决定你想要一个文本字段，

1245
01:07:27,910 --> 01:07:32,380
这是它的工作原理。所以文本字段是这样的，

1246
01:07:32,449 --> 01:07:35,549
显然，抛出一个键盘和

1247
01:07:35,618 --> 01:07:39,353
让你输入文字。有一件事要注意键盘，

1248
01:07:39,422 --> 01:07:41,856
有没有键盘对象或任何东西，

1249
01:07:41,925 --> 01:07:46,994
iOS中的任何地方。所以键盘出现了

1250
01:07:47,063 --> 01:07:51,465
发生是因为一个对象成为第一响应者。

1251
01:07:51,534 --> 01:07:54,201
所以第一个响应者是获取键盘的东西

1252
01:07:54,270 --> 01:07:56,971
来自键盘的事件。只要有东西变成了

1253
01:07:57,040 --> 01:07:59,006
第一响应者，它开始获取键盘和

1254
01:07:59,075 --> 01:08:02,009
键盘会出现，好吗？因此成为第一个响应者

1255
01:08:02,078 --> 01:08:04,145
是可以发送到文本字段和消息的消息

1256
01:08:04,214 --> 01:08:06,414
它会导致它成为第一响应者，

1257
01:08:06,482 --> 01:08:09,483
这将导致键盘出现。和

1258
01:08:09,552 --> 01:08:12,119
同样，如果你发送它resignFirstResponder它会

1259
01:08:12,188 --> 01:08:14,489
不再是第一响应者，键盘将消失。

1260
01:08:14,557 --> 01:08:17,958
所以这就是你如何让键盘在iOS中进出，

1261
01:08:18,027 --> 01:08:22,163
是通过让事情成为和辞职的第一个响应者。所以

1262
01:08:22,232 --> 01:08:25,700
这对了解键盘很重要。

1263
01:08:25,768 --> 01:08:28,569
关于文本字段的一件事完全不同于

1264
01:08:28,638 --> 01:08:30,871
标签，就是它有一个代表。

1265
01:08:30,940 --> 01:08:33,674
而且它的代表是你与之互动的主要方式

1266
01:08:33,743 --> 01:08:35,743
文本字段。正如所谓的标签，

1267
01:08:35,811 --> 01:08:37,712
标签甚至没有代表。你只是要求

1268
01:08:37,780 --> 01:08:42,317
其文本和设置它的价值，就是这样。而自那以来

1269
01:08:42,385 --> 01:08:45,419
一个文本字段是可编辑的，因为正在进行编辑

1270
01:08:45,488 --> 01:08:47,922
选择变化，或者某人输入新的东西，

1271
01:08:47,991 --> 01:08:50,291
你可以了解所有这些事情。

1272
01:08:50,360 --> 01:08:55,096
另一个例子是在键盘上很多次，

1273
01:08:55,164 --> 01:08:58,700
当用户击中键盘上的返回键时，

1274
01:08:58,768 --> 01:09:01,703
你想让键盘消失，对吧？所以，

1275
01:09:01,771 --> 01:09:05,173
textFieldShouldReturn就在那里，是一种获得的方法

1276
01:09:05,241 --> 01:09:08,109
当返回键被按下时调用。在那里，

1277
01:09:08,177 --> 01:09:11,178
你很可能想说，辞职FirstResponder，和

1278
01:09:11,247 --> 01:09:14,848
将导致键盘消失。这就是一个例子

1279
01:09:14,917 --> 01:09:17,918
你可以对代表做什么。另一个真的

1280
01:09:17,987 --> 01:09:21,555
重要的委托方法是textFieldDidEndEditing。

1281
01:09:21,624 --> 01:09:25,459
这在第一响应者辞职时被调用。

1282
01:09:25,528 --> 01:09:29,497
所以如果有人正在您的文本字段中进行编辑并且他们会触摸

1283
01:09:29,566 --> 01:09:34,235
在另一个文本字段中，您将会退出第一个响应者。

1284
01:09:34,304 --> 01:09:36,638
所以如果你想看看那个时候的文字，

1285
01:09:36,706 --> 01:09:38,673
你会想要实现这个委托方法。

1286
01:09:40,209 --> 01:09:43,244
现在已经说过，文本字段是一个UI控件。

1287
01:09:43,312 --> 01:09:45,579
所以它确实有目标行动，你可以控制，

1288
01:09:45,648 --> 01:09:48,950
拖动它并让它发送特定的目标动作消息

1289
01:09:49,018 --> 01:09:51,985
关于在文本领域发生的某些活动。

1290
01:09:52,054 --> 01:09:54,088
有些时候人们不这样做就把它连接起来

1291
01:09:54,156 --> 01:09:55,790
代表事情。但你有点儿

1292
01:09:55,858 --> 01:09:58,192
需要知道这个代表，因为你需要知道什么

1293
01:09:58,261 --> 01:10:01,128
它有能力做到。所以你一定会想看看

1294
01:10:01,197 --> 01:10:03,965
了解UITextField委托协议，并查看所有内容

1295
01:10:04,033 --> 01:10:06,667
你可以找到关于什么时候发生的事情

1296
01:10:06,736 --> 01:10:09,237
编辑发生在文本字段中。好吧，

1297
01:10:09,305 --> 01:10:13,040
键盘，所以由于iOS中没有键盘对象，

1298
01:10:13,109 --> 01:10:16,076
如果你想配置键盘，

1299
01:10:16,145 --> 01:10:18,679
设置什么，是否自动更正。

1300
01:10:18,748 --> 01:10:21,015
好的，它是如何做到令人讨厌的自动纠错？

1301
01:10:21,084 --> 01:10:23,384
我没有说烦人。它会自动更正和

1302
01:10:23,453 --> 01:10:25,953
你不希望它这样做，因为它没有意义

1303
01:10:26,022 --> 01:10:28,055
在你的文本字段中，你可以闭包它。但

1304
01:10:28,124 --> 01:10:31,025
你通过与文本字段进行交谈来完成所有工作，而不是通过谈话

1305
01:10:31,094 --> 01:10:34,962
到键盘。任何人都会推出键盘

1306
01:10:35,031 --> 01:10:38,399
实现这个称为UITextInputTraits的协议，并且

1307
01:10:38,468 --> 01:10:40,234
它有所有这些键盘活动。和

1308
01:10:40,302 --> 01:10:42,837
这是该家伙的责任，让键盘来做

1309
01:10:42,905 --> 01:10:43,538
正确的事情。

1310
01:10:45,208 --> 01:10:48,242
键盘在文本输入特征协议中也有它

1311
01:10:48,311 --> 01:10:51,144
也有输入配件视图，让你放一点

1312
01:10:51,213 --> 01:10:54,348
在键盘上查看，就在键盘的顶部。因此，如果

1313
01:10:54,417 --> 01:10:57,652
你有一些特殊的按钮或你想要的东西，你可以

1314
01:10:57,720 --> 01:11:01,321
把它们放在那里，所以这有点酷，好吗？现在，

1315
01:11:01,390 --> 01:11:04,057
有一件事，我甚至不会谈论这张幻灯片，但是

1316
01:11:04,126 --> 01:11:06,326
本季度晚些时候，我会的。但是我把它放在这里

1317
01:11:06,395 --> 01:11:09,029
参考，你可以回去看看它。这很重要

1318
01:11:09,098 --> 01:11:12,233
明白当键盘出现时，

1319
01:11:12,302 --> 01:11:15,736
它涵盖了你的视图，对吧？键盘没有

1320
01:11:15,805 --> 01:11:18,405
通常情况下将事物移开，就会出现。

1321
01:11:18,474 --> 01:11:21,742
现在，有一些类像UITableViewController

1322
01:11:21,811 --> 01:11:24,412
捆绑，对，你可以拖出来并获得

1323
01:11:24,480 --> 01:11:27,014
整个UITableViewController与表视图，

1324
01:11:27,083 --> 01:11:30,084
那样做。这会将事情卷动起来

1325
01:11:30,153 --> 01:11:32,553
的键盘。但通常情况下，键盘刚刚出现，

1326
01:11:32,622 --> 01:11:35,723
而你的东西就在它后面。我会告诉你另一个巨大的

1327
01:11:35,792 --> 01:11:38,259
最终项目的问题是只运行它们的人

1328
01:11:38,327 --> 01:11:40,861
在模拟器中，以及在设备上运行时

1329
01:11:40,930 --> 01:11:43,297
你按下文本字段，键盘会弹出

1330
01:11:43,365 --> 01:11:47,334
涵盖该文本字段。所以你甚至不能进入任何

1331
01:11:47,403 --> 01:11:50,004
该文本字段中的信息。这是非常普遍的

1332
01:11:50,073 --> 01:11:53,040
我们基本上不能测试某些部件

1333
01:11:53,109 --> 01:11:56,143
的应用程序，因为我们甚至无法输入文本字段。

1334
01:11:56,212 --> 01:11:59,146
所以你有责任把事情摆脱困境。

1335
01:11:59,215 --> 01:12:01,915
现在，当我谈到NSNotification时，

1336
01:12:01,984 --> 01:12:04,718
希望下周，我会告诉你如何找到

1337
01:12:04,787 --> 01:12:07,888
出现键盘出现，它出现在哪里。

1338
01:12:07,957 --> 01:12:09,356
然后你可以通过移动来做出反应

1339
01:12:09,425 --> 01:12:11,959
希望通过滚动你的用户界面

1340
01:12:12,027 --> 01:12:14,495
滚动视图，但您可能需要以其他方式执行此操作。

1341
01:12:16,899 --> 01:12:18,933
在文本字段中有很多其他的东西，你可以看看

1342
01:12:19,001 --> 01:12:21,235
的文件。你已经看过像汽车

1343
01:12:21,303 --> 01:12:24,037
UI标签的缩小。文本字段也有

1344
01:12:24,106 --> 01:12:26,473
你可以像设置最小字体一样控制它，

1345
01:12:26,542 --> 01:12:29,877
和那样的东西。当你点击文本字段时，

1346
01:12:29,945 --> 01:12:31,712
你是否希望它清除过去的文字？

1347
01:12:31,781 --> 01:12:33,314
那里重新开始？或者你想要它

1348
01:12:33,383 --> 01:12:35,182
离开原来在那里的文字？

1349
01:12:35,251 --> 01:12:37,985
这些东西，你可以做到这一切。它有一些

1350
01:12:38,053 --> 01:12:39,987
可以放在左侧的小配件视图

1351
01:12:40,056 --> 01:12:45,559
对。这是一个非常强大的小物件。所以

1352
01:12:45,628 --> 01:12:48,563
现在要做的就是这个演示，但我们必须得到

1353
01:12:48,631 --> 01:12:50,598
因为这个中期来临而离开这里。

1354
01:12:50,666 --> 01:12:53,701
所以我们会在星期一做你的作业五

1355
01:12:53,769 --> 01:12:56,637
它已经发布了。这基本上是做你自己的

1356
01:12:56,706 --> 01:12:58,672
集合视图和表视图，好吗？

1357
01:12:58,741 --> 01:13:00,641
随着一些拖放，当然，和

1358
01:13:00,710 --> 01:13:03,444
还有一点点的UI文本字段。如果你想等到

1359
01:13:03,512 --> 01:13:05,712
我在星期一做了演示文稿部分的演示，

1360
01:13:05,781 --> 01:13:08,649
这是作业中非常小的一部分，你可以这样做。

1361
01:13:08,718 --> 01:13:10,451
你可以完成作业的其余部分。我了解你们

1362
01:13:10,520 --> 01:13:12,687
喜欢尽早开始工作。但如果你

1363
01:13:12,755 --> 01:13:14,689
星期一之前做你的整个任务，除了

1364
01:13:14,757 --> 01:13:16,990
那很好。然后在星期二你可以继续工作

1365
01:13:17,059 --> 01:13:20,027
文本字段，它不是任务的重要组成部分。

1366
01:13:20,096 --> 01:13:22,529
再次，没有更多的星期五部分。然后下周，

1367
01:13:22,598 --> 01:13:24,766
我会谈论最终的项目需求，

1368
01:13:24,834 --> 01:13:26,900
我们也会谈论持久性。

1369
01:13:26,969 --> 01:13:28,970
我们有这个很好的表情艺术的东西，但是

1370
01:13:29,038 --> 01:13:31,472
只要我退出我的应用程序并重新启动它，

1371
01:13:31,540 --> 01:13:34,641
我失去了所有的工作。所以我们会在下周和之后解决这个问题

1372
01:13:34,710 --> 01:13:38,112
学习如何让事情持续下去，在启动之间

1373
01:13:38,180 --> 01:13:40,381
应用程序。这是一个相当小的话题，所以

1374
01:13:40,450 --> 01:13:42,816
我们下周还会做其他一些事情。

1375
01:13:42,885 --> 01:13:44,418
然后你的最终任务，

1376
01:13:44,486 --> 01:13:47,288
第六任务可能会在下周三结束

1377
01:13:47,357 --> 01:13:49,290
并在下周三到期。然后没有更多

1378
01:13:49,358 --> 01:13:51,291
因为你会拥有本季度的其余部分

1379
01:13:51,360 --> 01:13:53,560
你的最终项目。所以你的最终项目是三周

1380
01:13:53,629 --> 01:13:56,830
很长的事情，所以你在这段时间内不会有任何作业

1381
01:13:56,899 --> 01:14:00,901
你正在研究你的最终项目。好吧？而已。

1382
01:14:00,970 --> 01:14:03,737
我将在下周一见。对于

1383
01:14:03,806 --> 01:14:13,213
更多，请访问stanford.edu。

