1
00:00:00,401 --> 00:00:04,703
[音乐]

2
00:00:04,772 --> 00:00:09,475
斯坦福大学。 >>好吧，好吧，

3
00:00:09,543 --> 00:00:13,578
欢迎来到斯坦福CS193P，这是2017年秋季,

4
00:00:13,647 --> 00:00:17,249
我认为这是第10讲座。我们有两个

5
00:00:17,317 --> 00:00:21,453
今天的重要话题。第一个是多线程和

6
00:00:21,522 --> 00:00:25,457
第二个是自动布局大小类。所以让我们来谈谈

7
00:00:25,525 --> 00:00:29,161
多线程优先。多线程是关于，

8
00:00:29,230 --> 00:00:32,197
无论如何，这个讲座的目的是保持很长时间

9
00:00:32,266 --> 00:00:36,034
从UI运行的主队列中运行。和

10
00:00:36,103 --> 00:00:38,703
那是因为我们希望UI非常快速响应。

11
00:00:38,772 --> 00:00:41,639
当有人倒下时，我们想立即回应

12
00:00:41,708 --> 00:00:45,277
他们的联系，而不是让我们的应用程序冻结。

13
00:00:45,346 --> 00:00:48,613
即使只有一个，你的应用程序也会冻死

14
00:00:48,682 --> 00:00:51,416
其次是你的应用永远只是没有回应

15
00:00:51,484 --> 00:00:54,953
在所有。所以多线程是一个更大的话题。

16
00:00:55,021 --> 00:00:56,688
你可以用多线程来做很多其他的事情。但

17
00:00:56,756 --> 00:00:59,558
我们会专注于尝试长时间运行的事情

18
00:00:59,627 --> 00:01:03,828
可能阻塞其他线程的东西。现在

19
00:01:03,897 --> 00:01:09,167
多线程在iOS中的工作方式是使用队列。

20
00:01:09,236 --> 00:01:11,836
所以我用类似的方式使用队列

21
00:01:11,905 --> 00:01:13,504
你去看电影，你排队

22
00:01:13,573 --> 00:01:15,240
这是一个队列，对吧？

23
00:01:15,308 --> 00:01:19,278
iOS多线程中的队列是什么？

24
00:01:19,346 --> 00:01:23,147
代码，几乎总是闭包你放入这个队列。

25
00:01:23,216 --> 00:01:25,750
所以你有这些队列，有很多不同

26
00:01:25,819 --> 00:01:29,188
各种队列。然后系统随之而

27
00:01:29,256 --> 00:01:32,958
它有线程。线程是执行的线程。

28
00:01:33,027 --> 00:01:36,027
他们本质上是运行代码的机会。

29
00:01:36,096 --> 00:01:40,131
它可以并行运行它们。我其实猜到

30
00:01:40,200 --> 00:01:43,235
如果您有多处理器或多核处理器

31
00:01:43,304 --> 00:01:45,971
它实际上可以并行运行。但

32
00:01:46,039 --> 00:01:48,540
即使你有一个单核，单线程的执行

33
00:01:48,608 --> 00:01:51,109
处理器，操作系统知道如何分享

34
00:01:51,177 --> 00:01:54,346
那个时候所有人之间的微小增量都有所增加

35
00:01:54,414 --> 00:01:59,084
这些线程的执行。所以操作系统出现了

36
00:01:59,153 --> 00:02:01,719
将队列中的下一个人排队，

37
00:02:01,788 --> 00:02:05,123
下一个闭包，关闭并运行它。

38
00:02:05,192 --> 00:02:07,659
所以我们就是这样排队的。有两种

39
00:02:07,727 --> 00:02:12,196
队列。我们有串行队列，这是iOS来的，

40
00:02:12,265 --> 00:02:14,933
从队列中取出某些东西，然后尽快

41
00:02:15,001 --> 00:02:17,436
事情已经完成，然后又回到

42
00:02:17,504 --> 00:02:20,172
从队列中获得另一个，这就是所谓的串行

43
00:02:20,240 --> 00:02:22,707
队列。然后还有并发队列。

44
00:02:22,776 --> 00:02:25,177
iOS出现的时候，它从队列中抓取了一些东西

45
00:02:25,245 --> 00:02:27,578
它开始运行，也许它有另一个线程

46
00:02:27,647 --> 00:02:28,813
它可以使用，它和

47
00:02:28,882 --> 00:02:31,383
在另一件事完成之前抓住另一件事，

48
00:02:31,451 --> 00:02:33,952
也许是另一个。所以它可能有两个或三个或

49
00:02:34,021 --> 00:02:36,455
四个或十个东西都从同一队列中流

50
00:02:36,523 --> 00:02:39,391
与此同时。这就是所谓的并发队列。

51
00:02:39,459 --> 00:02:41,893
所以我们要谈谈这两类队列。

52
00:02:41,962 --> 00:02:43,895
因为我们会使用这两种队列

53
00:02:43,964 --> 00:02:46,998
完成我们想要的。而我们想要的是

54
00:02:47,067 --> 00:02:48,834
该UI将被解除封锁。

55
00:02:48,903 --> 00:02:53,671
UI在单个串行队列上运行，

56
00:02:53,740 --> 00:02:57,976
称为主队列。 UI不仅在此上运行，

57
00:02:58,045 --> 00:03:02,080
它是唯一可以放置代码块的队列

58
00:03:02,148 --> 00:03:06,418
做UI的东西。所以我们在这里保留了我们所有的用户界面。

59
00:03:06,486 --> 00:03:08,787
这样我们就不用担心多线程的用户界面，

60
00:03:08,856 --> 00:03:11,422
我们得到了两个不同的执行线程

61
00:03:11,491 --> 00:03:13,358
试图拉入相同的空间或任何东西。

62
00:03:13,427 --> 00:03:15,226
我们从来不需要担心iOS中的问题，因为

63
00:03:15,295 --> 00:03:19,765
所有绘图，所有UI活动都发生在这一个队列中。

64
00:03:19,833 --> 00:03:22,968
而且，由于它是一个串行队列，所有这一切都发生在单一队列中

65
00:03:23,036 --> 00:03:26,505
线。所以你永远不必担心多线程的用户界面

66
00:03:26,573 --> 00:03:30,509
活动正在进行。现在，他们让队列工作的方式是

67
00:03:30,577 --> 00:03:33,278
它大多坐在那里等待触发事件发生。

68
00:03:33,346 --> 00:03:35,513
当触摸事件发生时，它会对其进行处理，

69
00:03:35,582 --> 00:03:38,049
找出要运行的代码，运行代码，然后运行

70
00:03:38,118 --> 00:03:40,785
回到这个安静的状态，等待另一次触摸。

71
00:03:40,854 --> 00:03:43,354
那么，当它处于安静的状态时，它也会拉动

72
00:03:43,423 --> 00:03:46,358
主队列中的东西并运行它。所以你可以放

73
00:03:46,426 --> 00:03:49,961
东西放到主队列中，代码块，它会

74
00:03:50,029 --> 00:03:54,132
在UI线程，主队列，主线程中运行。所以

75
00:03:54,201 --> 00:03:57,502
我们的目标是让主要队列中的其他任何东西都无法使用

76
00:03:57,571 --> 00:03:59,971
而其他任何事情都会花很长时间或

77
00:04:00,040 --> 00:04:01,473
肯定会阻止等待

78
00:04:01,541 --> 00:04:02,740
网络或类似的东西，

79
00:04:02,809 --> 00:04:05,943
我们绝对希望在主队排队。那么我们在哪里

80
00:04:06,012 --> 00:04:09,414
把这些东西？那么，我们把这些放在全球队列中。

81
00:04:09,483 --> 00:04:11,983
现在，实际上你可以创建自己的队列来完成

82
00:04:12,052 --> 00:04:15,319
那，但我们会用这四个全球队列中的一个。

83
00:04:15,388 --> 00:04:18,122
这些是你可以抛出你的并发队列

84
00:04:18,191 --> 00:04:21,593
代码开启，系统将运行并运行它们。

85
00:04:21,661 --> 00:04:24,196
关于什么真的没有限制

86
00:04:24,264 --> 00:04:27,131
你可以放在那里。只是，它不能是UI代码。但

87
00:04:27,200 --> 00:04:29,333
你可以做所有你想要的东西。所以

88
00:04:29,402 --> 00:04:31,870
我们来谈谈那些队列。你如何获得主队列？

89
00:04:31,938 --> 00:04:33,538
你如何获得它？好，

90
00:04:33,607 --> 00:04:36,974
有一个称为DispatchQueue的结构体或类

91
00:04:37,043 --> 00:04:40,878
有一个叫做main的静态变量，它给你主队列。

92
00:04:40,947 --> 00:04:42,180
所以现在你有主队列，

93
00:04:42,248 --> 00:04:44,583
你准备好了，我会尽快和你谈谈

94
00:04:44,651 --> 00:04:46,718
你如何将一段代码放入队列中，对吗？

95
00:04:46,787 --> 00:04:50,154
把它放在线的尽头，等待着允许。

96
00:04:50,223 --> 00:04:53,725
全球队列更具表现力。

97
00:04:53,794 --> 00:04:56,027
其中不只有一个，有四个不同的

98
00:04:56,096 --> 00:04:59,230
我们将要讨论的种类。和四个

99
00:04:59,299 --> 00:05:03,068
他们根据他们的服务质量而不同。

100
00:05:03,136 --> 00:05:06,070
这就是你在这里引用的QOS。

101
00:05:06,139 --> 00:05:09,106
服务质量告诉你什么样的事情，

102
00:05:09,175 --> 00:05:12,277
你要放什么样的活动

103
00:05:12,345 --> 00:05:15,079
在那里做。那我们来看看这四个。首先

104
00:05:15,148 --> 00:05:18,950
一个是userInteractive。这是一个非常罕见的使用。

105
00:05:19,019 --> 00:05:22,987
这意味着用户处于拖动或拖动的过程中

106
00:05:23,056 --> 00:05:25,757
捏或什么，你想做点什么

107
00:05:25,826 --> 00:05:27,859
闭包必须发生的主队列

108
00:05:27,927 --> 00:05:30,929
很快它可以回到中间的主要队列

109
00:05:30,997 --> 00:05:33,698
的拖动。所以我们谈论的是高度互动的，

110
00:05:33,767 --> 00:05:36,233
你可能想要的小小作品

111
00:05:36,302 --> 00:05:37,201
甩掉主队列。

112
00:05:37,270 --> 00:05:40,972
这是非常不寻常的原因是因为它是如此

113
00:05:41,041 --> 00:05:42,607
小而且执行得太快，

114
00:05:42,675 --> 00:05:45,644
你可以在主队列上做。

115
00:05:45,712 --> 00:05:48,313
无论如何，你可能正在等待主队列。

116
00:05:48,381 --> 00:05:51,249
所以用户交互更容易使用。

117
00:05:51,318 --> 00:05:55,019
最常用的是下一个userInitiated。

118
00:05:55,088 --> 00:05:57,989
所以，现在这可能需要很长时间或是一段时间

119
00:05:58,057 --> 00:05:59,224
它可能需要几秒钟，或者

120
00:05:59,292 --> 00:06:01,325
它可能需要几毫秒，你不知道。

121
00:06:01,394 --> 00:06:04,129
但关于它的一点是用户所要求的

122
00:06:04,198 --> 00:06:06,598
它现在。他们碰到了一个按钮。

123
00:06:06,667 --> 00:06:08,699
他们在某个地方滑过，他们要求

124
00:06:08,768 --> 00:06:11,803
有事要发生。所以它是由用户发起的。

125
00:06:11,872 --> 00:06:15,406
所以他们希望你尽快完成。所以

126
00:06:15,475 --> 00:06:17,575
你正在后台运行它。

127
00:06:17,644 --> 00:06:19,076
这不是在主线程中发生的，

128
00:06:19,145 --> 00:06:20,811
但你试图尽快做到这一点。

129
00:06:20,880 --> 00:06:24,215
所以这是一个非常高的优先级队列

130
00:06:24,284 --> 00:06:26,751
iOS将会把这些东西从队列中拉出来

131
00:06:26,820 --> 00:06:29,387
在具有非常高优先级的线程中运行它们

132
00:06:29,456 --> 00:06:31,622
因为用户现在要求它。

133
00:06:31,691 --> 00:06:34,626
另外两个，背景和实用程序。所以背景的东西

134
00:06:34,694 --> 00:06:38,129
是用户没有立即要求的东西，但是

135
00:06:38,198 --> 00:06:41,232
他们有点像他们期望能很快完成的事情

136
00:06:41,301 --> 00:06:44,302
或者当你有时间的时候。

137
00:06:44,371 --> 00:06:46,237
然后公用事业的优先级更低，

138
00:06:46,305 --> 00:06:49,807
那些是你的应用程序想要做的事情

139
00:06:49,876 --> 00:06:52,143
建筑。例如，你有一个大的数据库和

140
00:06:52,212 --> 00:06:55,213
也许每个星期左右或每一定数量的数据

141
00:06:55,282 --> 00:06:58,316
在数据库中，你想要把它清理干净

142
00:06:58,384 --> 00:07:00,651
出数据库。所以这只是实用操作

143
00:07:00,720 --> 00:07:03,154
将以非常低的优先级运行。所以

144
00:07:03,223 --> 00:07:06,924
你根据质量挑选你想要的全球密钥

145
00:07:06,993 --> 00:07:10,094
您希望该队列可以接收的服务。

146
00:07:10,163 --> 00:07:11,863
所以你现在有一个队列。

147
00:07:11,932 --> 00:07:14,399
无论是主队列还是其中一个后台并发

148
00:07:14,468 --> 00:07:16,034
具有一定服务质量的队列。

149
00:07:16,103 --> 00:07:19,271
你如何将一段代码放到该队列中？

150
00:07:19,339 --> 00:07:22,974
把它放在一起，以便在某个时候运行。好，

151
00:07:23,043 --> 00:07:27,111
您可以使用这两个函数之一来执行异步或同步。

152
00:07:27,180 --> 00:07:28,813
他们每个人都有一个参数。

153
00:07:28,881 --> 00:07:32,017
这个参数是一个块，一个闭包。毫无争议，

154
00:07:32,085 --> 00:07:34,819
不返回任何参数。它不返回任何值。所以

155
00:07:34,888 --> 00:07:37,489
它就像你所能做到的一样。

156
00:07:37,557 --> 00:07:40,224
它所做的是将该块放在队列上

157
00:07:40,293 --> 00:07:43,462
你正在发送给你。现在，异步和

158
00:07:43,530 --> 00:07:45,496
同步是异步把它放在队列中

159
00:07:45,565 --> 00:07:48,432
立即返回，然后转到下一行

160
00:07:48,501 --> 00:07:51,802
你有的代码。所以现在它在排队和某人

161
00:07:51,871 --> 00:07:53,971
最终会把它从队列中拉出来，然后运行它

162
00:07:54,040 --> 00:07:57,041
你马上回来。同步，它把它放在队列中

163
00:07:57,110 --> 00:08:01,045
块。等待某人将其从队列中排除

164
00:08:01,114 --> 00:08:03,047
运行它并完成它。

165
00:08:03,116 --> 00:08:07,385
所以你永远不会在主队列上同步，对吧？

166
00:08:07,453 --> 00:08:09,554
因为我们不想阻挡主队列。但

167
00:08:09,623 --> 00:08:12,624
实际上，您可能会在非主队列上同步，

168
00:08:12,692 --> 00:08:15,327
你可能会同步等待主队列

169
00:08:15,395 --> 00:08:19,263
当你在另一个队列中时完成某件事。

170
00:08:19,332 --> 00:08:22,099
但大多数情况下，我们在这里使用异步，因为我们并不在乎。

171
00:08:22,168 --> 00:08:23,601
异步是异步的简称。

172
00:08:23,669 --> 00:08:25,102
我们并不关心它何时运行

173
00:08:25,171 --> 00:08:26,738
我们只是希望它能够运行。

174
00:08:26,807 --> 00:08:29,340
就是这样了。所以这就是所有情况

175
00:08:29,409 --> 00:08:31,642
多线程，相信与否。它只是导致

176
00:08:31,711 --> 00:08:34,612
一些有趣的节目，你是

177
00:08:34,681 --> 00:08:37,482
会在这里看到，以及你必须小心的事情。

178
00:08:37,551 --> 00:08:39,984
现在我不会谈论这个，但你可以创建你的

179
00:08:40,053 --> 00:08:42,953
通过调用DispatchQueue的初始化程序来调用自己的队列，

180
00:08:43,022 --> 00:08:46,257
它有这个标签参数。这个标签刚出现

181
00:08:46,326 --> 00:08:49,461
在调试器中，您可以看到您正在使用哪个队列。

182
00:08:49,530 --> 00:08:51,262
调试器对队列的全面支持，

183
00:08:51,331 --> 00:08:55,867
它会告诉你什么线程的一切。和

184
00:08:55,936 --> 00:08:59,937
你也可以用多线程做很多其他的事情，

185
00:09:00,006 --> 00:09:03,808
就像保护代码中的关键部分一样

186
00:09:03,877 --> 00:09:06,644
做事情之间的同步调度或锁定。

187
00:09:06,713 --> 00:09:08,379
你可以做所有的事情，我不会谈论任何事情

188
00:09:08,447 --> 00:09:10,114
那。我只是想谈谈我们将如何使用它

189
00:09:10,183 --> 00:09:12,583
主队列和那些后台队列保留

190
00:09:12,652 --> 00:09:16,754
主队排队的事情。还有一个其他的API

191
00:09:16,823 --> 00:09:19,958
除了DispatchQueue API，我会告诉你。

192
00:09:20,026 --> 00:09:23,194
OperationQueue和Operation是涉及的两个类

193
00:09:23,263 --> 00:09:26,030
那里。如果你在做这些，那么这些会被使用

194
00:09:26,099 --> 00:09:28,733
一些巨大的数学方程

195
00:09:28,801 --> 00:09:31,435
有很多并行处理，你可以做。

196
00:09:31,504 --> 00:09:34,205
但很多平行的片断都依赖于彼此。

197
00:09:34,274 --> 00:09:37,074
因为操作允许您设置依赖关系。

198
00:09:37,143 --> 00:09:39,510
这个小块代码依赖于这个先运行的代码。但

199
00:09:39,579 --> 00:09:42,413
我要开始这些，直到那些

200
00:09:42,482 --> 00:09:44,382
那取决于完成。你看到我在说什么吗？

201
00:09:44,451 --> 00:09:45,550
所有这些依赖管理。

202
00:09:45,618 --> 00:09:47,284
我也不会谈论这些。

203
00:09:47,353 --> 00:09:51,222
但是通过使用面向对象的OperationQueue可以实现这一点

204
00:09:51,290 --> 00:09:54,091
和操作API。在这堂课中，我们只是想要

205
00:09:54,160 --> 00:09:57,395
使用DispatchQueue，好吧。 DispatchQueue是什么的一部分

206
00:09:57,463 --> 00:10:01,165
我们称之为大中央调度，因为我们正在派遣

207
00:10:01,234 --> 00:10:04,836
这些代码块放到这些队列中。好，如此

208
00:10:04,904 --> 00:10:08,139
你还会在哪里遇到多线程？

209
00:10:08,207 --> 00:10:10,875
除了像你会看到的那样做旧的多线程

210
00:10:10,943 --> 00:10:13,478
在我今天要做的演示中，你也可能有

211
00:10:13,547 --> 00:10:17,615
以块为参数的iOS API。当它

212
00:10:17,684 --> 00:10:20,451
运行这些块，就像它完成某件事情或完成时一样

213
00:10:20,519 --> 00:10:23,821
它遇到一个错误，它会从主体运行这些块

214
00:10:23,890 --> 00:10:26,825
队列。当你在iOS中调用该API时，你必须

215
00:10:26,893 --> 00:10:31,162
真的要小心，在你给iOS的块中

216
00:10:31,231 --> 00:10:33,765
它在完成时运行，没有任何UI。

217
00:10:33,833 --> 00:10:36,468
或者如果您有UI，请将其分派回主队列。

218
00:10:38,004 --> 00:10:40,838
因为你只能在主队列上做UI的东西。所以

219
00:10:40,907 --> 00:10:43,374
让我们看看调用iOS API的样子，

220
00:10:43,443 --> 00:10:45,343
像这需要一个块。

221
00:10:45,411 --> 00:10:50,648
所以这里是一个名为URLSession的iOS API。这用于

222
00:10:50,717 --> 00:10:54,051
通过网络从URL获取内容。

223
00:10:54,120 --> 00:10:57,222
星期一我们已经在我们的演示中看到我们是如何做到的

224
00:10:57,290 --> 00:11:00,658
数据对象。但那是一种愚蠢的东西，你

225
00:11:00,726 --> 00:11:04,795
无法获得任何HTTP响应。错误，

226
00:11:04,864 --> 00:11:08,032
你必须处理他们有点有趣。这是更多

227
00:11:08,101 --> 00:11:10,735
复杂的方式来请求网络上的某些东西，

228
00:11:10,803 --> 00:11:15,039
URLSession。作为一个非常简单的API，您只需创建

229
00:11:15,108 --> 00:11:18,242
一个具有特定配置的URLSession。伟大的事情

230
00:11:18,311 --> 00:11:21,079
关于URLSession是你可以做的事情就像我想要我的超时

231
00:11:21,147 --> 00:11:24,048
例如为五秒钟。你不能那样做

232
00:11:24,117 --> 00:11:26,016
与数据的东西，它有一些内置的时间。

233
00:11:26,085 --> 00:11:28,819
在这里你可以指定你想等多久

234
00:11:28,888 --> 00:11:30,755
你超时在网络上或其他任何东西。所以

235
00:11:30,824 --> 00:11:32,757
你用一些配置创建你的会话，

236
00:11:32,825 --> 00:11:34,592
通常是默认配置。

237
00:11:34,661 --> 00:11:37,294
现在你只需要做一些事情就可以取得某些东西

238
00:11:37,363 --> 00:11:38,763
是创建一个URL和

239
00:11:38,832 --> 00:11:42,266
用名为dataTask的会话调用该函数

240
00:11:42,335 --> 00:11:46,104
URL。带有URL的dataTask创建所谓的数据

241
00:11:46,172 --> 00:11:48,406
任务，任务去获取一些数据。

242
00:11:48,475 --> 00:11:51,342
它开始暂停，然后你会说，

243
00:11:51,411 --> 00:11:54,245
下一行你几乎总是说简历，和

244
00:11:54,313 --> 00:11:57,882
开始它。现在注意带有URL的dataTask

245
00:11:57,950 --> 00:12:00,818
函数需要另一个参数。我正在使用尾随

246
00:12:00,887 --> 00:12:02,987
封闭符号放在括号外，但是

247
00:12:03,056 --> 00:12:05,656
这只是dataTask的一个参数。

248
00:12:05,725 --> 00:12:09,727
这个参数是这个URL的结果

249
00:12:09,796 --> 00:12:13,564
调用，URLSession会在获取数据时调用。

250
00:12:13,632 --> 00:12:16,066
你可以看到闭包实际上需要这些数据

251
00:12:16,135 --> 00:12:19,537
它成为一个参数，这是有道理的。也回应和

252
00:12:19,606 --> 00:12:23,241
错误，即HTTP响应和可能发生的任何错误

253
00:12:23,309 --> 00:12:26,077
在那里，好吧。所以不要太担心这一点。

254
00:12:26,145 --> 00:12:28,246
但底线是你给它关闭。

255
00:12:28,315 --> 00:12:31,749
现在关于这个封闭的有趣的事情就是它

256
00:12:31,817 --> 00:12:36,653
在主队列中执行。所以如果你想做UI的东西

257
00:12:36,722 --> 00:12:39,057
在那里，你可能想要做，因为你想做

258
00:12:39,125 --> 00:12:41,625
把你回来的数据放在用户界面中。

259
00:12:41,694 --> 00:12:44,295
你可以在那里做吗？答案是，不，你不能，

260
00:12:44,364 --> 00:12:49,967
因为你不能在主队列中做UI内容。但

261
00:12:50,036 --> 00:12:52,770
如果我需要做UI的东西呢？我该怎么做？

262
00:12:52,839 --> 00:12:56,207
那么，你只需要派遣回主

263
00:12:56,276 --> 00:12:59,410
在那里排队。 DispatchQueue.main，

264
00:12:59,479 --> 00:13:03,714
获得主队列，异步，在该队列上放置一个闭包，并

265
00:13:03,783 --> 00:13:08,085
你在那里做你的用户界面的东西。现在这一切看起来差不多

266
00:13:08,154 --> 00:13:10,587
真的太好了，真的很简单，对吗？但是有

267
00:13:10,656 --> 00:13:13,624
在时间方面有一点思考。

268
00:13:13,693 --> 00:13:15,559
所以我会引导你通读这段代码的时间。

269
00:13:15,628 --> 00:13:18,095
这只是一些标签上的完全相同的代码

270
00:13:18,164 --> 00:13:19,096
这里的线。和

271
00:13:19,165 --> 00:13:21,466
我们将一步一步地经历这种情况。

272
00:13:21,534 --> 00:13:25,336
首先，a线执行，当然，我们正在开始

273
00:13:25,405 --> 00:13:29,607
这个URLSession请求。然后在我们创建这个的行b

274
00:13:29,676 --> 00:13:32,876
dataTask，这行b立即返回。

275
00:13:32,945 --> 00:13:35,313
它立即创建dataTask和

276
00:13:35,382 --> 00:13:37,148
抓住关闭并坚持下去

277
00:13:37,216 --> 00:13:40,317
一秒钟，并开始任务暂停。那是第二个

278
00:13:40,386 --> 00:13:45,155
执行的行。然后行g。由于事实线b

279
00:13:45,224 --> 00:13:48,393
当然立即返回线g执行下一个，然后你

280
00:13:48,461 --> 00:13:52,263
说，简历。这开始任务获取URL

281
00:13:52,331 --> 00:13:56,600
网络在后台，不在主队列中。所以

282
00:13:56,669 --> 00:14:01,738
执行的下一行是行h。

283
00:14:01,807 --> 00:14:05,242
因为简历立即在后台启动，但是

284
00:14:05,311 --> 00:14:07,378
行h继续在前景和

285
00:14:07,446 --> 00:14:11,882
运行。你认为执行的下一行是什么？

286
00:14:11,951 --> 00:14:15,653
那么，大约五秒钟或五小时或五分钟或

287
00:14:15,722 --> 00:14:18,455
不管什么时候，c行都会执行。

288
00:14:18,524 --> 00:14:23,026
当数据从URL返回时会发生这种情况。所以

289
00:14:23,095 --> 00:14:24,395
现在我正在处理数据，

290
00:14:24,464 --> 00:14:27,798
处理它，看着它，我们正在做我想做的任何事情。

291
00:14:27,867 --> 00:14:31,001
然后行d执行，因为我需要做一些用户界面工作。

292
00:14:31,070 --> 00:14:35,139
所以我派遣一个说这里做UI的东西

293
00:14:35,208 --> 00:14:37,842
主队列，并且它在主队列上运行。

294
00:14:37,910 --> 00:14:39,009
但主要队列可能很忙或

295
00:14:39,078 --> 00:14:41,713
在此之前，主要队列中可能还有其他的东西

296
00:14:41,781 --> 00:14:44,415
闭包。所以这不会马上执行。

297
00:14:44,483 --> 00:14:47,885
相反，f行会立即执行。所以注意这一点

298
00:14:47,954 --> 00:14:53,357
行e仍然没有运行，但行f。接下来发生什么？

299
00:14:53,426 --> 00:14:57,928
最后，只要主队列安静，线路e就会运行

300
00:14:57,997 --> 00:15:00,698
准备好做到这一点。还有其他所有闭包

301
00:15:00,767 --> 00:15:03,801
它在线运行。然后e跑步，好吧。

302
00:15:03,870 --> 00:15:07,071
那么你是否看到了什么时候发生了什么？

303
00:15:07,139 --> 00:15:09,773
所以代码使它看起来像东西会跑到最前面

304
00:15:09,842 --> 00:15:12,309
底部，但它不。它有点失灵

305
00:15:12,378 --> 00:15:16,113
因为它发生在后台线程中。

306
00:15:16,182 --> 00:15:19,983
好吧，所以总结说它是abghcdfe，

307
00:15:20,052 --> 00:15:24,288
但这只是最有可能的顺序

308
00:15:24,357 --> 00:15:25,823
因为这是线程。

309
00:15:25,892 --> 00:15:27,558
事情正在同时发生。

310
00:15:27,627 --> 00:15:30,494
这是可能的，不管你信不信，e，

311
00:15:30,563 --> 00:15:34,165
UI的东西，实际上可以在f行之前运行。

312
00:15:34,234 --> 00:15:36,234
它可能被分派到主队列中，

313
00:15:36,303 --> 00:15:37,635
主队列立即抓住它。

314
00:15:37,703 --> 00:15:39,103
主队列是一个非常高的优先级队列。

315
00:15:39,172 --> 00:15:40,805
也许它立即抓住它并且

316
00:15:40,874 --> 00:15:43,440
在f有机会运行之前开始运行它。

317
00:15:43,509 --> 00:15:45,009
如果你有一个处理器，

318
00:15:45,078 --> 00:15:49,346
那肯定是可能的。所以这是最多的

319
00:15:49,415 --> 00:15:51,882
要了解多线程是一件重要的事情

320
00:15:51,951 --> 00:15:53,350
一种异步性，和

321
00:15:53,419 --> 00:15:55,520
这将需要一些习惯，相信我。

322
00:15:55,588 --> 00:15:58,055
好的，所以我要做的多线程演示就是

323
00:15:58,123 --> 00:16:00,725
我们会拿卡西尼，我们会增强它的用户

324
00:16:00,793 --> 00:16:05,263
接口有点。然后我们要去，

325
00:16:05,331 --> 00:16:08,966
卡西尼在哪里？我在这里有卡西尼吗？是的。

326
00:16:09,034 --> 00:16:11,602
我们只是隐藏它。哎呀，不要惹上那个。

327
00:16:11,670 --> 00:16:16,441
我们就这样去吧。好的，所以这里是卡西尼。所以

328
00:16:16,509 --> 00:16:19,109
现在，卡西尼只是显示这张图片，

329
00:16:19,178 --> 00:16:23,380
这个我们在这里做的演示网址。所以我要去

330
00:16:23,449 --> 00:16:26,550
评论，而不是，我要建立

331
00:16:26,619 --> 00:16:29,120
一些用户界面使用我的ImageViewController

332
00:16:29,189 --> 00:16:30,988
通用图像查看MVC。

333
00:16:31,057 --> 00:16:33,890
我将添加另一个类似于我们所做的MVC

334
00:16:33,959 --> 00:16:38,195
主题，当我们选择主题时。这个MVC会选择

335
00:16:38,264 --> 00:16:41,265
卡西尼的形象我想看看。我有一些

336
00:16:41,334 --> 00:16:44,668
卡西尼图像，我会告诉你在第二个网址，

337
00:16:44,737 --> 00:16:49,172
这与卡西尼对土星的探测有关。和我

338
00:16:49,241 --> 00:16:53,510
想要在屏幕上看看它们。所以让我们开始做我们的用户界面

339
00:16:53,579 --> 00:16:57,281
第一。所以让我们来看看所有的用户界面。所以这里是我们的UI，

340
00:16:57,350 --> 00:17:01,918
我们现有的，有点通用的图像观看MVC。

341
00:17:01,987 --> 00:17:05,122
我要去这里创建一个新的视图控制器。

342
00:17:05,191 --> 00:17:08,726
把它拖出来。课程，视图控制器都需要

343
00:17:08,795 --> 00:17:13,464
有他们自己的子类。所以我会创建一个新的子类。

344
00:17:13,533 --> 00:17:18,302
我打算把这个叫做CassiniViewController。

345
00:17:18,370 --> 00:17:20,804
我要确保把它放在正确的地方，

346
00:17:20,873 --> 00:17:24,175
不在项目层面。好吧，

347
00:17:24,244 --> 00:17:26,877
所以在这里。我将选择它和

348
00:17:26,946 --> 00:17:30,214
确保我去这里和我的身份检查员

349
00:17:30,283 --> 00:17:33,951
将其身份更改为ImageViewController。

350
00:17:34,020 --> 00:17:36,320
我打算让它成为我输入的地方。

351
00:17:37,524 --> 00:17:38,422
让我们继续前进

352
00:17:38,490 --> 00:17:41,358
构建我们的整个UI。事实上，让我们在iPad上做这个

353
00:17:41,427 --> 00:17:43,727
和iPhone上。所以我要带走这个家伙

354
00:17:43,796 --> 00:17:46,097
我将把它嵌入到导航控制器中。

355
00:17:46,165 --> 00:17:47,932
我要在这里把这个视图控制器。

356
00:17:48,001 --> 00:17:51,102
嵌入它，嵌入导航控制器。

357
00:17:51,170 --> 00:17:54,605
然后，我要把这件事整理出来，就在这里，

358
00:17:54,674 --> 00:17:57,341
并使其成为分割视图的主人。和

359
00:17:57,410 --> 00:18:00,644
这将是我的细节。所以让我们放大这里和

360
00:18:00,713 --> 00:18:06,183
抓住分割视图控制器。像往常一样，我们的

361
00:18:06,251 --> 00:18:09,286
分割视图控制器带出文档大纲和

362
00:18:09,355 --> 00:18:13,424
这里有所有这些额外的东西。哎呀，我们不需要任何

363
00:18:13,492 --> 00:18:16,460
这个额外的东西，所以让我们删除它。那我们就会

364
00:18:16,528 --> 00:18:21,832
放大回来。在这里抓住我们的分割视图控制器。

365
00:18:21,900 --> 00:18:25,536
让我们使分割视图控制器成为我们输入的地方。

366
00:18:25,605 --> 00:18:30,574
好吧，让我们成为我们的主人吧。我们抓住这个

367
00:18:30,643 --> 00:18:36,047
并把它放在这里，让它成为我们的细节。所以

368
00:18:36,115 --> 00:18:38,282
我们已经设置好了。希望你已经习惯了这样做。

369
00:18:38,351 --> 00:18:39,650
你在作业中这样做，

370
00:18:39,719 --> 00:18:43,320
非常简单。所以现在我们得到了一个非常漂亮的UI

371
00:18:43,389 --> 00:18:45,623
在这两种设备上工作很多。

372
00:18:45,692 --> 00:18:48,459
在iPad和iPad上分割视图

373
00:18:48,528 --> 00:18:52,363
那么它也将在iPhone上运行。

374
00:18:52,431 --> 00:18:56,400
所以我们需要在这里准备这个图像控制器。

375
00:18:56,469 --> 00:18:58,969
我们需要有或抱歉，准备这一个。那我们需要

376
00:18:59,038 --> 00:19:01,905
在这个选择卡西尼图像的一些用户界面。

377
00:19:01,974 --> 00:19:05,075
所以我会做我以前做过的那种愚蠢的事情，

378
00:19:05,144 --> 00:19:08,946
但不像上次那样愚蠢。这是

379
00:19:09,015 --> 00:19:12,082
在这里放三个按钮。所以我有三张卡西尼图像，

380
00:19:12,151 --> 00:19:13,884
所以我会有三个按钮。

381
00:19:13,953 --> 00:19:17,888
让我们继续，让他们在这里大字体。

382
00:19:17,957 --> 00:19:21,291
40分似乎是我最喜欢的尺寸字体。和

383
00:19:21,360 --> 00:19:25,329
这三张图片我有卡西尼本身的形象，而且

384
00:19:25,397 --> 00:19:29,566
然后我有一个地球的形象，和

385
00:19:29,635 --> 00:19:34,505
然后我有土星的形象。好的。

386
00:19:34,574 --> 00:19:38,476
哎呀，不是Satrun，土星。好的卡西尼是一个探索

387
00:19:38,544 --> 00:19:41,879
从地球到土星。我会做一些评论。

388
00:19:41,948 --> 00:19:45,616
我们要在堆栈视图中嵌入它。我会做

389
00:19:45,684 --> 00:19:49,420
它会填充，我会让它们成为相同大小的按钮。

390
00:19:49,489 --> 00:19:52,622
我要在这里设置标准间距。

391
00:19:52,691 --> 00:19:56,160
让我们继续，把它放在中间。我会继续前进

392
00:19:56,228 --> 00:19:59,696
控制+拖动，使其始终以垂直居中

393
00:19:59,765 --> 00:20:03,500
并水平。你可以看到它有点偏离中心

394
00:20:03,569 --> 00:20:05,603
那里。所以我要去看我的文档大纲，

395
00:20:05,671 --> 00:20:09,139
这是我们解决所有自动布局问题的地方，

396
00:20:09,208 --> 00:20:11,542
这个按钮在这里。我会点击它。

397
00:20:11,611 --> 00:20:13,877
这是我所有的问题。这只是这个问题。

398
00:20:13,946 --> 00:20:16,513
这件事没有定位在应该的地方。

399
00:20:16,582 --> 00:20:18,749
我要点击这个小三角形并修复它，

400
00:20:18,817 --> 00:20:21,218
通过更新我的框架或更新我的约束。

401
00:20:21,287 --> 00:20:23,387
在这种情况下，我的约束是正确的，但是

402
00:20:23,455 --> 00:20:25,756
该框架是错误的，所以我会修复错位。

403
00:20:25,825 --> 00:20:28,425
它移动了它，没有更多的自动布局问题。

404
00:20:28,494 --> 00:20:32,562
我们有一个伟大的用户界面。这是对自动布局的快速回顾。

405
00:20:32,631 --> 00:20:35,066
我会尝试尽可能多地检查自动布局，

406
00:20:35,134 --> 00:20:37,868
因为自动布局有很多。好，如此

407
00:20:37,937 --> 00:20:41,772
现在我们要在这里设置一些关于我们的主人的segues

408
00:20:41,841 --> 00:20:46,143
我们的细节和我会做一个有点不同的做法。

409
00:20:46,212 --> 00:20:48,579
在此之前，请记住，我曾经有过一种延续，

410
00:20:48,647 --> 00:20:51,749
一个标识符，然后我回头看按钮标题。

411
00:20:51,817 --> 00:20:53,651
我说，这是一个不好的代码，

412
00:20:53,719 --> 00:20:56,153
因为如果这些按钮标题是法文的呢？

413
00:20:56,221 --> 00:20:57,354
然后就是这样

414
00:20:57,423 --> 00:20:59,456
我会以一种不同的方式做到这一点。真正的方式

415
00:20:59,525 --> 00:21:02,092
我会这样做可能是我会使用表格视图。

416
00:21:02,160 --> 00:21:06,129
这是可扩展的表格列表。然后我

417
00:21:06,198 --> 00:21:09,433
既可以添加更多的东西，也可以很容易地找到

418
00:21:09,502 --> 00:21:11,969
哪一个是由它的索引选入表中的角色的，

419
00:21:12,038 --> 00:21:14,071
但我还没有教过你表格视图。所以

420
00:21:14,139 --> 00:21:17,408
这就是我们使用这些按钮解决方案的原因。好吧，

421
00:21:17,476 --> 00:21:20,377
所以我要从卡西尼创建一个继续到这里。

422
00:21:20,446 --> 00:21:21,745
它将显示细节

423
00:21:21,814 --> 00:21:24,548
因为我们处于分裂状态。与地球同样的事情。

424
00:21:24,617 --> 00:21:27,918
查看详细。和土星一起，展示细节。

425
00:21:27,986 --> 00:21:30,954
但不是让它们都具有相同的标识符，

426
00:21:31,023 --> 00:21:33,357
我会给他们每个不同的标识符，

427
00:21:33,425 --> 00:21:36,894
哪个图像打开。那样如果我改变了

428
00:21:36,963 --> 00:21:39,797
这里的语言，他们仍然会打开正确的形象。

429
00:21:39,866 --> 00:21:42,265
所以在这里，这个是卡西尼，对吗？所以

430
00:21:42,334 --> 00:21:45,936
我的标识符就是卡西尼。然后这个

431
00:21:46,005 --> 00:21:49,840
一个是地球之一，所以我们将其标识符称为地球。

432
00:21:49,909 --> 00:21:53,743
而这个是土星，所以我们将会是土星。

433
00:21:53,812 --> 00:21:55,746
所以我只是设置这些segues的标识符，所以

434
00:21:55,815 --> 00:21:59,650
我知道要展示哪一个。好一点，

435
00:21:59,718 --> 00:22:05,355
更准确的方法来做到这一点。但是，现在，当然，

436
00:22:05,424 --> 00:22:08,626
我们需要准备我们的通用图像视图控制器，

437
00:22:08,694 --> 00:22:12,062
设置它的模型，它的公共模型就是那个图片的URL。

438
00:22:12,130 --> 00:22:14,565
所以我们来看看我们的CassiniViewController代码

439
00:22:14,633 --> 00:22:17,801
就在这儿。我们会清理掉所有的垃圾。这些都是看法

440
00:22:17,870 --> 00:22:19,736
控制器生命周期方法，希望您能认识到。

441
00:22:19,805 --> 00:22:23,507
我们将摆脱那些。让我们取消注释我们的导航

442
00:22:24,643 --> 00:22:27,478
这里的东西，做我们的准备

443
00:22:27,547 --> 00:22:29,846
Segue公司。那么我该prepare for the segue？

444
00:22:29,915 --> 00:22:32,750
那么，我需要查看标识符以查看哪个图像

445
00:22:32,818 --> 00:22:36,486
我要表演。所以，让我们说，如果我们可以让标识符=

446
00:22:36,555 --> 00:22:40,558
segue的标识符，换句话说，它不是零。

447
00:22:40,626 --> 00:22:43,127
然后，我只是想看看我是否可以得到一个URL。

448
00:22:43,196 --> 00:22:45,896
这是我的演示网址。我以前给你看过这个，

449
00:22:45,964 --> 00:22:49,432
但让我们再看一遍。看到我在这里有这本字典，

450
00:22:49,501 --> 00:22:52,770
这个美国国家航空航天局的字典有字符串作为键和

451
00:22:52,838 --> 00:22:56,107
网址作为值。对于每个人来说，卡西尼，

452
00:22:56,175 --> 00:22:58,641
我有一个小网址。对于地球，我有一个URL。

453
00:22:58,710 --> 00:22:59,710
对于土星，我有一个URL。

454
00:22:59,778 --> 00:23:03,080
所以我只是想在这本词典中查看我的意思

455
00:23:03,148 --> 00:23:06,716
可以找到标识符的名称。如果可以的话，

456
00:23:06,785 --> 00:23:11,054
那么我知道我有一张图片要展示。所以让我们来做。

457
00:23:11,123 --> 00:23:15,092
我只想说，哎呀，不是标识符，

458
00:23:15,161 --> 00:23:19,596
标识符，更加复杂，更加复杂。费里！好的。

459
00:23:19,665 --> 00:23:24,701
所以在这里我要说，如果我可以让URL等于我的演示

460
00:23:24,770 --> 00:23:30,607
URLs.NASA分为标识符。可以，然后呢

461
00:23:30,676 --> 00:23:33,711
如果这回来了，我能够得到一个图像等等

462
00:23:33,779 --> 00:23:36,847
现在我可以对显示视图控制器的图像进行缩放

463
00:23:36,916 --> 00:23:39,783
这是我在上一次构建的Image View Controller

464
00:23:39,852 --> 00:23:44,154
演讲。所以我会说如果可以让imageVC =

465
00:23:44,223 --> 00:23:49,159
segue.destination为？一个ImageViewController然后我可以

466
00:23:49,228 --> 00:23:52,763
设置ImageViewController的公共API。

467
00:23:52,832 --> 00:23:54,464
让我们提醒自己这是什么。

468
00:23:54,533 --> 00:23:57,167
这是我们上一次使用的ImageVewController。

469
00:23:57,235 --> 00:24:01,004
它的公共API是这样的。 ImageURL设置您的网址

470
00:24:01,073 --> 00:24:05,842
想要，所以我们要设定。公共API imageURL等于

471
00:24:05,911 --> 00:24:09,947
网址。我也要设置这个东西的标题。

472
00:24:10,015 --> 00:24:12,483
在这里我将使用Button标题。

473
00:24:12,552 --> 00:24:16,086
发件人作为UI按钮。如果它实际上是一个按钮，

474
00:24:16,155 --> 00:24:20,190
获得当前标题。现在这是不好的？事实并非如此

475
00:24:20,259 --> 00:24:23,527
不好，因为我在这里设定该目的地的标题

476
00:24:23,595 --> 00:24:25,862
图像视图控制器要与标题相同

477
00:24:25,931 --> 00:24:28,531
按钮。那么大概这个按钮是本地化的

478
00:24:28,600 --> 00:24:32,102
当地语言，所以我现在将标题放在标题中。

479
00:24:32,171 --> 00:24:36,674
也不是那么坏。这个不错，因为我们在说话

480
00:24:36,742 --> 00:24:39,142
关于在两种情况下都已经本地化的UI元素

481
00:24:39,211 --> 00:24:43,547
在那里。所以这就是我们真正需要做的准备，

482
00:24:43,615 --> 00:24:45,449
让我们继续并运行，看看它是否有效。

483
00:24:45,517 --> 00:24:49,686
我们将在iPhone上运行它，并希望在我们的时间

484
00:24:49,755 --> 00:24:53,023
点击其中一个按钮即可出门

485
00:24:53,092 --> 00:24:57,061
希望网络今天能够正常工作，并且可以取回

486
00:24:57,129 --> 00:25:00,430
那些图像。现在这些图像非常大，所以

487
00:25:00,499 --> 00:25:06,569
它可能需要一段时间才能完成。对，所以我们走了。它来了

488
00:25:06,638 --> 00:25:09,306
展现细节，对，我们没有把这个小分裂

489
00:25:09,374 --> 00:25:11,274
在那里查看诀窍，使其崩溃。

490
00:25:11,343 --> 00:25:14,178
所以让我们回到这里，在这里我们去，这里是我们的用户界面，卡西尼，

491
00:25:14,246 --> 00:25:19,416
地球和土星。让我们试试卡西尼。它没有工作。所以

492
00:25:19,484 --> 00:25:21,017
为什么这不起作用？

493
00:25:21,086 --> 00:25:28,058
走吧>> [不可思议]

494
00:25:28,127 --> 00:25:28,826
>>对不起，我错过了，

495
00:25:28,894 --> 00:25:31,495
在故事板上做了些什么让我们回去看看。

496
00:25:31,564 --> 00:25:33,463
我喜欢它，当学生在上面。

497
00:25:33,532 --> 00:25:37,500
那么我在这里做了什么？ >> [不可思议]

498
00:25:37,569 --> 00:25:39,603
>>这一个在这里？是啊，

499
00:25:39,671 --> 00:25:43,941
这很有趣，是的。所以当我设定身份的时候

500
00:25:44,010 --> 00:25:47,044
这就在这里，我不小心将它设置为图像

501
00:25:47,112 --> 00:25:50,046
视图控制器，它应该是一个卡西尼视图控制器。

502
00:25:50,115 --> 00:25:51,715
我的卡西尼视图控制器在哪里？

503
00:25:51,784 --> 00:25:52,849
那里好抓。可以，

504
00:25:52,918 --> 00:25:55,385
大概可以看五分钟。

505
00:25:55,454 --> 00:25:58,455
好吧，好吧。所以我不小心在我做完之后，

506
00:25:58,524 --> 00:26:00,757
我选错了，所以我们走了。和

507
00:26:00,826 --> 00:26:02,225
实际上这是一件很平常的事情，

508
00:26:02,294 --> 00:26:05,095
要么忘记设置这个人的身份，要么将其设置为

509
00:26:05,164 --> 00:26:08,198
有问题。那么为什么这使这不起作用？

510
00:26:08,267 --> 00:26:11,668
那么，因为这里准备没有得到

511
00:26:11,736 --> 00:26:14,571
因为这不是一个CassiniViewController，但是

512
00:26:14,640 --> 00:26:23,280
现在是，所以让我们再试一次。好吧，我们走吧，

513
00:26:23,349 --> 00:26:27,284
回去吧，试试吧。卡西尼号。希望看起来不是这样

514
00:26:27,352 --> 00:26:32,822
正在工作。没有！它坠毁。好吧，现在它崩溃了。

515
00:26:32,891 --> 00:26:35,458
我们讨厌撞车事故，但希望我们对此感到满意

516
00:26:35,527 --> 00:26:38,661
看看为什么碰撞会发生，特别是在这里看我们的

517
00:26:38,730 --> 00:26:41,064
回溯。所以我们来看看这里发生了什么。

518
00:26:41,132 --> 00:26:44,267
为什么这个崩溃？好吧，我们在图像视图中崩溃了

519
00:26:44,336 --> 00:26:46,470
控制器就是我们的图像视图控制器。

520
00:26:46,538 --> 00:26:49,506
我们在哪里设置图像。这是我们设置图像的地方

521
00:26:49,574 --> 00:26:52,876
一些东西，我们调整大小以适应，然后我们调整内容

522
00:26:52,945 --> 00:26:57,247
我们的scrollView区域，对吧？但是，不，没有东西，

523
00:26:57,316 --> 00:27:00,617
这里。那么我们知道imageView不能为零，因为

524
00:27:00,686 --> 00:27:03,420
我们将其设置在imageView中，

525
00:27:03,489 --> 00:27:05,088
所以一定是这个scrollView是零。

526
00:27:05,157 --> 00:27:08,892
让我们来看看。自我，这里是我的自我。是啊，

527
00:27:08,961 --> 00:27:12,095
果然自我scrollView是零。好，

528
00:27:12,163 --> 00:27:15,732
让我们回过头来看看发生了什么。

529
00:27:15,801 --> 00:27:18,202
这是因为有人设置了我们的公共API，

530
00:27:18,270 --> 00:27:21,104
这就说得通了。我们将图像设置为无

531
00:27:21,173 --> 00:27:24,975
清除任何旧图像。然后那个调用从哪里来？

532
00:27:25,043 --> 00:27:29,312
准备继续，是的。好的，任何时候你有一次崩溃，

533
00:27:29,381 --> 00:27:31,481
什么都没有，而你正在为你做准备

534
00:27:31,550 --> 00:27:35,351
segue 你要去，哎呀。我有一个outlet和

535
00:27:35,420 --> 00:27:37,421
它没有设置，因为这是正确的发生？

536
00:27:37,489 --> 00:27:40,056
准备工作是在你的outlet设置好之前进行的

537
00:27:40,125 --> 00:27:42,893
当我们在这里看时，这是一个出路。滚动视图是

538
00:27:42,961 --> 00:27:45,962
一个出口，在这里，它还没有设置，因为

539
00:27:46,031 --> 00:27:48,298
我们正在准备。那么对此有什么好的解决方法？

540
00:27:48,366 --> 00:27:51,902
我们只是可选的连锁店。这使得它如此

541
00:27:51,970 --> 00:27:54,504
如果滚动视图为零，则此行将被忽略

542
00:27:54,573 --> 00:27:57,040
没关系，因为这里发生的一切就是我们

543
00:27:57,109 --> 00:27:59,342
无论如何，试图将图像设置为新的。但

544
00:27:59,411 --> 00:28:02,345
因为我们只是在准备，所以它将从零开始

545
00:28:02,414 --> 00:28:04,614
这不会伤害任何事情。所以

546
00:28:04,683 --> 00:28:09,253
这是我们想要做的。简单解决它。所以

547
00:28:09,321 --> 00:28:11,855
我明显把它留在那里，所以我们可以做到

548
00:28:11,924 --> 00:28:15,692
这又是因为我知道你们遇到了这次事故

549
00:28:15,760 --> 00:28:20,730
你想确保你对诊断感到满意

550
00:28:20,799 --> 00:28:23,200
它。所以让我们回去吧，让我们现在再试一次。卡西尼

551
00:28:24,737 --> 00:28:28,504
它似乎并不像它的工作。等等，它确实有效。所以

552
00:28:28,573 --> 00:28:32,109
那里发生了什么。让我们来看看，这是我的卡西尼形象吗？

553
00:28:32,178 --> 00:28:33,843
是的，看看那个。有卡西尼探头，

554
00:28:33,912 --> 00:28:35,579
在那里。所以我们再试一次。

555
00:28:35,647 --> 00:28:39,616
我们去试试地球吧。不，它没有工作。那么，让我们继续

556
00:28:39,685 --> 00:28:42,585
景观。它怎么会不会在这里景观？

557
00:28:42,654 --> 00:28:45,689
忘记吧，我们回去吧。但后退按钮不起作用，

558
00:28:45,758 --> 00:28:49,893
这里发生了什么？所以你看看我的UI如何卡在那里。

559
00:28:49,962 --> 00:28:52,762
我试图回去，我试图旋转。

560
00:28:52,831 --> 00:28:55,898
我的用户界面只是空白，没有做任何事情。

561
00:28:55,967 --> 00:28:59,002
我的用户界面完全被卡住了。

562
00:28:59,071 --> 00:29:02,372
无论我在哪里接触。即使我旋转，也没有任何发生。

563
00:29:02,441 --> 00:29:04,708
那么这是一个可怕的经历

564
00:29:04,777 --> 00:29:07,143
你的用户。这是会导致的那种体验

565
00:29:07,212 --> 00:29:10,180
你的用户去和删除应用程序。

566
00:29:10,248 --> 00:29:14,017
因为你不能让你的UI像那样冻结，所以

567
00:29:14,085 --> 00:29:15,718
这就是为什么我们有多线程，

568
00:29:15,787 --> 00:29:18,388
这是这类应用程序开发中非常重要的一部分

569
00:29:18,457 --> 00:29:24,461
我们在IOS中做。所以让我们进去看看我们是否可以

570
00:29:24,530 --> 00:29:27,297
用多线程解决这个问题。那么我们该怎么做？

571
00:29:27,366 --> 00:29:30,266
我们要回到我的图像视图控制器，

572
00:29:30,335 --> 00:29:32,903
这是悬挂的东西。事实上，

573
00:29:32,971 --> 00:29:38,075
这就是这行代码挂在我的应用程序，

574
00:29:38,143 --> 00:29:41,144
对？这就是为什么我试图在互联网上出去的原因，

575
00:29:41,213 --> 00:29:43,747
得到卡西尼或地球URL，它很大，并且

576
00:29:43,816 --> 00:29:46,783
即使在我们快速的斯坦福网络上，它也需要很长的时间

577
00:29:46,851 --> 00:29:50,487
时间过去了。所以这行代码没有返回。

578
00:29:50,555 --> 00:29:53,123
所以我不能在main上执行这行代码

579
00:29:53,192 --> 00:29:56,025
队列，这是我所有的代码几乎都运行的地方，除非我

580
00:29:56,094 --> 00:29:57,894
特别是把它放在别的地方或

581
00:29:57,963 --> 00:30:01,264
除非我使用一些将其放在其他地方的iOS API。

582
00:30:01,332 --> 00:30:04,634
好的，那么我怎么把它从主队列中取出呢？好，

583
00:30:04,703 --> 00:30:08,605
我只是使用这个调度队列，主队列和

584
00:30:08,673 --> 00:30:13,276
然后使用异步函数将闭包放入队列中。

585
00:30:13,344 --> 00:30:15,078
所以这是要采取这个代码和

586
00:30:15,147 --> 00:30:17,080
运行它，在不同的队列上运行它。

587
00:30:17,149 --> 00:30:19,348
现在，我不想在主队列上运行这个，

588
00:30:19,417 --> 00:30:22,085
我想在其中一个服务队列中运行它。所以

589
00:30:22,154 --> 00:30:27,524
我怎么做？我要去global queue和参数

590
00:30:27,592 --> 00:30:32,162
我想这是服务质量。不是q，q，o，s，

591
00:30:32,231 --> 00:30:36,199
服务质量。而我想要的是用户发起的。

592
00:30:36,268 --> 00:30:41,138
因为用户只是要求我做点什么，对吧？所以

593
00:30:41,206 --> 00:30:43,940
我将把它放在队列中，让我很好

594
00:30:44,009 --> 00:30:46,810
我想从发起的事情中获得服务质量。和

595
00:30:46,879 --> 00:30:47,644
我要在这里做什么？

596
00:30:47,713 --> 00:30:50,080
好吧，我只是要这样做，就在这里。和

597
00:30:50,149 --> 00:30:53,283
我只是把它放在那里，去做那个。和

598
00:30:53,352 --> 00:30:56,586
这将立即停止我的应用程序阻止那样，

599
00:30:56,654 --> 00:30:59,790
因为它将在某些网络上进行这种网络获取

600
00:30:59,858 --> 00:31:03,093
其他队列。现在看到，它在这里抱怨，

601
00:31:03,161 --> 00:31:06,896
当然这当然是在一个闭包的内部。所以

602
00:31:06,965 --> 00:31:10,467
我必须这样做自我。现在每次我这样做，

603
00:31:10,535 --> 00:31:13,036
我告诉你做什么？检查看看你有没有

604
00:31:13,105 --> 00:31:16,573
一个记忆周期，对吧？我们在这里没有一个

605
00:31:16,642 --> 00:31:20,343
因为自己没有指向这个闭包的指针。

606
00:31:20,412 --> 00:31:22,979
自我里面没有指向这个闭包的指针，

607
00:31:23,048 --> 00:31:27,384
所以没有周期。但是，多线程，当你

608
00:31:27,452 --> 00:31:29,820
做自我，你必须想到另一件事。

609
00:31:31,323 --> 00:31:35,325
也就是说，如果这行代码之前的代码发生了什么情况

610
00:31:35,394 --> 00:31:38,595
这个精灵需要很长时间才能执行？所以

611
00:31:38,664 --> 00:31:41,831
长久以来，这个视图控制器甚至不想成为

612
00:31:41,900 --> 00:31:45,435
这里了？你难道不能想象那容易发生？

613
00:31:45,504 --> 00:31:48,405
有人点击获取图像，图像正在拍摄

614
00:31:48,474 --> 00:31:50,273
五分钟来，他们就像，忘了它，

615
00:31:50,342 --> 00:31:54,578
并且他们在其他地方点击。回去，或者其他什么。

616
00:31:54,646 --> 00:31:57,446
现在那个视图控制器，那要求那个图像？它的

617
00:31:57,515 --> 00:32:00,850
无意义的。它没有价值。它不应该在堆中。

618
00:32:00,919 --> 00:32:06,189
但是，如果通过这种封闭来保持堆积。你有看到？

619
00:32:06,257 --> 00:32:08,691
因为我在这个闭包中引用了自我，

620
00:32:08,760 --> 00:32:10,760
这个视图控制器，我的图像视图控制器，

621
00:32:10,829 --> 00:32:13,863
正在被堆在一起，只要那样

622
00:32:13,932 --> 00:32:17,134
形象要求非常出色。所以，这是一个情况

623
00:32:17,202 --> 00:32:21,004
我想在这里做弱自我，好吧。

624
00:32:21,073 --> 00:32:24,574
与内存循环没有任何关系，但是

625
00:32:24,643 --> 00:32:28,044
与我不想要自我保持的事实有关

626
00:32:28,113 --> 00:32:30,781
如果这个闭包需要的话，通过这个闭包在堆中

627
00:32:30,849 --> 00:32:33,417
长时间运行，用户不关心自我

628
00:32:33,485 --> 00:32:36,219
现在，我不再关心自己了。所以，

629
00:32:36,288 --> 00:32:40,423
根据定义，我希望它很弱。任何关于的问题

630
00:32:40,492 --> 00:32:43,260
那？所以，这只是当你需要做的另一件事情

631
00:32:43,328 --> 00:32:47,730
输入那个自我点，因为在我警告你之后

632
00:32:47,799 --> 00:32:50,533
这个内部机箱，如果你正在做多线程，

633
00:32:50,602 --> 00:32:53,569
想一想这里的事情是否会变得weak，或者

634
00:32:53,638 --> 00:32:58,642
你是否真的想把东西堆在一堆。好吧，

635
00:32:58,710 --> 00:33:01,444
所以这很好，但这也不会奏效。

636
00:33:01,513 --> 00:33:03,546
虽然这会阻止我的UI阻止，

637
00:33:03,615 --> 00:33:06,816
它可能会搞砸我的用户界面。可能会导致我的用户界面

638
00:33:06,884 --> 00:33:09,719
画出一切有趣的，或完全楔住。为什么

639
00:33:09,788 --> 00:33:14,157
那？由于这一行代码。我在这里设置图像，

640
00:33:14,225 --> 00:33:17,494
这就是这件事。如果你看看

641
00:33:17,563 --> 00:33:21,197
图像的设置，它设置一个UIImageView的图像，

642
00:33:21,266 --> 00:33:25,068
这是一个用户界面的想法。它的大小适合那个UIImageView的东西，

643
00:33:25,137 --> 00:33:27,971
这是一个UI的东西。它设置了一个scrollView的内容

644
00:33:28,040 --> 00:33:30,306
面积到一定的大小，这是一个用户界面的事情。

645
00:33:30,375 --> 00:33:33,543
当我设置这个图像时，我正在做各种各样的用户界面的东西。

646
00:33:33,611 --> 00:33:38,047
所以，我不能在我把这段代码放在队列中。

647
00:33:38,116 --> 00:33:41,984
这个全局队列不是一个UI队列，我不能在那里做。

648
00:33:42,053 --> 00:33:45,555
所以，我必须在这里做的是

649
00:33:45,623 --> 00:33:50,459
DispatchQueue.main.async这段代码

650
00:33:50,528 --> 00:33:55,665
回到主队列。现在，它会排队

651
00:33:55,733 --> 00:33:58,000
主队列安静时在主队列上运行。

652
00:33:58,069 --> 00:34:03,406
看到这个，这条铁路很酷，

653
00:34:03,474 --> 00:34:04,874
他们可以看到这段代码真棒，

654
00:34:04,943 --> 00:34:06,710
这就像你最简单的多线程代码

655
00:34:06,778 --> 00:34:10,113
可能写。但你明白这个东西是

656
00:34:10,181 --> 00:34:15,151
这行代码可能在一分钟后发生吗？

657
00:34:15,220 --> 00:34:16,986
好吧，因为我们正在换另一个队列

658
00:34:17,055 --> 00:34:20,423
在网络上阻塞。现在，这导致我们到另一个

659
00:34:20,492 --> 00:34:24,026
我们需要做的最后一件事情就是如果我们这样做

660
00:34:24,095 --> 00:34:28,031
请求这件事？而不是通过我们的用户界面，但

661
00:34:28,099 --> 00:34:32,335
某人有人称此图片网址并将其设置为

662
00:34:32,404 --> 00:34:38,007
别的东西。他们将此图片网址设置为某种内容

663
00:34:38,076 --> 00:34:41,644
否则，我们去获取该图像。这个时候会发生什么

664
00:34:41,713 --> 00:34:45,782
图像回来了？我们不关心它。我们离开了，

665
00:34:45,850 --> 00:34:48,151
我们正在研究一个新的形象。所以，

666
00:34:48,220 --> 00:34:51,955
当这回来时，我们需要检查确认

667
00:34:52,023 --> 00:34:56,259
我们目前的图片网址是我们在这里要求的网址。

668
00:34:56,328 --> 00:35:01,397
只要说URL等于我们就可以轻松做到这一点

669
00:35:01,466 --> 00:35:06,035
图片网址。这周是我们得到的。所以，

670
00:35:06,104 --> 00:35:09,372
在这之后，我只是在检查后可能需要五分钟

671
00:35:09,440 --> 00:35:13,042
我正在检查该URL是否是我要求的。

672
00:35:13,111 --> 00:35:15,244
因为如果不是这样，我不再关心它了

673
00:35:15,313 --> 00:35:18,882
类。你有看到？所以，这就是我在谈论的地方

674
00:35:18,950 --> 00:35:20,317
当你在做多线程时，你必须

675
00:35:20,385 --> 00:35:21,685
想想事情的时机，

676
00:35:21,753 --> 00:35:23,586
事情可能需要一段时间，他们回来

677
00:35:23,655 --> 00:35:26,789
事情可能与你离开时不同。所以

678
00:35:26,858 --> 00:35:29,925
这是一段非常棒的代码，可以真正理解，

679
00:35:29,994 --> 00:35:32,795
因为它涵盖了很多地方，来自弱者的自我和

680
00:35:32,864 --> 00:35:35,865
检查这一点，并分派回主队列，

681
00:35:35,934 --> 00:35:38,101
得到这些背景队列之一。

682
00:35:38,170 --> 00:35:39,936
真的要确保你明白

683
00:35:40,005 --> 00:35:42,538
这一小段代码就在这里。好，如此

684
00:35:42,607 --> 00:35:48,378
让我们运行一下，看看这是否确实修复了我们的好用户界面

685
00:35:48,447 --> 00:35:52,449
响应。在这里，我们再来尝试一下。让我们去地球。

686
00:35:52,517 --> 00:35:54,950
我们可以回去吗？呜呼，看看！我可以回去，

687
00:35:55,019 --> 00:35:59,789
现在我想要卡西尼。这里是卡西尼和地球

688
00:35:59,858 --> 00:36:03,025
仍然可能被要求，这里来到地球。呃，和

689
00:36:03,094 --> 00:36:05,127
它没有做任何事情。这太棒了，它只是放弃了

690
00:36:05,196 --> 00:36:06,829
因为我们不再关心地球。

691
00:36:06,898 --> 00:36:10,399
我改变主意了。所以这里是卡西尼，那太好了，对吧？

692
00:36:10,468 --> 00:36:14,603
我可以旋转，我们可以回去。我们来挑选地球。

693
00:36:14,672 --> 00:36:17,707
现在，当我在等待地球时，我可以旋转。我的UI

694
00:36:17,776 --> 00:36:19,742
完全响应。我可以回去

695
00:36:19,811 --> 00:36:20,910
选择别的东西。让我们继续前进

696
00:36:20,979 --> 00:36:25,915
让地球到达，所以地球是一个很大的图像。它是。

697
00:36:25,984 --> 00:36:31,387
不知何故，地球似乎是人们的一张照片

698
00:36:31,456 --> 00:36:35,925
我们会缩小一点，这是地球。所以这是

699
00:36:35,994 --> 00:36:38,528
一幅由很多小人物组成的地球图片

700
00:36:38,597 --> 00:36:41,231
向卡西尼问好，这就是这个。

701
00:36:41,299 --> 00:36:43,332
而且，他们也有类似的

702
00:36:43,401 --> 00:36:46,569
这里有土星的建筑。但

703
00:36:46,637 --> 00:36:50,106
你可以看到我们的用户界面显着提高了

704
00:36:50,175 --> 00:36:53,143
把那些东西放在那里的其他线程上。

705
00:36:56,981 --> 00:37:01,651
好吧？但我们的用户界面仍然不太好

706
00:37:01,720 --> 00:37:05,488
因为看。现在发生了什么？

707
00:37:05,557 --> 00:37:09,191
用户不知道。他们想要地球图像和

708
00:37:09,260 --> 00:37:11,861
不在这里。他们就像，我猜这里没有地球图像，

709
00:37:11,930 --> 00:37:15,098
你懂？他们点击回来。我们需要给他们一些

710
00:37:15,166 --> 00:37:18,834
反馈说我们正在得到他们的地球的东西。

711
00:37:18,903 --> 00:37:22,872
我们需要让他们知道，是的，我正在努力。

712
00:37:22,941 --> 00:37:24,040
尽管你可以回击，

713
00:37:24,108 --> 00:37:26,476
你可以留在这里，你可以看到你的地球图像。所以，

714
00:37:26,544 --> 00:37:27,843
我们该怎么做？我们会这样做的

715
00:37:27,912 --> 00:37:30,513
一个小小的微调。称为活动指标。

716
00:37:30,582 --> 00:37:33,349
这只是一个小旋转的观点。和

717
00:37:33,418 --> 00:37:35,718
这也是一个很好的展示你的另一个原因。

718
00:37:35,787 --> 00:37:38,121
这是它有时可能会有点拥挤试图

719
00:37:38,190 --> 00:37:40,523
建立你想要的用户界面，特别是当事情全部结束时

720
00:37:40,592 --> 00:37:43,226
像这个滚动视图一样的边缘。所以

721
00:37:43,295 --> 00:37:47,030
这个微调，你可以搜索它，活动，它被称为

722
00:37:47,099 --> 00:37:49,232
UI活动指示器视图。在这里看到它？

723
00:37:49,300 --> 00:37:54,003
我要把它拖出来，并试着把它放在中心

724
00:37:54,071 --> 00:37:58,340
我的图片视图在这里。现在，这做了一件非常糟糕的事情，

725
00:37:58,409 --> 00:38:01,444
好的。你不能说，它看起来很好，但是

726
00:38:01,513 --> 00:38:03,813
这不好。但是，你可以找出和的方式

727
00:38:03,881 --> 00:38:06,449
看到坏消息是你的文档大纲。

728
00:38:06,518 --> 00:38:09,452
如果我们去文档大纲并尝试找到这个指标

729
00:38:09,520 --> 00:38:12,722
在这里，你看到了吗？看看它发生了什么，

730
00:38:12,791 --> 00:38:15,792
它是滚动视图的子视图。

731
00:38:15,860 --> 00:38:17,894
好的，任何时候你拖动一个视图就可以了

732
00:38:17,963 --> 00:38:20,596
你放下它的东西的子视图。我们不想要

733
00:38:20,665 --> 00:38:23,465
因为我们不希望这个滚动视图滚动的东西

734
00:38:23,534 --> 00:38:26,836
位于滚动视图的内容区域中。这是一个分支

735
00:38:26,905 --> 00:38:28,871
滚动视图的视图意味着界面构建器的内容

736
00:38:28,940 --> 00:38:32,008
区。我们希望它坐在上面，幸运的是它

737
00:38:32,076 --> 00:38:35,278
超级容易在文档大纲的顶部拉出来。

738
00:38:35,347 --> 00:38:37,547
这是非常困难的。

739
00:38:37,616 --> 00:38:39,715
但在这里，我们可以把它举起来

740
00:38:39,784 --> 00:38:42,251
放它，实际上是把它放在后面，而且

741
00:38:42,320 --> 00:38:45,087
我们可以把它放在前面。所以，现在不是

742
00:38:45,156 --> 00:38:48,824
滚动视图的子视图，它在它的前面，

743
00:38:48,893 --> 00:38:52,228
坐在它前面。现在我们也希望它以中心为中心，

744
00:38:52,297 --> 00:38:53,729
但不在滚动视图中居中，

745
00:38:53,798 --> 00:38:58,801
我们希望以整个MVC的父视图为中心。

746
00:38:58,869 --> 00:38:59,702
那么我们该怎么做呢？

747
00:38:59,771 --> 00:39:02,438
我的意思是，我的上帝这将是不可能的，控制阻力。

748
00:39:02,507 --> 00:39:05,141
如何在没有点击滚动视图的情况下找到边缘？

749
00:39:05,210 --> 00:39:07,510
它总是希望滚动视图在那里。

750
00:39:07,578 --> 00:39:11,114
那么，我们可以在这里控制拖动。

751
00:39:11,183 --> 00:39:14,617
看看那个，然后控制拖到这里和

752
00:39:14,686 --> 00:39:16,519
说我们想成为标准，水平和

753
00:39:16,588 --> 00:39:18,554
垂直在保险柜里。

754
00:39:18,623 --> 00:39:21,223
我们在那里有一点点流离失所，没有问题，

755
00:39:21,292 --> 00:39:25,794
我们将解决这个问题，更新帧。我们把它放在中间。所以

756
00:39:25,863 --> 00:39:29,065
控制拖拽文件内部的轮廓是非常的

757
00:39:29,134 --> 00:39:33,335
好的方法来解决那些难以解答的问题。现在，另一种方法

758
00:39:33,404 --> 00:39:36,072
我们想要做的事情是这是非常微小的控制。

759
00:39:36,140 --> 00:39:38,641
我想要一个更大的。原来有一个更大的，

760
00:39:38,710 --> 00:39:41,277
这个大的白色的。虽然我不希望它白色的因为这个

761
00:39:41,346 --> 00:39:42,812
会在白色上变白。

762
00:39:42,880 --> 00:39:45,114
所以我会选择一种不同的颜色，让它变成蓝色，

763
00:39:45,183 --> 00:39:49,952
让我们说。所以我在这里有了这个漂亮的微调器。这个

764
00:39:50,021 --> 00:39:52,655
顺便说一下，你可以从头开始制作动画

765
00:39:52,724 --> 00:39:55,525
或者当你想要时打开它，我们将要做的。

766
00:39:55,593 --> 00:39:58,093
你也可以让微调自动隐藏自己

767
00:39:58,162 --> 00:40:01,097
当它不旋转时。然后当它旋转时，

768
00:40:01,166 --> 00:40:04,633
它显示了我们自己，所以我们也想要。所以让我们开始转向

769
00:40:04,702 --> 00:40:06,870
这件事情开始和结束，让我们去打开微调

770
00:40:06,938 --> 00:40:08,838
关闭。首先，我们想要转向哪里，

771
00:40:08,906 --> 00:40:10,172
我们当然需要一个出路，

772
00:40:10,241 --> 00:40:11,307
我们会这样说，

773
00:40:11,376 --> 00:40:12,675
让我们把它放在这里吧。

774
00:40:12,744 --> 00:40:15,678
我只是要按Ctrl +拖动，正常出路。

775
00:40:15,747 --> 00:40:16,846
我会称它为我的微调，

776
00:40:16,914 --> 00:40:20,183
这就是我想在那里称之为我的活动指标。

777
00:40:20,251 --> 00:40:23,119
所以在这里，我们只需要打开这个东西

778
00:40:23,188 --> 00:40:25,889
把它关掉。那么，我们需要打开它的地方是正确的

779
00:40:25,957 --> 00:40:28,391
在我们做这个非常昂贵的操作之前。

780
00:40:28,460 --> 00:40:31,326
所以我会写在这里说，spinner.startAnimating。

781
00:40:31,395 --> 00:40:34,496
这就是你打开它的方式。我想在哪里关闭它？

782
00:40:34,565 --> 00:40:38,601
那么，你可能认为我想在这里关掉它。但

783
00:40:38,670 --> 00:40:40,803
再次，考虑多线程，

784
00:40:40,872 --> 00:40:43,973
我真的不想那么做，因为如果是另一张图片呢

785
00:40:44,042 --> 00:40:46,543
请求熄灭，我等着呢？

786
00:40:46,611 --> 00:40:48,778
我仍然希望纺纱工继续纺纱。真，

787
00:40:48,846 --> 00:40:51,881
我希望这个微调器在图像时停止旋转

788
00:40:51,950 --> 00:40:56,251
实际上被设置。所以任何时候我们真的把我们的形象设置

789
00:40:56,320 --> 00:40:59,889
里面有东西。然后我想停止我的动画。所以，

790
00:40:59,958 --> 00:41:03,393
我只是说要微调，我也要小心

791
00:41:03,461 --> 00:41:07,897
这里的人准备，让我。 stopAnimating，如此

792
00:41:07,966 --> 00:41:12,001
这是停止动画的可靠之处。所以一旦我放了

793
00:41:12,070 --> 00:41:14,970
在这里的形象，我显然不希望那件事情旋转

794
00:41:15,039 --> 00:41:16,906
了。好吧，让我们看看看起来像什么。

795
00:41:25,216 --> 00:41:27,883
所以我们没有要求任何东西，所以没有微调。让我们

796
00:41:27,952 --> 00:41:30,953
去这里要求卡西尼，它看起来在旋转，而且

797
00:41:31,022 --> 00:41:33,622
卡西尼一到，它就停止旋转。

798
00:41:33,691 --> 00:41:39,061
如果我们缩小，你会发现它不在那里。

799
00:41:39,130 --> 00:41:43,032
在这个背景中很难看到，但它不在那里。

800
00:41:43,100 --> 00:41:45,768
让我们快速确定这一切都在努力

801
00:41:45,836 --> 00:41:49,138
iPad兼容。我们上去吧，iPad并在那里运行。

802
00:41:55,246 --> 00:41:58,147
点击此按钮时，它在iPad上特别可爱，

803
00:41:58,216 --> 00:42:00,883
如果你在那里没有微调，那真是太棒了

804
00:42:00,951 --> 00:42:08,491
不清楚这里发生了什么。好，地球。

805
00:42:16,000 --> 00:42:18,600
当这个旋转的时候，我们可以改变我们的想法和

806
00:42:18,669 --> 00:42:20,302
去卡西尼。好吧，现在开始。

807
00:42:20,371 --> 00:42:21,838
现在这是一个新的ViewController和

808
00:42:21,907 --> 00:42:23,672
它重新开始，现在我们有卡西尼。

809
00:42:23,741 --> 00:42:26,809
现在我们遇到的一件事情就是这样糟糕

810
00:42:26,878 --> 00:42:29,778
iPhone，记得我们拿了按钮的标题。

811
00:42:29,847 --> 00:42:31,480
我们把它放在顶部，并有一个标题。

812
00:42:31,549 --> 00:42:35,385
但注意在iPad上，这里没有标题，在哪里

813
00:42:35,453 --> 00:42:39,822
细节是？细节上没有标题，

814
00:42:39,891 --> 00:42:41,957
它只是一种向上，当然，

815
00:42:42,026 --> 00:42:44,693
实际上它有点丑陋。所以我真的很想把一个标题

816
00:42:44,762 --> 00:42:47,730
在这里就像我在这里有一个标题。所以我怎么能

817
00:42:47,798 --> 00:42:50,767
去做？那么，它实际上很容易

818
00:42:50,835 --> 00:42:54,537
去做。我只是想把我的细节放在这里，而且

819
00:42:54,606 --> 00:42:59,175
我将在NavigationController中嵌入它。

820
00:42:59,244 --> 00:43:00,709
所以我把它放在一个NavigationController中，

821
00:43:00,778 --> 00:43:03,246
不是因为我在那里做任何导航。

822
00:43:03,314 --> 00:43:05,748
我所做的导航都是由这个控制的，

823
00:43:05,816 --> 00:43:08,884
但仅仅因为我想要一个标题。

824
00:43:08,953 --> 00:43:11,587
现在让我们看看，这是否有效？好吧，我们来运行它

825
00:43:11,656 --> 00:43:17,393
看看是否有效。好吧，

826
00:43:17,462 --> 00:43:20,830
我们走吧，卡西尼，哦，哦，不。

827
00:43:20,899 --> 00:43:23,232
它不工作，我甚至没有让我的微调了，

828
00:43:23,300 --> 00:43:26,836
这打破了它。它把一个标题放在这里，但它打破了它。

829
00:43:26,904 --> 00:43:30,106
现在为什么会破坏我们的代码？那么，让我们看看我们的

830
00:43:30,175 --> 00:43:33,476
代码，我们会很明显地看到它为什么会破坏它。

831
00:43:33,545 --> 00:43:36,446
在我们为赛格做准备时，我们做了什么？我们看看

832
00:43:36,514 --> 00:43:39,081
细节的目的地是细节。

833
00:43:39,149 --> 00:43:41,917
我们检查它是否是一个ImageViewController，但是

834
00:43:41,986 --> 00:43:43,719
它不是一个ImageViewController，

835
00:43:43,787 --> 00:43:48,524
现在是吗？对，如果我们回到我们的故事板，这个

836
00:43:48,593 --> 00:43:52,995
这些segues的目的地是一个NavigationController。

837
00:43:53,064 --> 00:43:56,098
不是ImageController，它是一个NavigationController。所以

838
00:43:56,166 --> 00:43:59,669
该代码行失败，对吧？这行代码，

839
00:43:59,737 --> 00:44:02,471
这个imageVC = destination作为ImageViewController，

840
00:44:02,540 --> 00:44:05,541
不再是真的了。因为我们的ImageView是我们的目的地

841
00:44:05,610 --> 00:44:08,477
一个NavigationController。所以我们可以检查一下。让我们

842
00:44:08,546 --> 00:44:11,781
在这里设置我们的目的地等于segue的

843
00:44:11,849 --> 00:44:14,133
但我会说，如果我可以让navcon =目的地

844
00:44:14,134 --> 00:44:16,418
目的地。

845
00:44:16,487 --> 00:44:21,357
一个UINavigationController。然后我会让我的目的地=

846
00:44:21,425 --> 00:44:25,194
navcon.visibleViewController，可能是零。

847
00:44:25,262 --> 00:44:29,298
在这种情况下，我会继续并返回navcon。

848
00:44:29,367 --> 00:44:32,235
然后在这里我要使用目的地，所以这个

849
00:44:32,303 --> 00:44:35,504
将基本解开NavigationController和

850
00:44:35,573 --> 00:44:38,040
得到它可见的ViewController。这个会

851
00:44:38,109 --> 00:44:40,609
如果没有NavigationController，那么它仍然可以工作。

852
00:44:40,678 --> 00:44:42,911
因为那么这行代码不会发生，

853
00:44:42,980 --> 00:44:45,280
而我们只是在这里说segue的目的地。

854
00:44:45,349 --> 00:44:53,822
所以让我们看看是否有效。我们走吧，卡西尼，看，

855
00:44:53,891 --> 00:44:55,491
我们得到了标题，我们得到了微调，

856
00:44:55,559 --> 00:44:58,527
呜呼，它的工作！好吧，地球，退出标题，

857
00:44:58,596 --> 00:45:02,731
纺纱。好吧，现在这是很常见的想做的事情

858
00:45:02,800 --> 00:45:04,834
把你的细节放在NavigationController中。

859
00:45:04,902 --> 00:45:07,235
而你必须做这个小间接。

860
00:45:07,304 --> 00:45:10,873
很多时候会做的是创建一个小扩展

861
00:45:10,942 --> 00:45:17,280
UIViewController中。我调用，这是我调用内容的一小部分，

862
00:45:17,348 --> 00:45:20,115
这是UIViewController的内容，它为

863
00:45:20,184 --> 00:45:25,521
大多数ViewControllers就是它自己。但如果它是一个navcon，

864
00:45:25,589 --> 00:45:27,689
如果我们必须在这里做这个小窍门，

865
00:45:27,758 --> 00:45:29,391
那么它将返回其可见的ViewController。

866
00:45:29,460 --> 00:45:31,526
所以我会说如果我可以让自己

867
00:45:31,595 --> 00:45:33,663
是一个NavigationController。

868
00:45:33,731 --> 00:45:38,801
然后我要返回我的visibleViewController，

869
00:45:38,869 --> 00:45:42,438
或者如果没有，那么我会回报自己。如果我不是

870
00:45:42,506 --> 00:45:46,475
一个navcon然后我会回来自己。所以内容就是

871
00:45:46,544 --> 00:45:49,812
viewController本身，或者如果它是一个NavigationController

872
00:45:49,881 --> 00:45:52,648
这是NavigationController的内容。

873
00:45:52,717 --> 00:45:54,149
你也可以用TabBarController来做到这一点。

874
00:45:54,218 --> 00:45:57,019
你可以有其他的，如果它是一个TabBarController，然后显示

875
00:45:57,088 --> 00:45:58,821
我是当前选项卡的ViewController，你可以这样做

876
00:45:58,889 --> 00:46:02,758
一样的东西。所以在这里我不需要再做这个了，

877
00:46:02,827 --> 00:46:06,094
我只能说segue.destination.contents，

878
00:46:06,163 --> 00:46:09,498
对？这将给我想要的东西。

879
00:46:09,567 --> 00:46:12,267
看看这是如何清理这个代码真的很好？所以你会的

880
00:46:12,336 --> 00:46:15,705
当你有时，经常想要这样的延伸

881
00:46:15,773 --> 00:46:19,308
您的细节可能会被包裹在NavigationController中。

882
00:46:24,782 --> 00:46:28,250
卡西尼，在那里完美的工作，没错，是的？

883
00:46:28,319 --> 00:46:30,986
>> [听不清]

884
00:46:31,055 --> 00:46:36,525
URL的URL [不可信]

885
00:46:36,594 --> 00:46:38,060
URL。

886
00:46:38,129 --> 00:46:40,662
>>是的，就在这里。

887
00:46:40,731 --> 00:46:43,832
>>那么URL在哪里呢

888
00:46:43,901 --> 00:46:48,537
它[无法]说，如果像URL-

889
00:46:48,606 --> 00:46:49,771
>>是的。

890
00:46:49,840 --> 00:46:53,175
>>但那会怎样

891
00:46:53,243 --> 00:46:56,511
定义[INAUDIBLE] >>好吧

892
00:46:56,580 --> 00:47:00,949
通过让url = imageURL我们创建一个本地

893
00:47:01,018 --> 00:47:03,185
称为url的变量。

894
00:47:03,253 --> 00:47:06,188
这是本地函数的局部变量，和

895
00:47:06,257 --> 00:47:11,760
它的值是imageURL。现在这个闭包在这里和

896
00:47:11,829 --> 00:47:16,699
这件事闭包了。闭包总是捕捉

897
00:47:16,767 --> 00:47:20,903
当他们需要它们时，他们周围的局部变量。和

898
00:47:20,972 --> 00:47:24,473
因为我们在这些关闭中引用了url，它就得到了

899
00:47:24,541 --> 00:47:28,110
抓获。所以它坚持这一点，甚至五分钟或

900
00:47:28,179 --> 00:47:30,546
无论这需要多长时间。它把它保存在堆中

901
00:47:30,615 --> 00:47:34,383
只要这种闭包存在，它就会坚持下去。但

902
00:47:34,452 --> 00:47:37,453
它仍然保持原来的状态。

903
00:47:37,521 --> 00:47:40,222
如果在五分钟的时间内，

904
00:47:40,291 --> 00:47:42,557
这个变化，这并没有改变这一点，

905
00:47:42,626 --> 00:47:46,361
因为这是本地副本，对吗？这是一个局部变量，

906
00:47:46,430 --> 00:47:48,497
这是这件事的副本。 >>但是

907
00:47:48,566 --> 00:47:51,333
这是如何具有价值，因为你说，

908
00:47:51,402 --> 00:47:56,071
它不是一个根实例。哦，那好吧。

909
00:47:56,140 --> 00:47:59,174
所以，图片网址，我不知道URL是一种值类型还是

910
00:47:59,243 --> 00:48:00,176
一个参考类型，

911
00:48:00,244 --> 00:48:03,545
这里没关系。但让我们说这是一种价值类型。

912
00:48:03,614 --> 00:48:07,082
如果它是一个值类型，那么我们知道这复制了它。和

913
00:48:07,151 --> 00:48:08,584
那么当我们说等于，等于，

914
00:48:08,653 --> 00:48:11,654
这意味着URL必须实现可比较的，

915
00:48:11,722 --> 00:48:16,125
它当然是这样。如果这是一个参考类型，

916
00:48:16,194 --> 00:48:18,727
那么它只是抓一个指向那个东西的指针

917
00:48:18,796 --> 00:48:20,763
那么我们在这里比较指针。所以

918
00:48:20,831 --> 00:48:23,665
无论哪种方式，它都会确保如果它改变了，

919
00:48:23,734 --> 00:48:29,238
我们知道。好问题，但。好吧，

920
00:48:29,306 --> 00:48:35,177
让我们回到这里的幻灯片。让我们来谈谈

921
00:48:35,245 --> 00:48:37,980
我们今天的另一个非常重要的话题，更多的是关于

922
00:48:38,048 --> 00:48:40,616
自动版式。我要快速回顾一下布局，

923
00:48:40,685 --> 00:48:42,351
只是为了确保你明白你的意思

924
00:48:42,420 --> 00:48:44,920
理解。这里有一些

925
00:48:44,989 --> 00:48:46,722
我们用Autolayout看到的东西

926
00:48:46,790 --> 00:48:49,892
远。我们知道使用虚线蓝线来试图说明

927
00:48:49,960 --> 00:48:52,861
Xcode我们的意思是吧？把东西放在中心，放

928
00:48:52,930 --> 00:48:55,498
东西在他们的边缘由蓝色的虚线。然后我们

929
00:48:55,566 --> 00:48:57,967
我们可以重置为建议的限制条件，请记住，

930
00:48:58,035 --> 00:49:00,502
在右下角，这将尝试制约

931
00:49:00,571 --> 00:49:03,205
这使得蓝线有意义，但我们知道它没有

932
00:49:03,274 --> 00:49:05,874
真正的工作更多，大约50％的时间。所以

933
00:49:05,943 --> 00:49:08,710
然后，我们学习了如何控制拖动到边缘或

934
00:49:08,779 --> 00:49:11,313
其他的意见，然后设置平等，

935
00:49:11,382 --> 00:49:14,983
将宽度或宽高比或边缘设置为相同或

936
00:49:15,052 --> 00:49:18,187
随你。我们知道我们可以去尺寸检查员和

937
00:49:18,255 --> 00:49:20,823
看看所有约束条件

938
00:49:20,891 --> 00:49:22,991
只需点击视图即可获得某种视图。

939
00:49:23,060 --> 00:49:25,728
看大小。事实上，我们甚至可以编辑简单的东西

940
00:49:25,796 --> 00:49:27,863
关于尺寸检查员的限制，

941
00:49:27,932 --> 00:49:30,332
像常量值或类似的东西。

942
00:49:30,401 --> 00:49:33,936
如果我们可以在我们可以接触的界面上看到它，我们也是如此

943
00:49:34,005 --> 00:49:37,073
点击一个约束并打开检查员和

944
00:49:37,141 --> 00:49:40,742
检查有关约束的详细信息。

945
00:49:40,811 --> 00:49:43,545
我们也知道右下方的引脚菜单

946
00:49:43,614 --> 00:49:45,614
让我们来设置一些约束，但是

947
00:49:45,682 --> 00:49:48,583
这挂钩到边缘和类似的东西。

948
00:49:48,652 --> 00:49:50,419
顺便说一下，还有一个排列按钮，

949
00:49:50,487 --> 00:49:51,620
我没有告诉你，但是很相似，

950
00:49:51,688 --> 00:49:55,157
可以让你排列前沿和类似的东西。和我们

951
00:49:55,226 --> 00:49:57,826
还了解到文档大纲非常棒

952
00:49:57,895 --> 00:49:59,962
去看看我们的约束和

953
00:50:00,031 --> 00:50:02,097
详细信息，因为它列出每个约束作为一个行项目，

954
00:50:02,166 --> 00:50:05,133
它也是你点击解决的特殊场所的地方

955
00:50:05,202 --> 00:50:06,335
你的限制问题

956
00:50:06,403 --> 00:50:09,004
是。所以文档大纲只是使用的基础

957
00:50:09,073 --> 00:50:12,474
自动布局。所以我们知道所有这些东西。明白

958
00:50:12,543 --> 00:50:15,844
掌握Autolayout需要的经验。

959
00:50:15,912 --> 00:50:18,113
你不只是有人告诉你所有这些事情或

960
00:50:18,182 --> 00:50:18,981
甚至向他们展示他们

961
00:50:19,049 --> 00:50:21,784
就像现在我在MAC上我现在可以做自动图层。

962
00:50:21,852 --> 00:50:24,887
你必须展示很多东西并且理解

963
00:50:24,955 --> 00:50:28,056
产生的冲突和限制是什么

964
00:50:28,125 --> 00:50:31,093
所有这一切。这真是一个梦幻般的系统自动布局，

965
00:50:31,161 --> 00:50:33,995
非常强大，但它确实需要一些经验来掌握

966
00:50:34,064 --> 00:50:35,797
不要太沮丧。

967
00:50:35,866 --> 00:50:37,333
幸运的是，你肯定会有更多的任务

968
00:50:37,402 --> 00:50:38,634
你将不得不做Autolayout，

969
00:50:38,702 --> 00:50:41,536
和你最终的项目，你肯定想Autolayout

970
00:50:41,605 --> 00:50:46,108
所以你会得到一些经验。有可能

971
00:50:46,177 --> 00:50:49,544
从代码中做所有这些Autolayout的东西，现在不是我们

972
00:50:49,613 --> 00:50:52,981
其实并没有在界面上拖动很多拖动

973
00:50:53,050 --> 00:50:56,485
光代码来做这一切。我不会教任何

974
00:50:56,554 --> 00:50:59,388
不幸的是，如果你想学习一点点

975
00:50:59,457 --> 00:51:02,891
那么，你可以开始去UI视图文档和

976
00:51:02,960 --> 00:51:04,960
搜索“锚点”和“自动布局”。

977
00:51:05,029 --> 00:51:07,762
这是两套主要的API，有很多

978
00:51:07,831 --> 00:51:10,399
那里的API，然后还有文档。怎么样

979
00:51:10,467 --> 00:51:13,001
做自动布局系统。你可以通读全部

980
00:51:13,070 --> 00:51:15,504
如果你真的想成为自动布局的主人

981
00:51:15,573 --> 00:51:18,073
来自代码。这并不是那么困难，

982
00:51:18,142 --> 00:51:20,909
但要真正理解需要了解汽车

983
00:51:20,978 --> 00:51:25,881
布局以及它如何从代码中完成工作。好吧，

984
00:51:25,949 --> 00:51:29,184
说过所有的自动布局有时候就是这样

985
00:51:29,253 --> 00:51:32,521
不够。到目前为止，你知道的自动布局不是

986
00:51:32,590 --> 00:51:35,758
足够。有时当你旋转你的设备时，

987
00:51:35,826 --> 00:51:38,661
你的几何变化如此巨大，只是

988
00:51:38,729 --> 00:51:40,962
没有办法控制拖动来使事情发生。

989
00:51:41,031 --> 00:51:44,266
例如，集中。我们知道

990
00:51:44,334 --> 00:51:46,601
集中很多按钮看起来不错，但是

991
00:51:46,670 --> 00:51:49,338
在肖像。所有的按钮看起来是正方形的，但是当你时

992
00:51:49,406 --> 00:51:51,272
去风景的按钮都被砸了。

993
00:51:51,341 --> 00:51:54,777
只有足够的空间可以说在底部翻转27

994
00:51:54,846 --> 00:51:56,211
它真的被粉碎了。

995
00:51:56,279 --> 00:51:59,047
如果我切换到风景，那真的会很棒

996
00:51:59,116 --> 00:52:02,417
如果我有20个按钮，比方说，它横跨5个按钮

997
00:52:02,486 --> 00:52:04,820
4倒。也许它会移动那么翻转

998
00:52:04,889 --> 00:52:07,523
偏向侧面。这将是一个更好的景观，但

999
00:52:07,591 --> 00:52:10,058
没有任何控制拖到边缘的事情会发生

1000
00:52:10,127 --> 00:52:13,028
发生。对，它是不能做到的。

1001
00:52:13,096 --> 00:52:16,164
只是，你不能限制视图

1002
00:52:16,233 --> 00:52:20,169
让他们像轮换那样自我接力。所以

1003
00:52:20,238 --> 00:52:24,573
有什么解决办法？大小类。现在，

1004
00:52:24,641 --> 00:52:28,510
我认为，当你的时候，苹果做出了一个伟大的决定

1005
00:52:28,579 --> 00:52:32,313
旋转到风景与肖像，而不是他们的

1006
00:52:32,382 --> 00:52:36,752
向您汇报，这是您的新维度，弄清楚，

1007
00:52:36,821 --> 00:52:40,622
他们只是将其简化为两个，并且只是两个值

1008
00:52:40,690 --> 00:52:45,494
你的水平和垂直尺寸。你不是紧凑的

1009
00:52:45,563 --> 00:52:48,797
或在宽度和高度上的规则大小，以及

1010
00:52:48,866 --> 00:52:52,201
而已。他们会向你报告这件事

1011
00:52:52,269 --> 00:52:54,569
一个让你知道什么时候改变的整个系统

1012
00:52:54,638 --> 00:52:55,571
那么你建立你的用户界面如此

1013
00:52:55,639 --> 00:52:57,573
当它垂直紧凑时它看起来不错。

1014
00:52:57,642 --> 00:52:59,274
水平紧凑时看起来不错。

1015
00:52:59,343 --> 00:53:00,675
当它是垂直的时候它看起来不错。

1016
00:53:00,744 --> 00:53:03,779
当它是正常的时候它看起来不错。垂直和

1017
00:53:03,848 --> 00:53:05,346
水平的，对吗？

1018
00:53:05,415 --> 00:53:08,984
因此，这大大简化了系统，你会

1019
00:53:09,052 --> 00:53:13,088
看到它在绝大多数情况下都有效。所以

1020
00:53:13,157 --> 00:53:15,357
让我们来谈谈这整个大小类的事情

1021
00:53:15,426 --> 00:53:16,658
怎么运行的。首先，

1022
00:53:16,727 --> 00:53:19,394
你必须了解什么设备，

1023
00:53:19,463 --> 00:53:21,730
设备所处的尺寸等级

1024
00:53:21,799 --> 00:53:27,002
例如，iPhone的宽度和高度都很紧凑

1025
00:53:27,071 --> 00:53:31,740
当他们在肖像。当你旋转一个iPhone时，

1026
00:53:31,809 --> 00:53:34,809
不是iPhone +，一个普通的iPhone，当你旋转它时，

1027
00:53:34,878 --> 00:53:38,514
现在它被认为是双向的紧凑型，

1028
00:53:38,582 --> 00:53:40,082
这有点直观。你会想，

1029
00:53:40,150 --> 00:53:42,984
好吧，现在它的宽度是固定的，但不是，这是考虑

1030
00:53:43,053 --> 00:53:46,154
宽度紧凑，这是多么惊人的变化

1031
00:53:46,223 --> 00:53:48,690
完全是你想要的，好吗？

1032
00:53:48,759 --> 00:53:52,060
你会发现情况就是如此。现在iPhone加密

1033
00:53:52,129 --> 00:53:55,230
是不同的。 iPhone插件的宽度和宽度仍然很紧凑

1034
00:53:55,298 --> 00:53:57,932
经常在肖像身高，但

1035
00:53:58,001 --> 00:53:59,134
当你把它们变成风景时，

1036
00:53:59,202 --> 00:54:03,005
现在它们宽度一般，高度紧凑。所以

1037
00:54:03,073 --> 00:54:07,542
iPhone的优势与普通iPhone不同

1038
00:54:07,611 --> 00:54:11,446
办法。 iPad有规则的宽度和规则的高度。

1039
00:54:11,515 --> 00:54:14,549
人像或风景并不重要，他们总是有规律的

1040
00:54:14,618 --> 00:54:17,453
在这两方面你都可以想象它们很大，iPad是巨大的。

1041
00:54:17,521 --> 00:54:20,989
但是，请注意，主控中的MVC

1042
00:54:21,058 --> 00:54:23,759
的分割视图宽度紧凑，

1043
00:54:23,827 --> 00:54:28,029
即使它在iPad上，它的宽度仍然很小

1044
00:54:28,098 --> 00:54:32,634
并且身高一般。所以它不只是你的设备

1045
00:54:32,703 --> 00:54:35,237
说什么你的MVC的环境，

1046
00:54:35,306 --> 00:54:40,976
它可能是它所处的MVC情况。所以，而且

1047
00:54:41,044 --> 00:54:43,945
这就是为什么我们不会像在iPad上看到的那样？

1048
00:54:44,014 --> 00:54:46,114
因为那时我不得不说，我是iPad还是

1049
00:54:46,183 --> 00:54:50,085
我在分割视图？我们只是问，我是紧凑的还是

1050
00:54:50,153 --> 00:54:52,620
我经常在我的身高和体格吗？然后我们做出反应

1051
00:54:52,689 --> 00:54:57,359
那。所以这里是一个小网格中的所有设备

1052
00:54:57,428 --> 00:55:00,095
并让我告诉你什么是应用程序。

1053
00:55:00,163 --> 00:55:02,764
所以这里有一个类似于我们的计算器

1054
00:55:02,833 --> 00:55:05,500
浓度计算器有很多按钮和

1055
00:55:05,569 --> 00:55:07,970
也许它会看起来更好，五个横跨和

1056
00:55:08,038 --> 00:55:11,106
在两种紧凑紧凑的两种情况下，请看？

1057
00:55:11,174 --> 00:55:13,675
无论是紧凑宽度还是普通宽度，它仍然是

1058
00:55:13,744 --> 00:55:16,411
看起来更好，在紧凑的高度上只有四个高。

1059
00:55:16,480 --> 00:55:17,479
而当它是正常的高度时，

1060
00:55:17,548 --> 00:55:19,347
五高一直看起来更好。

1061
00:55:19,416 --> 00:55:20,982
也许更多会更好，但是

1062
00:55:21,051 --> 00:55:23,785
有五个比四个更好。

1063
00:55:23,854 --> 00:55:25,787
所以这就是我们要在演示中要做的事情，我们将要做

1064
00:55:25,855 --> 00:55:28,924
做这种计算器同样的方式。

1065
00:55:28,992 --> 00:55:34,029
好的，现在我们已经了解了我们所处的规模类别。

1066
00:55:34,098 --> 00:55:38,734
我们一直都知道，因为我们的MVC正在开展业务。

1067
00:55:38,803 --> 00:55:41,536
基于这些知识我们可以做些什么？好，

1068
00:55:41,605 --> 00:55:46,742
我们可以做的一件事是改变很多视图属性

1069
00:55:46,810 --> 00:55:50,345
UI标签上的字体，例如背景颜色

1070
00:55:50,414 --> 00:55:54,316
即使是一个视图是否隐藏，即使是一个视图

1071
00:55:54,385 --> 00:55:58,119
即使在视图层次结构中也可以通过大小类来控制。

1072
00:55:58,188 --> 00:56:00,656
所以如果你是一个紧凑的身高，也许你有一个视图

1073
00:56:00,725 --> 00:56:02,991
只是完全隐藏在紧凑的高度。

1074
00:56:03,060 --> 00:56:04,993
也许它只出现在正常的高度。

1075
00:56:05,061 --> 00:56:09,097
这是完全可控的使用你的尺寸类。但

1076
00:56:09,165 --> 00:56:12,634
更重要的是你能做的最有力的事情

1077
00:56:12,703 --> 00:56:17,706
是否有你的约束与你的尺寸班绑在一起。

1078
00:56:17,774 --> 00:56:21,543
好吧，因为记得什么在屏幕上放任何东西

1079
00:56:21,612 --> 00:56:24,379
地点？那只是限制，对吧。

1080
00:56:24,448 --> 00:56:27,515
约束是限制视图的因素

1081
00:56:27,584 --> 00:56:30,752
在自动布局中处于特定空间。那么如果可以的话

1082
00:56:30,821 --> 00:56:34,789
使用尺寸等级来控制这些约束。

1083
00:56:34,858 --> 00:56:38,293
然后，您可以将这些视图移到不同的位置

1084
00:56:38,362 --> 00:56:39,561
取决于你的尺码等级。

1085
00:56:39,630 --> 00:56:42,630
就像五点四点，而不是四点五点。要么

1086
00:56:42,699 --> 00:56:45,801
将小翻转标签移到一边。所以

1087
00:56:45,869 --> 00:56:48,303
约束，能够控制你的约束

1088
00:56:48,371 --> 00:56:50,973
大小班真的是这个size class的东西的力量。

1089
00:56:52,075 --> 00:56:52,807
顺便提一句，现在很酷的东西，

1090
00:56:52,876 --> 00:56:54,008
是InterfaceBuilder所支持的

1091
00:56:54,077 --> 00:56:55,377
以图形方式完成所有这些。

1092
00:56:55,446 --> 00:56:56,844
所以你甚至不必在你的代码中这样做。

1093
00:56:56,913 --> 00:56:59,781
你可以用图表完成所有工作。现在有可能找出答案

1094
00:56:59,850 --> 00:57:02,150
你的尺寸类是在代码中。

1095
00:57:02,218 --> 00:57:04,652
例如，如果你想知道你的horizo​​ntalSizeClass，

1096
00:57:04,721 --> 00:57:07,188
无论你是紧凑的还是常规的水平，

1097
00:57:07,257 --> 00:57:10,358
你只需调用这个方法。你访问这个对象

1098
00:57:10,427 --> 00:57:12,294
这是在你的视图控制器称为特征集合。

1099
00:57:12,363 --> 00:57:13,862
它是你所有特质和特征的集合

1100
00:57:13,931 --> 00:57:16,632
你的特质之一是你的水平size class。

1101
00:57:16,700 --> 00:57:19,167
你可以回到枚举。它不是紧凑的就是

1102
00:57:19,236 --> 00:57:22,504
定期。我想这可能是未指定的，但它不会

1103
00:57:22,572 --> 00:57:27,309
实际上是在你跑步的时候。再次，这很少见

1104
00:57:27,377 --> 00:57:29,978
去做这个。我们要在InterfaceBuilder中完成这一切，

1105
00:57:30,047 --> 00:57:32,580
所以这就是所有可视化的东西

1106
00:57:32,649 --> 00:57:34,149
我将不得不在演示中展示给你。

1107
00:57:34,217 --> 00:57:36,884
这是一个演示价值10亿字的地方。

1108
00:57:36,953 --> 00:57:40,255
试图在没有演示的情况下进行解释，几乎是不可能的。

1109
00:57:40,324 --> 00:57:44,225
所以我不会回到幻灯片，所以只是让我

1110
00:57:44,294 --> 00:57:46,528
总结这里我们有一个星期五部分。

1111
00:57:46,596 --> 00:57:49,698
请在星期五来谈谈它的乐器

1112
00:57:49,767 --> 00:57:51,667
是一个性能分析工具。

1113
00:57:51,735 --> 00:57:54,235
尤其是当你在做多线程的时候。

1114
00:57:54,304 --> 00:57:58,540
你想知道需要很长时间才能执行，对吧？

1115
00:57:58,608 --> 00:58:00,742
所以你可以把它放在另一个线程。

1116
00:58:00,811 --> 00:58:02,778
有时很明显，这是一个网络阻塞的事情，

1117
00:58:02,846 --> 00:58:05,447
但其他时间你有东西，你正在计算

1118
00:58:05,516 --> 00:58:08,316
其实原来花了很多时间。所以使用

1119
00:58:08,385 --> 00:58:11,252
仪器找出那是什么会为你节省很多

1120
00:58:11,321 --> 00:58:14,389
把东西放在其他不需要的线程上。只要

1121
00:58:14,458 --> 00:58:17,926
需要的东西。你们都知道唐纳德克努特，

1122
00:58:17,994 --> 00:58:19,994
对？不要过早地优化。

1123
00:58:20,063 --> 00:58:22,798
不要混淆代码以使其运行速度更快，

1124
00:58:22,866 --> 00:58:25,233
除非你确定这实际上运行缓慢。

1125
00:58:25,301 --> 00:58:29,371
那么，你需要仪器来知道这一点。下周，

1126
00:58:29,439 --> 00:58:30,772
我们将深入一些主题，

1127
00:58:30,841 --> 00:58:32,373
表格视图，集合视图，拖动和

1128
00:58:32,442 --> 00:58:36,778
掉落，像那样的东西。好吧，

1129
00:58:36,847 --> 00:58:40,916
所以，让我们去做我们的专注。

1130
00:58:40,984 --> 00:58:44,018
所以这里是集中。这正是我们离开的地方，

1131
00:58:44,087 --> 00:58:46,922
除了两个变化。我做的一个改变是我关掉了

1132
00:58:46,990 --> 00:58:51,025
所有的视图控制器生命周期日志记录，因为如果我们

1133
00:58:51,094 --> 00:58:54,162
需要控制台，我想清楚，所以你可以看到的东西。

1134
00:58:54,231 --> 00:58:55,664
因为我不认为我们需要控制台，但是，嘿，

1135
00:58:55,733 --> 00:58:58,834
你永远不会知道。 Tech和我添加了更多的按钮，

1136
00:58:58,902 --> 00:59:01,403
这曾经有12个，所以我只增加了几行

1137
00:59:01,472 --> 00:59:02,470
这里有20个按钮，所以有20个。

1138
00:59:02,539 --> 00:59:06,141
那么，让我们看看，现在看起来是什么样子

1139
00:59:06,209 --> 00:59:08,076
非常小的变化，我没有改变任何代码或

1140
00:59:08,145 --> 00:59:11,880
类似的东西。好的，所以我们走了，所以

1141
00:59:11,949 --> 00:59:16,484
让我们做运动，像魅力一样工作，好吧。看起来不错。和

1142
00:59:16,553 --> 00:59:20,555
当然，这不太好。

1143
00:59:20,624 --> 00:59:24,225
我添加了更多的按钮，但它导致了翻转计数。

1144
00:59:24,294 --> 00:59:27,695
翻转计数在这里底部翻转八，

1145
00:59:27,764 --> 00:59:30,865
它完全被推开了。并看看按钮，

1146
00:59:30,934 --> 00:59:33,402
他们几乎不足以容纳表情符号了。

1147
00:59:33,470 --> 00:59:36,003
还有丑陋的按钮，它们非常平坦。

1148
00:59:36,072 --> 00:59:37,772
在尺寸上有很多空白，

1149
00:59:37,841 --> 00:59:41,910
这个UI看起来很糟糕。所以我们要解决这个UI和

1150
00:59:41,978 --> 00:59:45,313
做两件事。其中一个，我们会做五个和

1151
00:59:45,382 --> 00:59:48,950
因为回到这里只有四个景观，

1152
00:59:49,018 --> 00:59:51,586
我们喜欢这些漂亮的方形按钮。我们不想要

1153
00:59:51,654 --> 00:59:54,789
在这里切换到五个和四个，然后我们开始

1154
00:59:54,858 --> 00:59:56,925
这里看起来不好。所以这是我们要做的一件事。

1155
00:59:56,993 --> 01:00:00,328
另一件事是我们要移动这个Flips的东西。

1156
01:00:00,397 --> 01:00:03,564
在这里，在这边的景观，在一边。

1157
01:00:03,633 --> 01:00:04,465
这将有助于按钮

1158
01:00:04,534 --> 01:00:07,401
更广场，更有效地利用空间

1159
01:00:07,470 --> 01:00:10,671
这边。所以这些是我们要做的两件事情，

1160
01:00:10,740 --> 01:00:12,940
好吧？那么我们如何做到这一点？

1161
01:00:13,009 --> 01:00:15,210
我们该怎么做？那么，我们需要一个战略

1162
01:00:15,279 --> 01:00:18,580
做这一切。而且我的策略正在进行，而且

1163
01:00:18,649 --> 01:00:20,782
请记住，我们并没有真的，没有看过很多。

1164
01:00:20,851 --> 01:00:22,884
但请记住，您可以在这里查看您的所有设备，

1165
01:00:22,953 --> 01:00:25,687
包括他们是否在风景或肖像。

1166
01:00:25,756 --> 01:00:28,623
所以我在这里看到这个景观。在这里

1167
01:00:28,692 --> 01:00:30,926
我的问题在哪里，它是四分之一，五分之一。

1168
01:00:30,994 --> 01:00:33,595
我希望它是五个，四个下来。所以

1169
01:00:33,664 --> 01:00:36,431
我的策略是，我实际上会增加四个

1170
01:00:36,499 --> 01:00:40,601
按钮在这里。然后当我在风景中时，我会

1171
01:00:40,670 --> 01:00:45,507
隐藏这四个按钮。当我回到肖像时，

1172
01:00:45,575 --> 01:00:48,609
我将隐藏我添加的新按钮。所以我是

1173
01:00:48,678 --> 01:00:51,946
会有24个按钮，但其中4个将隐藏在一个或多个按钮中

1174
01:00:52,015 --> 01:00:54,616
另一个。看到这个策略？所以这只是，

1175
01:00:54,685 --> 01:00:56,718
这是做这件事的一个策略。这是一个简单的策略。

1176
01:00:56,786 --> 01:00:59,620
所以我们要从一个简单的策略开始，好吗？

1177
01:00:59,689 --> 01:01:01,423
现在要做到这一点，所以你可以看到我正在做的更多。

1178
01:01:01,424 --> 01:01:03,158
所以让我们来做。

1179
01:01:03,227 --> 01:01:06,627
在这里看到这个小约束？这是

1180
01:01:06,696 --> 01:01:09,330
把这个限制在这个右边。

1181
01:01:09,399 --> 01:01:12,400
我会暂时删除这个约束

1182
01:01:12,468 --> 01:01:16,404
在这里，所以它给我一些工作空间。所以我只是

1183
01:01:16,472 --> 01:01:19,106
会删除它，所以它不会固定在那个边缘

1184
01:01:19,175 --> 01:01:22,343
它移动了。现在我要添加这四个按钮。

1185
01:01:22,412 --> 01:01:24,312
请记住，我说过我会在旁边放四个按钮。所以

1186
01:01:24,381 --> 01:01:27,214
我只是要复制并粘贴其中一个现有的按钮。

1187
01:01:27,283 --> 01:01:29,483
事实上，我会粘贴四次。和

1188
01:01:29,552 --> 01:01:33,054
我要选择所有这些。我要到这里来

1189
01:01:33,123 --> 01:01:36,424
嵌入和堆叠视图。我要去

1190
01:01:36,493 --> 01:01:40,094
检查堆栈视图。给它一些间距。

1191
01:01:40,163 --> 01:01:42,297
我不希望它倾斜。我希望它被填满。

1192
01:01:42,366 --> 01:01:43,632
好吧，我希望它被平等地填补。

1193
01:01:43,700 --> 01:01:46,767
我希望所有的按钮都是一样的高度，好吗？

1194
01:01:46,836 --> 01:01:48,536
确保我们将它连接到我们的卡片按钮阵列。

1195
01:01:48,537 --> 01:01:50,237
我们继续吧

1196
01:01:50,307 --> 01:01:55,142
所以让我们来做。控制拖动，有一个和

1197
01:01:55,211 --> 01:01:59,313
有两个，有三个，

1198
01:01:59,382 --> 01:02:05,253
让我起来一点点，对不起，有四个，

1199
01:02:05,321 --> 01:02:09,991
好的。所以我们有内卡按钮，现在我们需要这些按钮

1200
01:02:10,059 --> 01:02:13,495
四人入党。好的，我希望他们加入这里

1201
01:02:13,563 --> 01:02:16,597
我将选择这些堆栈视图和

1202
01:02:16,666 --> 01:02:22,270
我要将它们嵌入到堆栈视图中。我们会继续前进

1203
01:02:22,339 --> 01:02:24,939
在那里放一些间距，这样我们可以看到更好一点。

1204
01:02:25,008 --> 01:02:26,574
在这里，我不希望他们在底部对齐，

1205
01:02:26,642 --> 01:02:31,278
我希望他们填补，但是，我没有一个平等填补。

1206
01:02:31,347 --> 01:02:33,081
为什么我不想平等地填充？这将使这一个堆栈

1207
01:02:33,082 --> 01:02:34,816
你有看到

1208
01:02:34,885 --> 01:02:38,420
视图，宽度与整个大堆栈视图相同。所以

1209
01:02:38,488 --> 01:02:40,889
那不会很宽，而且会很小

1210
01:02:40,958 --> 01:02:43,925
我希望这个堆栈视图是相同的宽度

1211
01:02:43,993 --> 01:02:47,262
作为所有这些。那么我该怎么做。好，

1212
01:02:47,331 --> 01:02:50,531
我将从这个堆栈视图控制拖动

1213
01:02:50,600 --> 01:02:54,369
到这里的其中一个按钮。并说请让他们

1214
01:02:54,438 --> 01:02:57,905
等宽，这是完全合法的做到这一点，

1215
01:02:57,974 --> 01:03:01,276
有一个视图，只是说，请始终受到约束。

1216
01:03:01,344 --> 01:03:03,811
这些都是制约因素，限制你自己

1217
01:03:03,880 --> 01:03:06,514
与此处的宽度相同。好的

1218
01:03:06,583 --> 01:03:10,018
这将确保即使这变得越来越宽

1219
01:03:10,087 --> 01:03:12,854
行的宽度始终与其他所有行的宽度相同

1220
01:03:12,923 --> 01:03:17,358
这里。所以我在这里创建了这个新的堆栈视图。这个

1221
01:03:17,427 --> 01:03:21,128
堆栈视图没有限制，对吧？如果我们看看这里，

1222
01:03:21,197 --> 01:03:24,632
没有限制，因为我刚刚创建它。所以

1223
01:03:24,701 --> 01:03:31,305
我真的希望它缩小以限制边缘

1224
01:03:31,374 --> 01:03:33,841
这里。我真正想要的是我想要它约束

1225
01:03:33,910 --> 01:03:34,843
在这里和顶部

1226
01:03:34,911 --> 01:03:37,679
到其他三条边上的所有安全区域。所以

1227
01:03:37,747 --> 01:03:40,848
我会再试一次。记住这个pin在这里？

1228
01:03:40,917 --> 01:03:44,752
所以我只是想尝试把一个八点针和

1229
01:03:44,821 --> 01:03:46,687
它会这样做到最近的邻居。

1230
01:03:46,756 --> 01:03:48,923
我希望它会选择最近的邻居，

1231
01:03:48,992 --> 01:03:53,194
所有方面。让我们看看它的作用。好，

1232
01:03:53,263 --> 01:03:55,764
也许那工作。关了。我们看看吧。

1233
01:03:55,832 --> 01:03:59,500
它选择了顶层空间来监视。我不想那样。

1234
01:03:59,569 --> 01:04:02,470
我想要那里的安全区域。然后追踪安全区域。

1235
01:04:02,539 --> 01:04:05,673
是的，离开安全区底部的倒数。

1236
01:04:05,742 --> 01:04:07,375
喔！这件事做得很好，但是

1237
01:04:07,444 --> 01:04:08,910
当然这个父视图是错误的。

1238
01:04:08,979 --> 01:04:10,578
所以让我们提醒自己我们如何解决这个问题。

1239
01:04:10,647 --> 01:04:12,013
我们去看我们的文档大纲。

1240
01:04:12,082 --> 01:04:13,381
让我们找到它，就在这里。

1241
01:04:13,449 --> 01:04:16,818
堆叠，堆叠视图顶部视图加上8.和

1242
01:04:16,886 --> 01:04:19,787
请记住，我们不希望那个父视图。我们想要它

1243
01:04:19,856 --> 01:04:24,726
这里到安全区域。所以现在我们已经有了这个设置。

1244
01:04:24,795 --> 01:04:27,662
现在问题在于我们有24个按钮

1245
01:04:27,730 --> 01:04:31,099
在这里展示。查看全部24个按钮？这不好。

1246
01:04:31,167 --> 01:04:34,902
所以我不希望这四个按钮在横向上显示。

1247
01:04:34,971 --> 01:04:38,273
那我该怎么做？我只是要选择这个堆栈视图，

1248
01:04:38,341 --> 01:04:41,743
我会让它在风景中消失，但是

1249
01:04:41,812 --> 01:04:43,078
不在风景中。

1250
01:04:43,146 --> 01:04:46,981
当我处于紧凑的垂直尺寸时它会消失

1251
01:04:47,049 --> 01:04:52,854
类。事实证明，这只是iPhone中的风景。

1252
01:04:52,923 --> 01:04:56,024
那么我们该怎么做？那么，如果我们检查这个堆栈视图，

1253
01:04:56,092 --> 01:04:57,592
我只是去正常的属性和

1254
01:04:57,660 --> 01:05:00,628
光谱在这里。看看所有这些小加号。

1255
01:05:00,697 --> 01:05:02,297
你在这里看到这些加号？

1256
01:05:02,366 --> 01:05:03,998
另外，再加上，你下去，

1257
01:05:04,067 --> 01:05:08,269
加。这些都是选定事物的所有属性，

1258
01:05:08,338 --> 01:05:10,604
这可以根据尺寸等级而变化。

1259
01:05:10,673 --> 01:05:14,775
所以不只是它是否隐藏，这是我的

1260
01:05:14,844 --> 01:05:18,012
想在这里。你看到它隐藏在这里。有了

1261
01:05:18,080 --> 01:05:21,115
一个好处。而且还有背景颜色之类的东西。或为

1262
01:05:21,184 --> 01:05:24,318
堆栈视图，甚至对齐，分布，

1263
01:05:24,387 --> 01:05:27,321
当你去一个不同的班级时，你可以有这个改变

1264
01:05:27,390 --> 01:05:30,491
尺寸。这很酷很酷。所以我们会做一个简单的

1265
01:05:30,560 --> 01:05:33,394
这是隐藏的。而你变化的方式只是按下

1266
01:05:33,463 --> 01:05:36,431
加号。当按下加号时，它说，

1267
01:05:36,500 --> 01:05:39,400
你想根据大小类别来改变隐藏。好，

1268
01:05:39,469 --> 01:05:42,537
你想要改变什么尺寸的课程？那么，就我而言，

1269
01:05:42,605 --> 01:05:44,472
它的高度很紧凑。我不在乎宽度。

1270
01:05:44,540 --> 01:05:47,608
所以我打算将Width设置为Any。任何宽度都可以。但

1271
01:05:47,677 --> 01:05:51,112
身高，紧凑，是的。我想要一个紧凑的变化。这个色域，

1272
01:05:51,181 --> 01:05:55,850
顺便说一下，你根据颜色能力而变化

1273
01:05:55,919 --> 01:05:58,652
您正在使用的设备。我们没有这样做。是真的

1274
01:05:58,721 --> 01:06:01,556
本身并不是布局的东西，但它仍然可以变化。所以

1275
01:06:01,624 --> 01:06:03,691
我会点击添加变化。看看会发生什么

1276
01:06:03,759 --> 01:06:07,028
在这里，当我点击添加变化。看，我们有

1277
01:06:07,097 --> 01:06:09,263
一个新的隐藏。我们有这个隐藏和另一个隐藏。

1278
01:06:09,332 --> 01:06:14,135
这个是HC，代表高度紧凑。和

1279
01:06:14,204 --> 01:06:17,271
现在它没有隐藏在高度紧凑的，但是

1280
01:06:17,340 --> 01:06:22,243
如果我打开这个，呜呼！看，它隐藏了整个

1281
01:06:22,312 --> 01:06:26,581
堆栈视图，因为我现在在紧凑的高度。如果我走了

1282
01:06:26,650 --> 01:06:31,118
回到这里我的肖像模式，你可以看到它

1283
01:06:31,187 --> 01:06:35,089
不隐藏。它仍然在那里。看到四个，五个下来。

1284
01:06:35,158 --> 01:06:39,360
它仍然在那里。但是现在我想让这个隐藏起来。所以

1285
01:06:39,429 --> 01:06:43,097
我要点击这个堆栈视图，选择整个堆栈

1286
01:06:43,166 --> 01:06:47,601
在这里查看，如果我可以。不，很难让我放大

1287
01:06:47,670 --> 01:06:52,173
一点。选择整个堆栈视图。

1288
01:06:52,242 --> 01:06:55,176
在这里我会做同样的事情。我是肖像模式

1289
01:06:55,244 --> 01:06:57,946
在这里，我会添加另一个方差。

1290
01:06:58,014 --> 01:07:02,083
这是任何宽度和常规高度的差异。和

1291
01:07:02,151 --> 01:07:06,955
在这种情况下，这个是隐藏的。所以瞧，

1292
01:07:07,023 --> 01:07:10,458
看看那个，四宽五高，在这里，

1293
01:07:11,861 --> 01:07:17,132
五宽四高。让我们看看这是否有效。

1294
01:07:17,200 --> 01:07:19,567
这不太可能会奏效，但它会接近。

1295
01:07:24,374 --> 01:07:26,841
好吧，我们走吧。我们去Sports吧。

1296
01:07:26,909 --> 01:07:29,344
看看这个，五宽四高。优秀，

1297
01:07:29,412 --> 01:07:32,914
让我们在这里选择一些东西。现在让我们旋转。

1298
01:07:32,983 --> 01:07:36,550
呐，看起来不错，让我们在这里挑选一些东西。

1299
01:07:36,619 --> 01:07:43,591
旋转，哎呀，发生了什么事？看到了吗？他们走了。

1300
01:07:43,660 --> 01:07:47,161
我挑选了隐藏在这一行的两个。所以

1301
01:07:47,230 --> 01:07:50,464
当我们过去他们被隐藏起来时，它是非常有意义的。所以

1302
01:07:50,533 --> 01:07:53,534
我该如何解决这个问题？那么，这是一个笨拙的用户界面，

1303
01:07:53,603 --> 01:07:56,503
因为我们正在使用这些收藏集来收集

1304
01:07:56,572 --> 01:07:58,372
所有这些卡片。但我可以做一个窍门

1305
01:07:58,441 --> 01:08:00,407
真的很容易回到我的代码在这里

1306
01:08:00,476 --> 01:08:02,610
浓缩视图控制器。和

1307
01:08:02,679 --> 01:08:05,279
就在我正在做cardButtons的任何地方，看着

1308
01:08:05,348 --> 01:08:07,981
cardButtons，而不是看所有的24个cardButtons，

1309
01:08:08,050 --> 01:08:10,484
我只会看看在任何给定的20可见

1310
01:08:10,553 --> 01:08:13,420
时间。所以我要在这里创建一个小的私有变量

1311
01:08:13,489 --> 01:08:19,193
visibleCardButtons。这也会是一系列UIButtons。

1312
01:08:19,262 --> 01:08:22,530
事实上，它甚至会被隐式解开，而且是

1313
01:08:22,598 --> 01:08:25,566
会被计算出来。我只是要回我的cardButtons，

1314
01:08:25,635 --> 01:08:28,769
如果他们已经设置。我要过滤它们

1315
01:08:28,838 --> 01:08:31,873
按钮superview是可见的。

1316
01:08:31,942 --> 01:08:33,807
因为如果按钮的父视图可见，

1317
01:08:33,876 --> 01:08:35,009
那么它是可见的，对吧？

1318
01:08:35,078 --> 01:08:39,848
所以我会说！$ 0.superview！.isHidden。

1319
01:08:40,950 --> 01:08:42,984
所以这些是可见的硬按钮。

1320
01:08:43,053 --> 01:08:45,453
这样做有点脆弱，但是

1321
01:08:45,522 --> 01:08:48,756
我们知道我们所有的按钮都是堆叠视图，所以

1322
01:08:48,824 --> 01:08:51,025
这没关系。可能会找到一个更好的方法

1323
01:08:51,094 --> 01:08:53,093
以计算它是否实际在屏幕上。

1324
01:08:53,162 --> 01:08:56,864
但无论如何，我现在只会替换我的任何地方

1325
01:08:56,933 --> 01:09:00,034
使用cardButtons与可见卡片按钮，所以在这里，

1326
01:09:00,102 --> 01:09:02,870
在这里，在这里。我只是在这里找到并替换。

1327
01:09:02,939 --> 01:09:08,376
糊。所以现在，这将解决这个问题，我希望。

1328
01:09:08,445 --> 01:09:13,480
让我们来找出答案。好吧，它再次工作。

1329
01:09:13,549 --> 01:09:16,884
好的，让我们回到这里。这些是危险的。

1330
01:09:16,952 --> 01:09:22,357
我们试试吧，呜呼，不。这怎么可能没有奏效？

1331
01:09:22,425 --> 01:09:26,493
该代码无误。那么，这里的问题在这里，

1332
01:09:26,562 --> 01:09:29,864
当我来回切换时，所有这些视图都会得到

1333
01:09:29,933 --> 01:09:32,666
关闭，右键，发生视图布局。

1334
01:09:32,735 --> 01:09:37,038
但没有任何事情会导致他们重新出现，重新设置

1335
01:09:37,106 --> 01:09:40,274
我的模型。所以他们都还有按钮

1336
01:09:40,343 --> 01:09:42,977
他们之前是什么样的。所以我需要做的是每一次

1337
01:09:43,046 --> 01:09:45,146
转发我这样的子视图

1338
01:09:45,215 --> 01:09:48,415
需要从模型更新我的视图。那么，猜猜谁来了

1339
01:09:48,484 --> 01:09:52,886
在这里拯救？这是视图控制器的生命周期，对吗？

1340
01:09:52,955 --> 01:09:56,190
vieweDidLayoutSubviews中的viewDidLayoutSubviews。

1341
01:09:56,259 --> 01:09:58,927
我只是想从我的模型中更新我的视图。

1342
01:10:08,437 --> 01:10:10,538
我们有运动。现在我们完成了这些，哎呀，

1343
01:10:10,606 --> 01:10:13,608
这是相反的方式，所以我们走这条路。看起来工作

1344
01:10:13,676 --> 01:10:15,876
我们很好。现在我们可以得到这些违规的和

1345
01:10:15,945 --> 01:10:18,479
他们在那里。现在他们在随机的地方，因为我们是

1346
01:10:18,547 --> 01:10:22,116
使用这个费用收集，但至少它的工作。

1347
01:10:22,185 --> 01:10:25,653
现在我们的脸在哪里，

1348
01:10:25,722 --> 01:10:28,623
我们的翻转数字？那里没有翻转。

1349
01:10:28,692 --> 01:10:30,691
在下面的标签栏下面按下。

1350
01:10:30,760 --> 01:10:32,393
我们如何解决这个问题？好吧，

1351
01:10:32,461 --> 01:10:34,729
我们会以不同的方式解决这个问题，只是为了向你展示

1352
01:10:34,797 --> 01:10:37,665
还有其他的方法来做这些事情。我们会怎样

1353
01:10:37,734 --> 01:10:41,402
是的，我们要移动这个翻转东西在这里。

1354
01:10:41,470 --> 01:10:43,771
现在你可以想象，让我们创建另一个和

1355
01:10:43,840 --> 01:10:46,273
然后做他们两个隐藏。是的，

1356
01:10:46,342 --> 01:10:49,076
我们可以做到这一点，但那种开始变得荒谬可笑，

1357
01:10:49,145 --> 01:10:51,812
因为现在我必须有另一个outlet

1358
01:10:51,881 --> 01:10:54,582
一。多么痛苦。我真的只想搬这个。

1359
01:10:54,651 --> 01:10:58,853
那么，这到底是什么原因呢？是什么让它在这里

1360
01:10:58,922 --> 01:11:01,823
这是对它的限制，它与它相一致

1361
01:11:01,891 --> 01:11:03,891
中心，它挂在底部，

1362
01:11:03,960 --> 01:11:07,094
顶部空间挂钩到堆栈视图。

1363
01:11:07,163 --> 01:11:10,030
这就是为什么在这里。所以如果我能改变

1364
01:11:10,099 --> 01:11:13,033
这些限制，我可以让它在这里结束。和

1365
01:11:13,102 --> 01:11:16,637
只要这些限制只发生在高度紧凑的情况下，

1366
01:11:16,706 --> 01:11:20,441
呜呼，它会切换，对吧？所以这就是我们要做的。

1367
01:11:20,509 --> 01:11:22,075
现在我们该怎么做？

1368
01:11:22,144 --> 01:11:25,680
好的，我们所有的限制条件都没有小小的优势，

1369
01:11:25,748 --> 01:11:27,081
我们怎么做到这一点？好，

1370
01:11:27,150 --> 01:11:29,383
我们在这里用这个神奇的按钮来做到这一点。

1371
01:11:29,452 --> 01:11:32,219
你看到这个变化的特质？我们甚至不需要这个。

1372
01:11:32,288 --> 01:11:35,323
实际上，我们可能可以，哎呀，我们可以使用，

1373
01:11:35,392 --> 01:11:37,391
这里甚至不需要文档大纲。所以

1374
01:11:37,459 --> 01:11:40,528
你真的可以看到这里发生了什么，对吧？所以在这里

1375
01:11:40,596 --> 01:11:43,397
我正在工作，如果我点击这个Vary for Traits按钮

1376
01:11:43,466 --> 01:11:46,667
就在这里，它会说，好的，你会进入一种模式

1377
01:11:46,736 --> 01:11:49,403
你所做的所有约束都是唯一的

1378
01:11:49,471 --> 01:11:54,342
适用于你所在的东西。那么让我们来做吧，准备好了吗？

1379
01:11:54,410 --> 01:11:57,211
性别不同，它说你想要改变的宽度或

1380
01:11:57,280 --> 01:12:00,381
身高还是两者？这是对我来说很重要的高度，

1381
01:12:00,449 --> 01:12:03,651
哇，看看那个吧。它变成了深蓝色。所以

1382
01:12:03,720 --> 01:12:06,687
那深蓝色警告你，你正在编辑

1383
01:12:06,756 --> 01:12:10,524
只有在紧凑的高度约束。事实上，

1384
01:12:10,593 --> 01:12:14,761
它只是在这里向我展示紧凑型高度装置。所以

1385
01:12:14,830 --> 01:12:16,397
那蓝色的警告是一个警告，

1386
01:12:16,466 --> 01:12:20,067
确保你注意到这一点。好，那我该怎么做

1387
01:12:20,135 --> 01:12:22,703
Flip移动？好吧，我得把所有的东西都拿走

1388
01:12:22,772 --> 01:12:24,505
正在限制翻转在这里和

1389
01:12:24,574 --> 01:12:27,842
摆脱他们。所以我只是想过去这里

1390
01:12:27,910 --> 01:12:31,111
删除所有这些约束。如果我过去了

1391
01:12:31,180 --> 01:12:34,582
以我的文档大纲在这里，我看我的约束，

1392
01:12:34,650 --> 01:12:36,851
你会发现他们实际上并没有被删除。

1393
01:12:36,919 --> 01:12:39,854
看看它们是如何变灰的。为什么他们不被删除？

1394
01:12:39,922 --> 01:12:42,323
因为我只删除了他们这个size class。

1395
01:12:42,391 --> 01:12:45,492
他们仍然存在于其他size class。所以这就是为什么

1396
01:12:45,561 --> 01:12:48,196
他们只在这里看到时才变成灰色。

1397
01:12:48,264 --> 01:12:50,264
但它很好，它释放了翻转。

1398
01:12:50,333 --> 01:12:53,134
你看，Flips不再被束缚在任何东西上

1399
01:12:53,202 --> 01:12:56,737
顺便说一句，当然，这个小约束是正确的

1400
01:12:56,806 --> 01:13:03,978
在这里，如果我可以点击它，这里的小I型光束，

1401
01:13:04,046 --> 01:13:07,614
这也得走了。因为这不再

1402
01:13:07,683 --> 01:13:11,285
将被限制到边缘，它会

1403
01:13:11,354 --> 01:13:15,790
被限制在这个Flips事物的边缘，好吗？

1404
01:13:15,858 --> 01:13:19,126
这在这里会受到限制。所以，让我们继续前进

1405
01:13:19,195 --> 01:13:22,763
使用Ctrl +拖动把这个东西垂直居中。

1406
01:13:22,832 --> 01:13:25,933
我们还可以使用Ctrl +拖动将其挂接到尾部

1407
01:13:26,002 --> 01:13:29,103
空间，虽然我不希望它是11.667。

1408
01:13:29,172 --> 01:13:31,372
我们会在那里做我们的标准8。

1409
01:13:31,441 --> 01:13:33,441
然后让我们继续拥有这个人。

1410
01:13:33,509 --> 01:13:35,542
我们将为他使用PIN菜单，并且

1411
01:13:35,611 --> 01:13:39,447
有他的右边缘有最近的邻居，

1412
01:13:39,516 --> 01:13:42,016
这恰好是翻转。而且，

1413
01:13:42,084 --> 01:13:45,252
我们将再次确定这个权利的底部

1414
01:13:45,321 --> 01:13:49,556
也是距离其最近的邻居的8。

1415
01:13:49,625 --> 01:13:53,661
现在，我刚才所有的这些限制都仅限于此

1416
01:13:53,730 --> 01:13:57,264
高度紧凑。但现在我完成了不同的事情。

1417
01:13:57,333 --> 01:14:01,903
现在，如果我回去，你会看到，看起来，它没有效果

1418
01:14:01,971 --> 01:14:04,838
在这里。翻转仍然在底部

1419
01:14:04,907 --> 01:14:06,874
在这里它在两侧。所以让我们继续并运行。

1420
01:14:15,551 --> 01:14:16,634
让我们去确保它仍然以旧的方式工作。

1421
01:14:16,635 --> 01:14:17,718
首先，

1422
01:14:17,787 --> 01:14:20,921
所以这里是翻转，工作正常，它停留在那里。现在让我们来

1423
01:14:20,990 --> 01:14:25,459
过去在这里做。这一个，哇，这是一种

1424
01:14:25,527 --> 01:14:28,629
跳了一下。为什么会发生？

1425
01:14:28,698 --> 01:14:32,900
那么，因为14,15,11，那么宽度是如此不同

1426
01:14:32,968 --> 01:14:35,569
该标签有点改变它的宽度。

1427
01:14:35,638 --> 01:14:40,574
如果，而不是做翻转：14，

1428
01:14:40,643 --> 01:14:44,378
如果我让Flips成为多线。

1429
01:14:44,447 --> 01:14:46,781
记得我们之前做过的多行事情吗？和

1430
01:14:46,849 --> 01:14:53,720
而不是翻转：0，如果我做翻转返回0？

1431
01:14:53,789 --> 01:14:57,091
这使得更多的空间，也是这个0可能是100和

1432
01:14:57,160 --> 01:15:00,094
它仍然不会在宽度上左右摇摆。

1433
01:15:00,162 --> 01:15:01,528
那真的很酷。

1434
01:15:01,597 --> 01:15:05,165
不幸的是，我刚刚编辑过，而且也是

1435
01:15:05,234 --> 01:15:08,736
在这里会变得真实，我不想在这里结束。所以

1436
01:15:08,804 --> 01:15:11,338
我怎么会有一些不同的东西

1437
01:15:11,407 --> 01:15:13,907
在这两个由代码驱动的size class中？

1438
01:15:13,976 --> 01:15:16,744
因为这是决定这些事情的代码。

1439
01:15:16,813 --> 01:15:19,246
那么，我们也可以用代码来做到这一点，让我们跳过

1440
01:15:19,315 --> 01:15:22,282
这里真的很快。这里是我们做翻转的地方，

1441
01:15:22,351 --> 01:15:28,322
我只是会说traitCollection.verticalSizeC-

1442
01:15:28,391 --> 01:15:32,793
lass = .compact。然后我会做一件事或一件事

1443
01:15:32,862 --> 01:15:36,429
如果它是正常的，那么我会做这件旧事。而事情

1444
01:15:36,498 --> 01:15:41,669
我要紧凑地做，我会有回车

1445
01:15:41,738 --> 01:15:44,638
而不是冒号。我会运行这个和

1446
01:15:44,707 --> 01:15:48,776
那么我们会看到，这不起作用，但我们是

1447
01:15:48,845 --> 01:15:52,345
时间紧迫，我可以听到门外有1000人。

1448
01:15:52,414 --> 01:15:54,281
所以我会告诉你另外一件事，

1449
01:15:54,350 --> 01:15:57,251
这就是说，如果我们去了那里就行不通了，好吧。

1450
01:15:57,320 --> 01:15:58,719
当我们来回切换时，

1451
01:15:58,788 --> 01:16:01,455
它不会切换。这是因为当切换回来

1452
01:16:01,524 --> 01:16:04,090
我们需要得到我们的通知

1453
01:16:04,159 --> 01:16:06,827
特征集合发生了变化。有一个视图控制器的生活

1454
01:16:06,896 --> 01:16:09,596
这是我上次没有提到的循环方法

1455
01:16:09,665 --> 01:16:11,298
你不了解特质。但现在我要告诉你，

1456
01:16:11,367 --> 01:16:20,073
它被称为traitCollectionDidChange。和

1457
01:16:20,142 --> 01:16:22,810
每当你的特征集合发生变化时都会调用它，

1458
01:16:22,878 --> 01:16:25,212
正确，每次你的size class变化。所以

1459
01:16:25,281 --> 01:16:28,015
这里我只是要更新我的翻盖计数标签。

1460
01:16:29,085 --> 01:16:30,317
因为我的翻盖计数标签，

1461
01:16:30,386 --> 01:16:31,651
如果你看看它的代码，

1462
01:16:31,720 --> 01:16:34,521
它取决于特征集合。所以当然每一个

1463
01:16:34,590 --> 01:16:37,558
时间改变我需要更新它，对吧？

1464
01:16:46,803 --> 01:16:48,636
所以，我们走了。我们会再次去体育，看看，

1465
01:16:48,704 --> 01:16:49,970
这在这里工作得很好。

1466
01:16:50,039 --> 01:16:52,873
它不会再跳来跳去，因为它在下面。

1467
01:16:52,942 --> 01:16:56,444
现在我们来看看这里。我们得到了colon。呜，

1468
01:16:56,512 --> 01:17:03,050
看那个。我们会回到这里。这就对了。

1469
01:17:03,119 --> 01:17:06,554
我们在人群涌入并践踏我们之前完成了。和

1470
01:17:06,622 --> 01:17:08,055
我会在星期一见到你。记住你的功课，

1471
01:17:08,123 --> 01:17:11,192
将于周一在周一的讲座之前到期。

1472
01:17:11,260 --> 01:17:12,243
星期一你会有新的家庭作业，或者

1473
01:17:12,244 --> 01:17:13,227
希望，

1474
01:17:13,295 --> 01:17:14,194
也许下周三。

1475
01:17:14,263 --> 01:17:15,763
让我们看看周末会发生什么。

1476
01:17:16,933 --> 01:17:17,564
>>更多，

1477
01:17:17,633 --> 01:17:26,139
请访问我们的stanford.edu

