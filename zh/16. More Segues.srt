1
00:00:00,401 --> 00:00:04,702
[音乐]

2
00:00:04,771 --> 00:00:09,841
斯坦福大学。 >>欢迎来到讲座编号

3
00:00:09,910 --> 00:00:14,413
2017年秋季，斯坦福CS193P 16台18。

4
00:00:14,481 --> 00:00:16,548
今天我们有一个主题，但它是一个很大的主题，

5
00:00:16,617 --> 00:00:18,883
它的很多不同的部分是segues。

6
00:00:18,952 --> 00:00:21,487
这是你需要知道的最后一件重要事情

7
00:00:21,555 --> 00:00:24,323
从结构上来说能够构建复杂的应用程序。

8
00:00:24,391 --> 00:00:26,524
所以我们要直接进入这里的第一个，

9
00:00:26,593 --> 00:00:29,661
这是模态Segues。你其实已经知道

10
00:00:29,729 --> 00:00:32,631
因为在我们的表情符号艺术视图和

11
00:00:32,700 --> 00:00:36,134
在你的作业中，你实际上呈现了你的文档视图

12
00:00:36,203 --> 00:00:41,306
模态。所以一个模态视图控制器是需要的

13
00:00:41,375 --> 00:00:44,008
在整个屏幕上，通常它从底部向上滑动，

14
00:00:44,077 --> 00:00:47,111
虽然不总是。在这里我有一个例子

15
00:00:47,180 --> 00:00:51,016
某种联系人保持应用程序，它没有+

16
00:00:51,085 --> 00:00:53,852
按钮在右上角，当我按下时，它谦虚

17
00:00:53,920 --> 00:00:57,422
继续或模式地呈现另一个视图控制器

18
00:00:57,491 --> 00:01:00,492
完全不同的视图控制器。这是

19
00:01:00,561 --> 00:01:03,195
不是导航控制器，而是没有后退按钮

20
00:01:03,264 --> 00:01:05,563
你可以看到那里有一个取消按钮。和

21
00:01:05,632 --> 00:01:08,399
我可以呈现这个视图控制器，然后呈现

22
00:01:08,468 --> 00:01:10,735
另一个视图控制器，如果我想。例如，

23
00:01:10,804 --> 00:01:13,972
这个新添加的照片按钮在这个新的联系人MVC中，

24
00:01:14,041 --> 00:01:16,975
如果按下它，它会显示另一个模式视图控制器

25
00:01:17,044 --> 00:01:18,510
在另一个之上。

26
00:01:18,579 --> 00:01:21,212
再次，没有后退按钮，这不是一个导航控制器。

27
00:01:21,281 --> 00:01:23,415
我们只是模式地呈现这些东西。

28
00:01:23,484 --> 00:01:27,085
我们称之为模态，因为该应用程序现在处于一种模式，

29
00:01:27,154 --> 00:01:32,724
本质上，它只能做这个MVC。所以我们离开了

30
00:01:32,793 --> 00:01:35,327
这当然是因为不得不关闭这些视图控制器

31
00:01:35,395 --> 00:01:37,795
就像我们对文档和表情符号艺术所做的一样。

32
00:01:37,864 --> 00:01:41,599
所以我要取消这个，回到前一个。

33
00:01:41,668 --> 00:01:45,137
我取消这一个，它会回到它的前一个，

34
00:01:45,206 --> 00:01:47,706
我们又回到了我们开始的地方。

35
00:01:47,774 --> 00:01:49,674
所以这就是模态视图控制器非常简单。

36
00:01:49,743 --> 00:01:52,110
现在，我等待告诉你关于模态视图控制器

37
00:01:52,179 --> 00:01:54,379
直到真正到季度末，

38
00:01:54,448 --> 00:01:57,382
因为这真的不是你想成为的主要方式

39
00:01:57,451 --> 00:02:00,986
把视图控制器。导航控制器和

40
00:02:01,054 --> 00:02:04,423
分割视图控制器是一种更好的交互方式

41
00:02:04,491 --> 00:02:07,058
与用户，这是因为这种模式的业务。

42
00:02:07,127 --> 00:02:09,193
你并不是真的想把你的用户置于某种情况下

43
00:02:09,262 --> 00:02:11,129
他们只能做你告诉他们做的事情。

44
00:02:11,198 --> 00:02:13,165
他们喜欢灵活地导航，

45
00:02:13,234 --> 00:02:15,433
改变主意，去别的地方。和

46
00:02:15,502 --> 00:02:17,402
他们不能这样做，如果你把它们放在这个模式下，

47
00:02:17,471 --> 00:02:21,039
他们所能做的就是取消它，回到那个世界。所以

48
00:02:21,108 --> 00:02:24,909
我通常建议考虑另一种方式来放置MVC

49
00:02:24,978 --> 00:02:29,715
在你诉诸模态之前先做好准备。那么我们该如何设置

50
00:02:29,783 --> 00:02:33,085
模态segue？与我们所有其他segue完全一样，

51
00:02:33,153 --> 00:02:36,187
我们只是控制拖动。当然，我们可以介绍它

52
00:02:36,256 --> 00:02:39,090
从代码以及使用标识符执行segue。

53
00:02:39,159 --> 00:02:41,493
我们甚至在上一次讲座中了解到，

54
00:02:41,562 --> 00:02:45,029
那里如何呈现一个视图控制器，而不是一个segue，

55
00:02:45,098 --> 00:02:47,932
以一种模态的方式，这是现在的方法

56
00:02:48,001 --> 00:02:51,970
在视图控制器中。这就是我们如何得到我们的表情符号艺术文件

57
00:02:52,038 --> 00:02:55,173
当它被选中时在屏幕上，所以你知道所有这一切。

58
00:02:55,242 --> 00:02:59,177
但模态segue和模态演示类似

59
00:02:59,245 --> 00:03:02,781
基本的继续。这又是我只是最后告诉你

60
00:03:02,849 --> 00:03:05,850
因为你不想用它作为你的第一个度假胜地。但

61
00:03:05,919 --> 00:03:08,387
当谈到这件事时，没有什么比这更简单的了，

62
00:03:08,455 --> 00:03:11,523
所以准备一个模态segue是再次，

63
00:03:11,591 --> 00:03:15,494
正是你习惯的，没什么特别的。

64
00:03:15,562 --> 00:03:18,797
关于模态的一个有趣的事情是我该怎么做

65
00:03:18,866 --> 00:03:23,468
听到从模态赛到MVC？

66
00:03:23,537 --> 00:03:27,071
我把那个联系人的事情，我加了一个联系人，我怎么得到

67
00:03:27,140 --> 00:03:31,910
我想添加回我的联系人应用程序的联系人。和

68
00:03:31,979 --> 00:03:35,113
实际上，事物最多可分为两类

69
00:03:35,182 --> 00:03:38,483
部分。一个是你不需要回馈任何东西，所以

70
00:03:38,551 --> 00:03:41,953
就像在联系人应用程序中，也许只是新的联系人MVC

71
00:03:42,022 --> 00:03:45,590
把它放在一个数据库中，然后你就解雇那个东西。

72
00:03:45,659 --> 00:03:48,093
当你回到另一个时，它就会变成现实

73
00:03:48,162 --> 00:03:50,328
显示它是因为它正在观看数据库。

74
00:03:50,397 --> 00:03:53,632
换句话说，他们正在共享一个模型。但是那里

75
00:03:53,700 --> 00:03:55,600
就是你实际上必须回传的情况。

76
00:03:55,669 --> 00:03:58,870
所以，假设我们的增加中没有这种设计

77
00:03:58,939 --> 00:03:59,838
接触的东西，

78
00:03:59,907 --> 00:04:02,507
实际上它想给我们我们的联系。

79
00:04:02,576 --> 00:04:06,011
从这个意义上说，你想考虑那些模式化的

80
00:04:06,079 --> 00:04:08,980
视图控制器就像添加联系人MVC一样

81
00:04:09,049 --> 00:04:12,183
以前的视图。就像在导航中一样

82
00:04:12,252 --> 00:04:14,986
工具，当我们去堆栈中的下一张牌时，我们想到了

83
00:04:15,055 --> 00:04:17,722
作为我们视图的一部分。有点为什么我想同样的

84
00:04:17,791 --> 00:04:21,993
这里的事情，所以，你提出的东西不能真正回应

85
00:04:22,062 --> 00:04:25,730
对呈现它的东西。真的那件事

86
00:04:25,799 --> 00:04:28,900
提出它需要与它交谈。我们有一个机制

87
00:04:28,969 --> 00:04:31,169
为了做到这一点，它被称为unwindsegue，

88
00:04:31,238 --> 00:04:34,205
我将在今天的演讲结束时讨论这个问题。

89
00:04:34,274 --> 00:04:39,377
这就是我们如何将事情传回来的方式

90
00:04:39,445 --> 00:04:44,282
仍然保持MVC完好无损。我们如何驳回一个视图

91
00:04:44,351 --> 00:04:46,884
控制器？再一次，你已经知道这一点，因为

92
00:04:46,953 --> 00:04:49,053
我们驳回了我们的文档视图控制器。

93
00:04:49,122 --> 00:04:52,123
使用这种方法解雇，但我有点误导你在我们的演示

94
00:04:52,192 --> 00:04:54,793
最后一次，我会解决这个问题

95
00:04:54,861 --> 00:04:57,729
我有意故意这样做，以便你会看到这些

96
00:04:57,797 --> 00:04:59,664
改变我今天要做的。

97
00:04:59,733 --> 00:05:03,401
并意识到我看到了，而我误导你的是它

98
00:05:03,470 --> 00:05:07,505
是真正的呈现视图控制者的责任

99
00:05:07,574 --> 00:05:11,309
不排除提交的内容。你注意到在我们的

100
00:05:11,378 --> 00:05:15,680
表情符号艺术应用程序，我们有我们的关闭按钮只是说解雇，

101
00:05:15,748 --> 00:05:18,216
换句话说，它是对表情符号艺术的驳斥

102
00:05:18,284 --> 00:05:21,019
文件说辞退你自己。

103
00:05:21,087 --> 00:05:23,989
这真的不是正确的做法，

104
00:05:24,057 --> 00:05:26,924
现在它起作用了，因为解雇方法会

105
00:05:26,993 --> 00:05:30,361
自动转发到它的呈现视图

106
00:05:30,430 --> 00:05:33,999
控制器，如果你已经出席。但我们的原因

107
00:05:34,067 --> 00:05:36,567
不喜欢依靠那可能在那里

108
00:05:36,636 --> 00:05:39,671
某种历史原因。但我们不想要的原因

109
00:05:39,740 --> 00:05:42,874
依靠它是因为如果我们有内线消除

110
00:05:42,942 --> 00:05:46,311
我们的代码在视图控制器中的某处，通常意味着

111
00:05:46,380 --> 00:05:49,247
我们要解雇我们提出的东西，

112
00:05:49,316 --> 00:05:53,117
因为我们是呈现视图控制器。所以要做到这一点

113
00:05:53,186 --> 00:05:56,288
很明显，当我们自己解散时，我们可能想要

114
00:05:56,356 --> 00:05:58,724
把它发送给我们提交的视图控制器。

115
00:05:58,792 --> 00:06:00,591
并且UIViewController中有一个变量被调用

116
00:06:00,660 --> 00:06:02,493
presentingViewController。那，

117
00:06:02,562 --> 00:06:04,563
如果你已经出现，它不会是零和

118
00:06:04,631 --> 00:06:07,065
你可以发送它解雇，这将解雇你自己。

119
00:06:07,133 --> 00:06:10,535
所以我们今天要回到我们的演示，而且我会

120
00:06:10,604 --> 00:06:14,339
改变我们的电话来解雇说presentationViewController

121
00:06:14,408 --> 00:06:18,176
可选链.dismiss。只是为了清楚地说明这一点

122
00:06:18,245 --> 00:06:19,844
我们应该问我们的现在，

123
00:06:19,913 --> 00:06:22,948
这样排斥自己并不一定是错的，

124
00:06:23,016 --> 00:06:26,417
但它很混乱。因为我们不确定是否

125
00:06:26,486 --> 00:06:29,520
解雇意味着解雇我介绍的东西或

126
00:06:29,589 --> 00:06:33,124
解雇我自己，所以我们只是试图澄清这一点。

127
00:06:33,193 --> 00:06:36,228
是的，就像我为了方便说的那样转发了，但是

128
00:06:36,296 --> 00:06:38,630
我们不依赖它。现在另一件事当然是

129
00:06:38,699 --> 00:06:42,000
这个unwind麻烦我提到你要交流的地方

130
00:06:42,068 --> 00:06:44,936
信息后退，自动解散。所以

131
00:06:45,004 --> 00:06:48,239
这是另一种解雇方式，我们会在那时看到

132
00:06:48,308 --> 00:06:51,643
谈论在这里结束unwind。你也可以控制

133
00:06:51,711 --> 00:06:54,846
视图控制器的演示一点点

134
00:06:54,914 --> 00:06:58,516
视图控制器中的模态表示风格var。和

135
00:06:58,584 --> 00:07:01,986
这只能有一点点控制，例如，

136
00:07:02,055 --> 00:07:04,055
默认是.fullScreen，

137
00:07:04,124 --> 00:07:06,691
modelPresentationStyle.fullScreen。

138
00:07:06,760 --> 00:07:08,426
这意味着从底部向上滑动

139
00:07:08,494 --> 00:07:10,562
覆盖整个屏幕，这就是你所看到的

140
00:07:10,631 --> 00:07:13,998
远，这是默认设置。还有overFullScreen

141
00:07:14,067 --> 00:07:16,734
这很有趣，除了做同样的事情

142
00:07:16,803 --> 00:07:19,270
因为它让覆盖的视图控制器

143
00:07:19,339 --> 00:07:22,206
通过闪耀。所以如果你提出一个视图

144
00:07:22,275 --> 00:07:25,142
具有清晰背景的控件将显示出来。

145
00:07:25,211 --> 00:07:27,045
现在我们通常不这样做，所以

146
00:07:27,114 --> 00:07:29,714
隐藏清晰的背景。但是，有时候

147
00:07:29,783 --> 00:07:32,917
我们会用模糊的背景来滑出某些东西。和

148
00:07:32,986 --> 00:07:35,019
我不会真的谈论视觉效果，

149
00:07:35,088 --> 00:07:38,056
看看UI的视觉效果，如果你想了解更多关于它。

150
00:07:38,124 --> 00:07:39,224
但你可以这样做

151
00:07:39,292 --> 00:07:41,760
你有一个很好的背景模糊，和

152
00:07:41,828 --> 00:07:46,764
那将是我们使用overFullScreen的时间。在iPad上，

153
00:07:46,833 --> 00:07:50,968
有时做全屏方法也是

154
00:07:51,037 --> 00:07:55,340
很多白色空间，屏幕太大，太多了

155
00:07:55,408 --> 00:07:58,810
白色空间。所以有几种方法可以使用iPad

156
00:07:58,878 --> 00:08:03,014
有一个小面积出来，并有你的。

157
00:08:03,083 --> 00:08:06,084
视图控制器，并被称为pageSheet哪一个

158
00:08:06,152 --> 00:08:08,386
有点做了一张纸的大小。

159
00:08:08,455 --> 00:08:10,821
它看起来是一张纸。然后形成表单，

160
00:08:10,890 --> 00:08:13,591
这甚至是一个更小的白色的东西。和，

161
00:08:13,660 --> 00:08:18,563
当这些事情出现时，UI的其余部分变灰。

162
00:08:18,632 --> 00:08:21,132
它有点灰暗，也完全无法访问。

163
00:08:21,200 --> 00:08:22,601
你无法触及它，你无法与之互动，

164
00:08:22,669 --> 00:08:26,971
随你。在水平紧凑的环境中

165
00:08:27,040 --> 00:08:31,609
iPhone，右键或iPhone加肖像，

166
00:08:31,678 --> 00:08:35,413
iOS会自动调整表单和

167
00:08:35,482 --> 00:08:38,015
页面样式为全屏，因为

168
00:08:38,084 --> 00:08:41,419
没有足够的空间来显示表单或页面

169
00:08:41,488 --> 00:08:43,988
在iPhone上仍然有灰色区域。

170
00:08:44,057 --> 00:08:45,723
一切都会堵塞太小。

171
00:08:45,792 --> 00:08:48,827
所以它会自动适应你。

172
00:08:48,895 --> 00:08:52,297
在屏幕上出现的东西的动画如何？

173
00:08:52,366 --> 00:08:54,599
那么，默认情况下，它从底部向上滑动，

174
00:08:54,667 --> 00:08:56,801
这就是所谓的封面垂直，但

175
00:08:56,870 --> 00:08:59,103
它也翻转水平，你可以翻转它。

176
00:08:59,172 --> 00:09:02,773
另一个是交叉溶解，最后是局部的

177
00:09:02,842 --> 00:09:05,644
看起来像一张纸翻转起来的卷曲

178
00:09:05,712 --> 00:09:08,613
底部，这在一个很酷的，只有一个作品

179
00:09:08,682 --> 00:09:12,683
与全屏模式，不适用于页面或

180
00:09:12,752 --> 00:09:14,619
表单。没有意义，你不能真正折叠它

181
00:09:14,688 --> 00:09:17,822
当你有点过剩时，从底部开始

182
00:09:17,891 --> 00:09:22,293
边缘周围的区域。所以我们并不真正倾向于使用这些

183
00:09:22,361 --> 00:09:27,165
其他的那些，你知道你想要小心用户界面

184
00:09:27,234 --> 00:09:31,069
太棘手。你想让它感觉像其他用户界面。我们倾向于

185
00:09:31,137 --> 00:09:33,537
大部分时间都要保持垂直。

186
00:09:33,606 --> 00:09:35,473
这两种风格，演示风格和

187
00:09:35,541 --> 00:09:38,276
过渡风格可以在故事板中设置。

188
00:09:38,345 --> 00:09:41,612
你只是通过控制拖动来检查你创建的segue

189
00:09:41,681 --> 00:09:44,949
在Inspector那里你可以设置这些东西。好吧，

190
00:09:45,017 --> 00:09:46,284
所以，我们将在这里做一个演示。

191
00:09:46,353 --> 00:09:47,718
我们要回到EmojiArt。

192
00:09:47,787 --> 00:09:51,089
而我们要做的就是添加一名检查员。

193
00:09:51,157 --> 00:09:52,991
你知道你在XCode中有一个检查员。

194
00:09:53,059 --> 00:09:55,693
那么，我们将要有一个EmojiArt的检查员

195
00:09:55,762 --> 00:09:57,929
文件以及它会告诉我们关于表情符艺术的内容

196
00:09:57,998 --> 00:10:02,434
文档是以字节为单位的大小以及创建时的大小。所以

197
00:10:02,502 --> 00:10:05,270
这是一个简单的检查员。毕竟这是一个演示。

198
00:10:05,338 --> 00:10:07,605
我可能会扔缩略图，

199
00:10:07,673 --> 00:10:09,540
进入检查员。就这样我可以告诉你

200
00:10:09,609 --> 00:10:12,543
有一点我们可以用代码中的限制来做，

201
00:10:12,612 --> 00:10:15,412
因为我有更多的东西来向你展示约束。

202
00:10:15,481 --> 00:10:20,418
所以让我们继续在这里。这里是EmojiArt完全一样

203
00:10:20,487 --> 00:10:23,988
我们上次离开了它。这是我们的EmojiArt文件

204
00:10:24,057 --> 00:10:26,457
在这里查看控制器，EmojiArtViewControl和

205
00:10:26,526 --> 00:10:28,759
我要做的是我要在这里一个小按钮。

206
00:10:28,828 --> 00:10:31,963
我会调用给我检查。和

207
00:10:32,032 --> 00:10:32,697
当你点击这个按钮时，

208
00:10:32,765 --> 00:10:36,634
它会带来一个全新的视图控制器模式。

209
00:10:36,702 --> 00:10:40,304
检查我们正在查看的这个文件。

210
00:10:40,373 --> 00:10:43,140
所以让我们继续创建新的视图控制器。

211
00:10:43,209 --> 00:10:46,777
只是为了回顾一下，我们刚刚创建了一个新的视图控制器

212
00:10:46,846 --> 00:10:48,412
拖出来。所以

213
00:10:48,481 --> 00:10:50,281
在这里我把一个新的视图控制器放在这里。

214
00:10:50,350 --> 00:10:52,817
当然，每个视图控制器都需要它自己的

215
00:10:52,885 --> 00:10:55,486
视图控制器子类，到控制器。所以我要走了

216
00:10:55,555 --> 00:10:59,590
新文件在这里，我们正在创建一个可触摸类，它是

217
00:10:59,659 --> 00:11:03,394
UIV控制器的一个子类。我会把它称为我的文档

218
00:11:03,463 --> 00:11:06,998
信息视图控制器，好的。把它放在同一个位置

219
00:11:07,066 --> 00:11:09,834
把我们所有的其他文件放在那里。这里是。

220
00:11:09,903 --> 00:11:12,503
我会确保我不会忘记回到这里

221
00:11:12,572 --> 00:11:16,240
并在这里和身份检查员一起检查

222
00:11:16,309 --> 00:11:18,743
将其更改为文档信息视图控制器

223
00:11:18,811 --> 00:11:21,445
否则将无法连接我的outlet和

224
00:11:21,514 --> 00:11:25,216
行动和所有这些业务。让我们继续前进

225
00:11:25,284 --> 00:11:28,853
添加这个模式的信息按钮。

226
00:11:28,921 --> 00:11:32,089
在这里搜索按钮。当然，我会用一个bar

227
00:11:32,158 --> 00:11:35,026
按钮项目，因为我把它放在我的bar里。

228
00:11:35,095 --> 00:11:39,030
我不认为有任何预定义的按钮类型

229
00:11:39,098 --> 00:11:41,566
检查员信息，所以我打算使用这个自定义按钮

230
00:11:41,635 --> 00:11:46,604
时间。标题，我将要它成为检查。和

231
00:11:46,672 --> 00:11:48,138
那么我只是要控制拖动，

232
00:11:48,207 --> 00:11:50,774
这是你如何创建一个模态segue，只需控制拖动，

233
00:11:50,843 --> 00:11:52,744
而不是选择显示或显示详细信息，

234
00:11:52,812 --> 00:11:55,213
这是分体视图控制器中的导航控制器，

235
00:11:55,281 --> 00:11:57,348
我们会以模态方式呈现。和

236
00:11:57,417 --> 00:12:00,050
在这里创建这个小的segue，我们可以看看它。

237
00:12:00,119 --> 00:12:03,588
当然，我们要准备这个MVC

238
00:12:03,657 --> 00:12:05,023
我们将需要一个标识符。

239
00:12:05,091 --> 00:12:09,027
我将在标识符Show Document下面调用这个segue

240
00:12:09,095 --> 00:12:11,628
信息cuz这就是它在那里，你可以看到

241
00:12:11,697 --> 00:12:14,199
这是Modally的介绍。这就是我在谈论你的地方

242
00:12:14,267 --> 00:12:17,868
可以改变它如何呈现Page Sheet，Form Sheet。

243
00:12:17,937 --> 00:12:19,937
还有它在屏幕上的动画效果，

244
00:12:20,006 --> 00:12:24,041
对。我只是在这里检查这个小家伙。

245
00:12:24,110 --> 00:12:26,110
所以现在我需要在这里构建我的UI

246
00:12:26,179 --> 00:12:30,681
我的文件。信息，所以我会在这里有一些标签，

247
00:12:30,750 --> 00:12:32,650
当然，大小和创建日期。

248
00:12:32,719 --> 00:12:35,586
所以我要把它拿出来，其实我会创造四个

249
00:12:35,655 --> 00:12:40,724
这些，四个标签，并放大

250
00:12:40,793 --> 00:12:43,995
你可以看到这个好多了，对，就是我的四个标签。所以

251
00:12:44,063 --> 00:12:46,931
我将会有一个标签会变得更大，而且

252
00:12:46,999 --> 00:12:49,834
另一个将被创建，然后是这样

253
00:12:49,903 --> 00:12:53,504
将成为所有具有99个字节的实际大小

254
00:12:53,573 --> 00:12:57,275
我们可以告诉它成功显示实际大小。

255
00:12:57,343 --> 00:13:00,144
然后我们今天要说的创造日是日期

256
00:13:00,213 --> 00:13:02,814
因为我们早些时候创建了很多我们的文档

257
00:13:02,882 --> 00:13:08,385
这是15日，17日，我们约在下午4点45分做某事

258
00:13:08,454 --> 00:13:12,456
像那样。所以这两个我们要从信息中设置

259
00:13:12,525 --> 00:13:17,461
我们的文件显然。让我们使用堆栈视图来行

260
00:13:17,530 --> 00:13:20,364
这东西了，所以我会打这个堆栈视图和

261
00:13:20,433 --> 00:13:23,667
他们的对齐线索正是我想要的和这些

262
00:13:23,736 --> 00:13:26,704
在这里，把股票视图和他们的路线引导

263
00:13:26,773 --> 00:13:29,373
这正是我想要的。那我要拿走这两个

264
00:13:29,442 --> 00:13:32,510
在这些，并把他们在这个堆栈视图与一些标准

265
00:13:32,579 --> 00:13:36,914
间隔之间，现在我有一个不错的一点

266
00:13:36,982 --> 00:13:40,752
空间显示我的大小，并在这里创建。另一件事

267
00:13:40,820 --> 00:13:44,221
我要添加的是一个图像视图，我主要添加这个

268
00:13:44,290 --> 00:13:46,157
因为我想告诉你一些关于约束的东西。

269
00:13:46,226 --> 00:13:48,826
所以这里有一个图像视图，这是一个大的，你知道我会的

270
00:13:48,894 --> 00:13:53,697
尝试挑选一个大小。有点适合这个文本

271
00:13:53,766 --> 00:13:56,433
我在这里。我们来看看堆栈视图，

272
00:13:56,502 --> 00:13:59,637
我也会把标准间距放在那里。

273
00:14:01,107 --> 00:14:03,574
我们将在这里对齐中心，

274
00:14:03,643 --> 00:14:05,643
因为我们不希望这一定是必须的

275
00:14:05,712 --> 00:14:08,779
完全相同的宽度。现在注意它在这里是红色的。

276
00:14:08,848 --> 00:14:12,116
我们在这里有红色，因为它说水平

277
00:14:12,185 --> 00:14:15,253
模糊的设置在这里。这是因为图像视图

278
00:14:15,322 --> 00:14:17,989
如果你会记得有一个固有的大小。

279
00:14:18,057 --> 00:14:21,291
它取决于那里和所有的图像。所以

280
00:14:21,360 --> 00:14:23,894
我会在这里做几件事。一，我不想要

281
00:14:23,963 --> 00:14:26,564
这个图像视图实际上比这个宽得多。

282
00:14:26,633 --> 00:14:28,332
我不希望它真的很宽，而且

283
00:14:28,401 --> 00:14:30,168
使这个文本填充真的很小。所以

284
00:14:30,236 --> 00:14:34,639
我要在这里修正这个宽度

285
00:14:34,707 --> 00:14:37,709
到什么都好。然后也不用担心

286
00:14:37,777 --> 00:14:41,679
高度，所以我也要修正长宽比。

287
00:14:41,747 --> 00:14:45,282
然而，在这个长宽比的情况下，我打算设置它

288
00:14:45,351 --> 00:14:48,919
来自代码。因为我想要这个图像的长宽比，

289
00:14:48,988 --> 00:14:52,123
这将是我的文档的缩略图是正确的

290
00:14:52,192 --> 00:14:55,093
长宽比为我的形象。所以我们会做一点

291
00:14:55,161 --> 00:15:00,565
在代码练习中的约束，你知道的，这里有一点点。

292
00:15:00,633 --> 00:15:02,667
所以我要把它放在中间。

293
00:15:02,735 --> 00:15:03,901
所以，让我们继续前进

294
00:15:03,970 --> 00:15:08,605
我在这里垂直居中。和

295
00:15:08,674 --> 00:15:12,610
这消除了我所有的汽车布局警告等等

296
00:15:12,679 --> 00:15:15,913
它现在看起来像什么。在这里看起来有点孤单

297
00:15:15,982 --> 00:15:19,550
大的空白空间，但它就是这样。现在，

298
00:15:19,618 --> 00:15:21,619
让我们继续，并创建一些这样的事情outlet

299
00:15:21,687 --> 00:15:24,622
我们可以设置这些东西。所以我会去这里。

300
00:15:24,691 --> 00:15:28,126
转到我的文档信息视图控制器。这里是。

301
00:15:28,194 --> 00:15:30,628
摆脱它给了我们的所有免费东西

302
00:15:30,696 --> 00:15:34,164
让我们开始接线这些东西。

303
00:15:34,233 --> 00:15:37,101
所以我会再次放大，以便您可以看到它。让我们连线

304
00:15:37,170 --> 00:15:39,303
这个图像视图就是我缩略图的位置

305
00:15:39,371 --> 00:15:43,974
我会把这个叫做thumbnailImageView。接着

306
00:15:44,043 --> 00:15:47,144
这里的标签很少，这就是我的尺寸所在，所以

307
00:15:47,213 --> 00:15:51,482
我会把它放在这里，把它叫做我的尺寸标签和

308
00:15:51,551 --> 00:15:55,219
这一个就在这里是我创建的地方。创建日期，

309
00:15:55,288 --> 00:15:59,557
东西去了，我会调用给我创建的标签。所以

310
00:15:59,626 --> 00:16:01,024
我创造了一个不错的一点。

311
00:16:01,093 --> 00:16:04,962
这里的人做一些用户界面，我把他连接到Info。

312
00:16:05,031 --> 00:16:07,664
让我们继续并运行我们拥有的东西

313
00:16:07,733 --> 00:16:10,334
在这里。只是为了看看它的功能，尽管如此，

314
00:16:10,402 --> 00:16:13,370
当然，我们并没有设定任何这些值。但

315
00:16:13,439 --> 00:16:17,307
我们至少可以确保我们的UI看起来很像

316
00:16:17,376 --> 00:16:23,881
我们想要什么。好的，我们来了。

317
00:16:23,950 --> 00:16:27,051
表情艺术，让我们把苹果，蜜蜂，在这里我们去，

318
00:16:27,119 --> 00:16:29,920
苹果和蜜蜂。这里是我们的检查按钮，

319
00:16:29,989 --> 00:16:31,622
现在，看，我要点击这个。

320
00:16:31,691 --> 00:16:34,726
从底部向上滑动。我们在今天的日期看到99个字节，

321
00:16:34,794 --> 00:16:36,660
因为我们在那里没有做任何事情，而且，

322
00:16:36,729 --> 00:16:38,329
当然，没有缩略图。

323
00:16:38,397 --> 00:16:39,897
我们在这里遇到了一个很大的问题。

324
00:16:39,966 --> 00:16:42,533
哎呀，我无法回到我的应用程序，对不对？

325
00:16:42,602 --> 00:16:44,969
因为我以模态方式呈现，它接管了，

326
00:16:45,038 --> 00:16:47,504
现在我有责任提供一些UI来获取

327
00:16:47,573 --> 00:16:49,907
嘿嘿离开这里。所以让我们去做那个，

328
00:16:49,976 --> 00:16:53,377
我会通过添加一个按钮来做到这一点，所以

329
00:16:53,445 --> 00:16:58,316
我要去这里，拿一个按钮。这里是，

330
00:16:58,384 --> 00:17:01,219
所以我们在这里拖动这个按钮，我只是把它放在

331
00:17:01,287 --> 00:17:04,322
这里的底部，我要调用这个按钮返回

332
00:17:04,390 --> 00:17:08,492
文件。我们只需从这里按住Ctrl +拖动。

333
00:17:08,561 --> 00:17:12,530
我们将这称为完成，因为我们完成了这件事情，

334
00:17:12,598 --> 00:17:15,966
这将是一个行动，我们不需要任何

335
00:17:16,035 --> 00:17:19,570
参数或任何其他。所以这一个很好地完成和

336
00:17:19,639 --> 00:17:22,540
当我们完成后，我们会怎么做？那么，我们想要

337
00:17:22,608 --> 00:17:25,376
放弃自己，但现在，这是我们要去的地方

338
00:17:25,444 --> 00:17:29,113
请记住，我们可以说解雇。那是有效的

339
00:17:29,181 --> 00:17:32,616
因为那个自动转发，但真的是我们的

340
00:17:32,685 --> 00:17:35,620
想要做的是要求我们呈现的ViewController，

341
00:17:35,688 --> 00:17:42,092
如果我们有一个，请取消我们。它是动画，

342
00:17:42,161 --> 00:17:46,163
真正。它有一个完成处理程序，

343
00:17:46,232 --> 00:17:49,266
我们不会使用它，所以它会解雇我们

344
00:17:49,335 --> 00:17:52,103
让我们来看看这个。确保这是真的

345
00:17:52,171 --> 00:18:00,511
解雇我们。好的，我们走吧。在这里，让我们来看看，

346
00:18:00,580 --> 00:18:04,615
我们有Return to Document。呜呼！我们回来了。

347
00:18:04,684 --> 00:18:07,718
所以，这很好。现在，我们有一个模型，这个，

348
00:18:07,786 --> 00:18:11,055
这个MVC没有模型，所以我们有一个模型在这里添加，所以

349
00:18:11,123 --> 00:18:14,558
你可以实际显示文件。其实，之前

350
00:18:14,627 --> 00:18:17,561
那我们回过头来添加这个presentationViewController

351
00:18:17,630 --> 00:18:19,797
治疗到我们的EmojiArtViewController。

352
00:18:19,866 --> 00:18:21,298
只是这样你才能看到那里。

353
00:18:21,367 --> 00:18:25,269
所以让我们回到这里，寻找解雇，

354
00:18:25,337 --> 00:18:28,839
这里是我们在离我们很近的地方排斥自己的地方

355
00:18:28,908 --> 00:18:32,809
我们只是说，解雇，但我们真的应该说，

356
00:18:32,878 --> 00:18:38,515
presentsViewController，解雇。了解？所以

357
00:18:38,584 --> 00:18:43,254
这个家伙的模型就在这里。什么是模型？

358
00:18:43,323 --> 00:18:45,856
那是一个DocumentInfoViewController，

359
00:18:45,925 --> 00:18:49,126
它会查看文档的大小和创建的信息。所以

360
00:18:49,195 --> 00:18:53,064
它的var应该可能是它检查的文档，而且

361
00:18:53,132 --> 00:18:58,436
我们会让它成为EmojiArt文档。所以，

362
00:18:58,504 --> 00:19:01,205
当我们设置这个模型时，我们想要更新我们的UI，

363
00:19:01,274 --> 00:19:03,907
把尺寸放在那里，把创造放在那里。

364
00:19:03,976 --> 00:19:06,711
所以我打算在这里放一点点，然后

365
00:19:06,779 --> 00:19:08,713
didSet只是调用给一些人

366
00:19:08,781 --> 00:19:11,548
updateIO方法，我将不得不写。

367
00:19:11,617 --> 00:19:15,386
同样，当viewDidLoad发生时，

368
00:19:15,455 --> 00:19:19,990
我也要更新我的用户界面。因为在这里，我可能是

369
00:19:20,059 --> 00:19:23,226
更新我的用户界面之前，我的outlet设置，例如，

370
00:19:23,295 --> 00:19:26,831
有些人可能正在准备我。所以在这里我想确认一下

371
00:19:26,899 --> 00:19:29,700
我的outlet设置后，这是什么viewDidLoad是所有

372
00:19:29,768 --> 00:19:32,136
关于我回去并再次更新我的用户界面。

373
00:19:32,205 --> 00:19:34,971
所以我需要一个名为updateUI的私有函数，

374
00:19:35,040 --> 00:19:38,308
在这里，我们将更新所有的字段。

375
00:19:38,377 --> 00:19:41,679
我们所有的销售点以及类似的东西都符合我们的模型，

376
00:19:41,747 --> 00:19:44,214
这是这里的文档。好，如此

377
00:19:44,283 --> 00:19:47,718
我们需要做什么？我们需要做的一件事是

378
00:19:47,786 --> 00:19:50,954
显然能够获取该文档的URL

379
00:19:51,023 --> 00:19:54,091
然后查看URL以查找其文件属性。

380
00:19:54,159 --> 00:19:56,293
现在我要告诉你如何使用文件管理器来做到这一点，

381
00:19:56,362 --> 00:20:00,130
这非常非常简单。我也会保护我的

382
00:20:00,199 --> 00:20:03,867
尚未设置outlet。因为那通常是真的

383
00:20:03,936 --> 00:20:06,804
一个更新UI方法，因为人们设置你的模型和

384
00:20:06,873 --> 00:20:09,206
准备，所以你的东西没有设置。

385
00:20:09,275 --> 00:20:13,277
所以我要先查看一下我的尺寸标签

386
00:20:13,346 --> 00:20:17,848
不等于零，也是我创建的标签不等于

387
00:20:17,916 --> 00:20:20,784
零。如果这两个都是真的，

388
00:20:20,853 --> 00:20:24,054
那么我会看看我能否让URL平等

389
00:20:24,123 --> 00:20:28,725
文档的.fileURL。因为我必须拥有该网址

390
00:20:28,794 --> 00:20:31,362
如果我要找到尺寸和创建的

391
00:20:31,431 --> 00:20:35,031
那么我会看看我能否获得这些属性。所以

392
00:20:35,100 --> 00:20:38,268
我会说，如果我可以让属性平等尝试，

393
00:20:38,337 --> 00:20:42,173
去文件管理器，默认，而不是经理。

394
00:20:42,241 --> 00:20:47,110
默认的一个，为了得到attributesOfItem，

395
00:20:47,179 --> 00:20:50,481
你看到那里的第一个，

396
00:20:50,550 --> 00:20:52,682
attributesOfItem。

397
00:20:52,751 --> 00:20:55,986
当然，这里是URLs路径。和

398
00:20:56,055 --> 00:21:01,192
如果我能够做到这一点。如果我可以获取属性，

399
00:21:01,260 --> 00:21:06,130
那么我可以更新这些标签。合理？

400
00:21:06,198 --> 00:21:09,399
好的，让我们来做。我在这里有属性，

401
00:21:09,468 --> 00:21:12,303
据推测，如果我把这些与所有这些相提并论，如果让和

402
00:21:12,371 --> 00:21:15,472
东西在这里。所以我们来做一下尺寸标签，

403
00:21:15,541 --> 00:21:19,477
这是一个容易的，sizeLabel.text，等于，

404
00:21:19,545 --> 00:21:24,014
让我们把这些属性。现在，

405
00:21:24,082 --> 00:21:26,917
属性，它们从项目的属性返回，这个

406
00:21:26,986 --> 00:21:29,553
如果我们在这里查看它，属性就是一本字典。

407
00:21:29,622 --> 00:21:32,189
这是FileAttributeKey和任何字典。

408
00:21:32,257 --> 00:21:33,757
所以你可以查看文档

409
00:21:33,826 --> 00:21:35,459
所有的文件属性，你可以得到，和

410
00:21:35,528 --> 00:21:38,695
有很多。创建日期，修改日期，大小，

411
00:21:38,764 --> 00:21:42,099
所有这些东西，所以我们要在这里使用其中的一个，

412
00:21:42,167 --> 00:21:45,002
这是尺寸。如果这恰好是零，为

413
00:21:45,071 --> 00:21:48,339
某种原因，我们无法获得我们应该始终如一的尺寸

414
00:21:48,407 --> 00:21:51,441
能够，但如果我们不能，那么我会继续前进

415
00:21:51,510 --> 00:21:55,245
说零字节。虽然也许我会说更好

416
00:21:55,314 --> 00:21:59,650
像未知的大小或类似的东西在这里，但

417
00:21:59,719 --> 00:22:02,453
我只是为了演示而说。

418
00:22:02,521 --> 00:22:04,688
然后我们创建了，所以在这里我会说，

419
00:22:04,757 --> 00:22:06,791
我会尝试通过说出来获取创建日期。

420
00:22:06,859 --> 00:22:10,327
如果我可以让创建的属性相等

421
00:22:10,396 --> 00:22:14,932
creationDate。这是另一个FileAttributeKey

422
00:22:15,001 --> 00:22:17,968
就在那里，这回来作为一个任何，所以

423
00:22:18,036 --> 00:22:22,339
我想说作为一个日期。所以我将它转换为Date，

424
00:22:22,408 --> 00:22:26,743
希望你已经习惯了做这件事，比如做生意

425
00:22:26,812 --> 00:22:30,614
从任何地方投下东西。所以在这里我已经创建了，并且

426
00:22:30,683 --> 00:22:34,652
我真正想说的是，我创建的标签文本。

427
00:22:35,721 --> 00:22:37,888
基本上等于这个创建，但是

428
00:22:37,956 --> 00:22:41,158
不幸的是，这是一个日期，我必须把它变成

429
00:22:41,227 --> 00:22:43,394
一个字符串把它放在这里的文本。

430
00:22:43,463 --> 00:22:45,496
那么如何将日期转换为字符串？

431
00:22:45,564 --> 00:22:48,332
那么，是的，你可以做反斜杠开括号，

432
00:22:48,401 --> 00:22:50,934
日期，你会得到某种日期，但是

433
00:22:51,003 --> 00:22:54,404
我们真的想在IOS中使用一个叫做日期格式化器的类。

434
00:22:54,473 --> 00:22:57,975
所以日期格式化程序将格式化日期，而不仅仅是看看如何

435
00:22:58,044 --> 00:23:01,211
你告诉它看起来，但也为当地的语言。

436
00:23:01,280 --> 00:23:03,313
因为有些人，他们在一个月前放了一个月，

437
00:23:03,382 --> 00:23:04,481
或该月前一天。

438
00:23:04,550 --> 00:23:06,183
当然，在其他语言中，

439
00:23:06,251 --> 00:23:08,585
日期完全不同。所以，

440
00:23:08,654 --> 00:23:11,655
我会在这里创建一个小日期格式化程序，

441
00:23:11,724 --> 00:23:14,825
我会把它称为一个，它不一定是一个让，

442
00:23:14,893 --> 00:23:17,995
甚至是一个shortDateFormatter。所以这将是

443
00:23:18,063 --> 00:23:21,165
一个格式化程序，使日期尽可能短，如此

444
00:23:21,234 --> 00:23:23,534
它将是DateFormatter类型的。

445
00:23:23,602 --> 00:23:26,436
我将通过将其设置为等于执行来创建它

446
00:23:26,505 --> 00:23:30,007
闭包，当然你都熟悉这一点。和

447
00:23:30,076 --> 00:23:33,410
通过说DateFormatter，我将在这里创建一个格式化程序，

448
00:23:33,479 --> 00:23:35,779
然后我会配置一下。

449
00:23:35,848 --> 00:23:39,950
我会告诉它，我希望它用于dateStyle，

450
00:23:40,019 --> 00:23:43,187
我希望它使用短的风格，也为

451
00:23:43,256 --> 00:23:46,623
这是时间，我也希望它做得很短

452
00:23:46,692 --> 00:23:49,593
那么我会返回这个格式化程序。

453
00:23:49,662 --> 00:23:51,795
你知道，如果你真的在做一个应用程序，

454
00:23:51,864 --> 00:23:54,331
你可能真的希望这样做更友好

455
00:23:54,399 --> 00:23:57,133
命名你必须自己做。它实际上可以

456
00:23:57,202 --> 00:23:59,536
相当多的工作要真正在所有语言中正确使用。

457
00:23:59,605 --> 00:24:01,104
但你可能想说，就像，

458
00:24:01,173 --> 00:24:03,707
昨天下午5点。不幸的是，这很好，

459
00:24:03,776 --> 00:24:06,710
没有日期格式友好的格式

460
00:24:06,779 --> 00:24:09,813
必须自己做，所以我在这里有我的信用

461
00:24:09,882 --> 00:24:12,716
我会在这里使用我的短日期格式化程序，并且

462
00:24:12,785 --> 00:24:18,589
日期格式有一个从日期称为字符串的方法。和

463
00:24:18,657 --> 00:24:22,392
它会将其转换为字符串格式。所以

464
00:24:22,461 --> 00:24:25,161
这是UI中的标签。我们的缩略图怎么样？

465
00:24:25,230 --> 00:24:27,631
在那里？我会在这里做同样的保护

466
00:24:27,700 --> 00:24:33,003
说如果我的thumbnailImageView不是不等于

467
00:24:33,072 --> 00:24:38,476
零。那么如果我能得到我的缩略图

468
00:24:38,544 --> 00:24:43,847
从我的文档中，请记住我们有这个

469
00:24:43,915 --> 00:24:47,017
表情符号艺术文件中的var称为缩略图，对吗？

470
00:24:47,085 --> 00:24:49,720
这是我们的模型，这里是表情艺术文件。所以，

471
00:24:49,788 --> 00:24:51,555
我们有这个缩略图。所以，我可以得到缩略图和

472
00:24:51,623 --> 00:24:55,025
我的thumbnailImageView不是零。然后我可以说我的

473
00:24:55,094 --> 00:25:00,931
thumbnailImageView.image等于该缩略图。

474
00:25:02,634 --> 00:25:06,970
好吧，现在我们已经教会了我们这个MVC如何接受它

475
00:25:07,038 --> 00:25:11,308
模型并保持其UI与它最新。现在我们必须

476
00:25:11,376 --> 00:25:15,945
do是准备这个MVC作为那个模态segway的一部分。所以

477
00:25:16,014 --> 00:25:17,815
你们都很熟悉如何做好准备。

478
00:25:17,883 --> 00:25:21,352
我要把我的导航代码放在最上面，

479
00:25:21,420 --> 00:25:22,685
你通常不会这样做

480
00:25:22,754 --> 00:25:25,689
只是为了让我们很容易在我们经历的过程中找到它

481
00:25:25,758 --> 00:25:28,491
这个演示。所以我要把我的导航放在这里，我只是

482
00:25:28,560 --> 00:25:32,463
要准备segue，在这里。没什么特别的

483
00:25:32,531 --> 00:25:37,734
这，我只是会说如果我segue.identifier ==“显示

484
00:25:37,803 --> 00:25:41,137
文档信息“，请记住我所说的我的继承人

485
00:25:41,206 --> 00:25:44,475
在故事板中的标识符。然后，我可以刺入并说出如果

486
00:25:44,543 --> 00:25:49,446
我可以让目的地等于我的segue的目的地。

487
00:25:49,515 --> 00:25:52,783
而且我也会说点点内容，因为我想要它

488
00:25:52,851 --> 00:25:55,318
即使它包裹在导航控制器中也可以工作。

489
00:25:55,387 --> 00:25:58,689
请记住我们所做的诀窍。在这里我会说

490
00:25:58,757 --> 00:26:02,259
当然，这是一个文档信息视图控制器

491
00:26:02,327 --> 00:26:04,628
如果segue显示文档信息应该是什么，

492
00:26:04,697 --> 00:26:08,933
它应该在这里继续这个东西。那我们可以

493
00:26:09,001 --> 00:26:13,170
设置我们的destination.document =文档。和

494
00:26:13,239 --> 00:26:18,142
你知道吗？我也要在这里更新缩略图，

495
00:26:18,210 --> 00:26:21,345
所以我必须让我的文档缩略图更新到

496
00:26:21,413 --> 00:26:28,384
做我的emojiArtViews.snapshot。好，只是因为我

497
00:26:28,453 --> 00:26:30,787
可能没有为自上一次以来的缩略图做一个快照

498
00:26:30,856 --> 00:26:33,357
当我关闭或任何。我希望它是一样的

499
00:26:33,425 --> 00:26:36,226
迄今为止。就是这样了。

500
00:26:36,294 --> 00:26:39,563
我们准备好了。这是一个适合模型和MVC的MVC

501
00:26:39,632 --> 00:26:41,432
所有这一切都应该起作用。让我们来看看。

502
00:26:48,173 --> 00:26:51,241
好的，在这里，我们是如此的苹果蜜蜂就在这里。这里是。

503
00:26:51,310 --> 00:26:55,112
让我们来看看它。看起来不错。有我们的缩略图。

504
00:26:55,180 --> 00:26:57,180
大小不是99，所以它一定是这样。

505
00:26:57,249 --> 00:27:01,317
所以看起来我们上个星期在某个时候创造了这个。

506
00:27:01,386 --> 00:27:04,621
所有这一切看起来不错。我们可以返回到文档，但是

507
00:27:04,690 --> 00:27:05,823
这里有一点问题。

508
00:27:05,891 --> 00:27:09,492
我们来看看太空狗。我们在这里得到了太空狗，

509
00:27:09,561 --> 00:27:14,030
让我们来检查一下。因为我们有太空狗，因此我们得到了smooshed

510
00:27:14,099 --> 00:27:18,068
这是我们故事板中固定的高宽比，我们不想要

511
00:27:18,137 --> 00:27:21,371
我们希望这个宽高比等于

512
00:27:21,440 --> 00:27:25,709
图像的宽高比。现在我们该怎么做？

513
00:27:25,778 --> 00:27:29,212
那么，我们会做一些非常类似于我们所做的事情

514
00:27:29,281 --> 00:27:33,083
当我们把尺寸连接起来，但不幸的是

515
00:27:33,151 --> 00:27:36,253
纵横比更难一点，所以我要走了

516
00:27:36,321 --> 00:27:40,424
在这里，我们的故事板。我会带出我的

517
00:27:40,492 --> 00:27:44,194
文档大纲，然后我会提出我的MVC

518
00:27:44,263 --> 00:27:48,365
在这里，我会创造一个outlet

519
00:27:48,433 --> 00:27:51,634
到这个缩略图意见约束，这是

520
00:27:51,703 --> 00:27:56,773
我们放在这里的宽高比，以便我可以控制它，

521
00:27:56,842 --> 00:27:58,742
但是我必须有一点不同的控制，所以

522
00:27:58,811 --> 00:28:03,514
这是我调用给我的thumbnailAspectRatio的outlet。

523
00:28:04,984 --> 00:28:08,151
它是。当我们做了尺寸和

524
00:28:08,220 --> 00:28:11,121
宽度，如果你还记得，我们只是采取了约束和

525
00:28:11,190 --> 00:28:14,824
我们将其设定为不变，对吧？那不是

526
00:28:14,893 --> 00:28:19,863
因为纵横比是一个乘数，因此可以用于纵横比。

527
00:28:19,932 --> 00:28:23,733
如果在这里看检查员的纵横比，

528
00:28:23,802 --> 00:28:26,403
所以我要选择长宽比，这是约束

529
00:28:26,472 --> 00:28:29,406
在检查员。你会发现它实际上是不变的

530
00:28:29,475 --> 00:28:33,643
零和它的乘数导致长宽比，

531
00:28:33,712 --> 00:28:37,247
事实上，长宽比约束就是其他

532
00:28:37,315 --> 00:28:41,084
比视图的宽度在它的高度上的关系

533
00:28:41,153 --> 00:28:44,488
使用这个乘数。它不是一个特殊的限制，

534
00:28:44,556 --> 00:28:46,990
它只是一个使用这个乘数的正常约束

535
00:28:47,059 --> 00:28:50,193
关联视图的宽度和高度。

536
00:28:50,262 --> 00:28:54,464
这里的问题是乘数是只读的。

537
00:28:54,533 --> 00:28:58,134
它不像是你可以设置和设定的地方

538
00:28:58,203 --> 00:29:01,604
适应与只读。所以如果我们想改变这一点

539
00:29:01,673 --> 00:29:04,941
我们必须改变整个约束。我们必须创造

540
00:29:05,010 --> 00:29:08,344
这个乘数的一个新的约束并取代它。

541
00:29:08,413 --> 00:29:11,147
所以这是一个很好的机会向你展示

542
00:29:11,216 --> 00:29:13,216
如何设置视图约束，以及

543
00:29:13,285 --> 00:29:15,318
如何删除视图上的限制，以及

544
00:29:15,387 --> 00:29:18,588
如何在初始化器中创建约束条件

545
00:29:18,656 --> 00:29:21,558
这里就是一个小例子，所以这就是我们要做的。让我们

546
00:29:21,626 --> 00:29:25,895
回到这里，回到我们的文件信息在这里。这个

547
00:29:25,964 --> 00:29:28,598
是我刚才在这里添加了这个宽高比的地方

548
00:29:28,666 --> 00:29:32,102
那么我在这里设置缩略图，我想要这个方面

549
00:29:32,170 --> 00:29:35,539
比率被替换为正确的比率

550
00:29:35,607 --> 00:29:38,675
这个缩略图。所以，我要做的第一件事就是我

551
00:29:38,743 --> 00:29:41,845
要删除现有的。所以，我会问我的

552
00:29:41,913 --> 00:29:45,716
缩略图图像视图来移除对其本身的约束，

553
00:29:45,784 --> 00:29:50,687
这是缩略图宽高比。就是那个

554
00:29:50,756 --> 00:29:52,755
从故事板。所以从故事板中删除一个。

555
00:29:52,824 --> 00:29:56,760
我最好也检查一下，以确保不是零。

556
00:29:59,531 --> 00:30:03,099
哎呀。不等于零，只是因为我不想崩溃

557
00:30:03,168 --> 00:30:06,569
在这里。这很好。所以这是第一步。

558
00:30:06,638 --> 00:30:09,306
删除约束。现在让我们创建一个新的约束

559
00:30:09,375 --> 00:30:10,607
与正确的宽高比。

560
00:30:10,676 --> 00:30:12,575
所以这就是你如何在代码中创建一个约束。

561
00:30:12,644 --> 00:30:13,877
实际上有两种方法。

562
00:30:13,946 --> 00:30:16,146
你可以使用这个初始化器。信不信由你，

563
00:30:16,214 --> 00:30:19,049
还有另一种方法可以使用某种类型来指定

564
00:30:19,117 --> 00:30:22,952
ASCII艺术。你在哪里制作这些ASCII字符串

565
00:30:23,021 --> 00:30:24,087
有一些规则，和

566
00:30:24,156 --> 00:30:27,056
你几乎使它看起来像你的约束艺术，种类

567
00:30:27,125 --> 00:30:29,593
艺术化呈现。我不会表现出来，

568
00:30:29,661 --> 00:30:31,628
这真的很酷，但我没有时间展示它，但是

569
00:30:31,697 --> 00:30:34,197
这是值得在文档中查看的地方

570
00:30:34,266 --> 00:30:35,899
你可以做一些事情，比如把东西钉到边上，

571
00:30:35,967 --> 00:30:36,934
以事物为中心，

572
00:30:37,002 --> 00:30:39,302
有事情与其他边界有关系，

573
00:30:39,370 --> 00:30:43,206
所有使用这些，这些都非常简洁的ASCII艺术。

574
00:30:43,274 --> 00:30:45,909
但在这里我们将使用构造函数来创建一个新的

575
00:30:45,978 --> 00:30:49,412
缩略图宽高比和构造函数看起来像这样。

576
00:30:49,481 --> 00:30:52,882
所以它是NSLayoutConstraint，这是一个类

577
00:30:52,951 --> 00:30:56,352
一个约束。这里是它的构造函数

578
00:30:56,421 --> 00:31:00,323
第一。我会的，它有很多参数，我会

579
00:31:00,392 --> 00:31:05,828
在这里做我的伎俩。所以你可以清楚地看到它们。和

580
00:31:05,897 --> 00:31:09,499
这一切排队，你可能已经开始认识到

581
00:31:09,568 --> 00:31:11,033
他们看着这个。

582
00:31:11,102 --> 00:31:13,669
这些都完全一致，

583
00:31:13,738 --> 00:31:18,308
当我们选择这个和时，回到故事板

584
00:31:18,377 --> 00:31:21,744
检查它。看，看看这些东西？第一项关系，

585
00:31:21,813 --> 00:31:24,881
第二项固定优先级乘数。那些都是

586
00:31:24,950 --> 00:31:28,818
我们在创作时看到的是同样的东西

587
00:31:28,887 --> 00:31:32,589
一。项目，第二项，关系，乘数，

588
00:31:32,657 --> 00:31:35,659
同样的事情。所以我们只是在代码中设置它们。

589
00:31:35,727 --> 00:31:38,561
现在请记住我说这些宽高比是一种关系

590
00:31:38,630 --> 00:31:41,364
在缩略图之间，填充宽度和

591
00:31:41,433 --> 00:31:42,632
它的高度。对？

592
00:31:42,701 --> 00:31:47,470
所以涉及的两个项目都是缩略图图像视图。

593
00:31:47,539 --> 00:31:49,873
这就是那一个和两个项目。

594
00:31:49,942 --> 00:31:54,177
缩略图图像视图。但是第一个的属性

595
00:31:54,246 --> 00:31:57,848
这里是宽度，我们将其设置为实际

596
00:31:57,916 --> 00:32:02,085
等于这个乘数的高度。所以

597
00:32:02,153 --> 00:32:04,253
它与两者之间的关系是平等的

598
00:32:04,322 --> 00:32:07,823
乘数在那里得到计数。当然就是这样

599
00:32:07,892 --> 00:32:10,927
与身高有关。而这里是我们想要的乘数

600
00:32:10,996 --> 00:32:14,664
这只是thumbnail.size.width划分

601
00:32:14,732 --> 00:32:19,135
由thumbnails.size.height。和

602
00:32:19,204 --> 00:32:22,205
不变，正如你从故事板中的检查员记得的一样

603
00:32:22,273 --> 00:32:25,108
是零。我们并没有对它进行任何持续的操纵，

604
00:32:25,176 --> 00:32:27,176
只是宽度和高度之间的乘数。

605
00:32:27,245 --> 00:32:29,646
所以这就是创建布局约束的样子。

606
00:32:29,715 --> 00:32:31,614
当然，这些不一定是相同的视图，

607
00:32:31,683 --> 00:32:34,250
他们可能是两个相同的两个视图之间的关系。

608
00:32:34,319 --> 00:32:38,087
我们可以使他们的宽度相同或不管。所以，

609
00:32:38,156 --> 00:32:40,691
现在，我们已经创建了这个新的约束，我们来添加它

610
00:32:40,759 --> 00:32:42,892
以缩略图图像视图为约束。

611
00:32:42,961 --> 00:32:52,435
你用addConstraint添加一个约束。就是这样了。

612
00:32:52,504 --> 00:32:54,538
所以让我们来看看是否解决了我们的问题。

613
00:33:02,580 --> 00:33:05,248
在这里，我们走吧，让我们再次去太空狗的原因

614
00:33:05,316 --> 00:33:08,318
这是有问题，我们检查和哇，它的

615
00:33:08,387 --> 00:33:12,155
仍然宽度有限，但它有正确的长宽比。

616
00:33:12,224 --> 00:33:14,157
它的尺寸在那里，661和

617
00:33:14,226 --> 00:33:19,428
所有这一切。现在，我想让我们注意的另一件事是

618
00:33:19,497 --> 00:33:23,366
这个大的空白在iPad上看起来不太好。所以

619
00:33:23,435 --> 00:33:28,771
让我们去做我在这里所说的话并使用演示文稿

620
00:33:28,840 --> 00:33:32,942
风格在这里。这里的东西在哪里？

621
00:33:33,011 --> 00:33:37,680
我们到这里来。我会缩小

622
00:33:37,749 --> 00:33:42,752
您。我们去选择这个segue。我会过去这里

623
00:33:42,821 --> 00:33:46,556
将其更改为演示文稿样式表单。

624
00:33:46,625 --> 00:33:48,592
好吧，这是有点看起来像。

625
00:33:48,660 --> 00:33:50,093
故事板上有一件很酷的事情就是它

626
00:33:50,162 --> 00:33:52,795
会预览你选择的很多东西。

627
00:33:52,864 --> 00:33:55,332
所以这里会更好一些，因为这样会少一些

628
00:33:55,400 --> 00:33:57,534
白色空间继续。所以我们会看到看起来像什么。

629
00:34:04,576 --> 00:34:06,342
所以我们走吧，太空狗在这里，

630
00:34:06,411 --> 00:34:10,480
检查。这看起来好一点。它仍然不是很棒。

631
00:34:10,548 --> 00:34:12,882
在我们要做的流行音乐中，它可能会更好

632
00:34:12,951 --> 00:34:17,387
下一个。但是，它更好一点。请注意，我无法点击

633
00:34:17,456 --> 00:34:19,622
在背景像一个流行的离开这里。

634
00:34:19,691 --> 00:34:21,724
我仍然需要回到文件。和

635
00:34:21,793 --> 00:34:22,525
另外，当我们在这里时，

636
00:34:22,594 --> 00:34:25,462
让我们来看看这在iPhone上看起来像什么。

637
00:34:25,530 --> 00:34:28,064
因为iPhone我们不能做表单，但是

638
00:34:28,133 --> 00:34:31,067
我答应你iOS会自动适应和

639
00:34:31,136 --> 00:34:36,006
它会。所以，我们走了。让我们在这里展示太空狗。

640
00:34:36,074 --> 00:34:38,942
这里是。检查，你可以看到它适应做

641
00:34:39,011 --> 00:34:44,180
全屏替代。好吧。

642
00:34:44,249 --> 00:34:48,785
让我们回到我们的幻灯片并谈论Popover。

643
00:34:52,390 --> 00:34:56,326
所以popover真的只是另一种做模态的方式。

644
00:34:56,394 --> 00:34:58,295
它看起来完全不同，而且

645
00:34:58,363 --> 00:35:00,863
它有更多的配置。这真的就是这样

646
00:35:00,932 --> 00:35:03,633
继续与popover。所以这里有一个弹出窗口

647
00:35:03,701 --> 00:35:06,236
就在这儿。你可以看到它有这个“搜索

648
00:35:06,304 --> 00:35:10,674
预约“MVC即将出现在那里

649
00:35:10,742 --> 00:35:13,443
这是一个完全不同的MVC，它实际上是存在的

650
00:35:13,512 --> 00:35:16,012
显示模式cuz你不能做任何事情在这个屏幕上

651
00:35:16,081 --> 00:35:18,982
现在，除了没有MVC的交互。但是你可以

652
00:35:19,050 --> 00:35:21,551
看到其余的用户界面只是变成了灰色，所以

653
00:35:21,619 --> 00:35:24,820
它没有覆盖它，它只是在这里评分。

654
00:35:24,889 --> 00:35:27,357
注意Popover顶部有一个小箭头，

655
00:35:27,426 --> 00:35:28,391
一个小三角。

656
00:35:28,460 --> 00:35:33,296
这件事是指出这个Popover出现的原因。

657
00:35:33,364 --> 00:35:36,699
Segway导致Segway发生的事情

658
00:35:36,768 --> 00:35:40,469
那里往往是bar按钮项目或按钮项目，但

659
00:35:40,538 --> 00:35:44,073
它也可以是任何视图中的任意任意矩形。和

660
00:35:44,142 --> 00:35:45,308
你为什么要这样？

661
00:35:45,376 --> 00:35:48,277
假设你有一个文本编辑器，你选择了一个词，并且

662
00:35:48,346 --> 00:35:51,181
你做了一些说，显示字典定义的用户界面

663
00:35:51,249 --> 00:35:54,050
这个，你在弹出窗口弹出来。那么你会的

664
00:35:54,119 --> 00:35:56,552
希望那个popover的箭头指向这个词。

665
00:35:56,621 --> 00:35:59,890
对，所以你需要能够有任意的矩形。

666
00:36:01,392 --> 00:36:05,528
现在注意到背景中的灰色区域，

667
00:36:05,597 --> 00:36:08,364
虽然你无法与之互动，但你可以触摸它

668
00:36:08,433 --> 00:36:11,300
当你这样做的时候，这会影响流行。

669
00:36:11,369 --> 00:36:13,903
所以popovers没有取消

670
00:36:13,972 --> 00:36:16,806
纽扣。他们不需要取消按钮，因为你可以

671
00:36:16,874 --> 00:36:19,442
总是只需点击背景即可取消它们。

672
00:36:19,511 --> 00:36:22,212
这就是为什么我们要非常小心的alert和

673
00:36:22,281 --> 00:36:25,114
action sheet来说出我们的哪些行动项目

674
00:36:25,183 --> 00:36:29,418
基本上是取消按钮，所以他们不知道放弃

675
00:36:29,487 --> 00:36:32,722
他们在一个视图控制像这样。

676
00:36:34,692 --> 00:36:37,460
好吧，就像我说的那样，popover与之相同

677
00:36:37,529 --> 00:36:40,329
模式，你也可以用同样的方式创建它。

678
00:36:40,398 --> 00:36:44,534
你可以通过按住Ctrl键来将它挂在那里。就是这个时候

679
00:36:44,603 --> 00:36:47,537
你连接它你说popover而不是现在模态。

680
00:36:49,574 --> 00:36:53,910
有些事情你需要做或可能想要做的事情

681
00:36:53,978 --> 00:36:58,414
准备一个popover然而。所以，popover已经很少了

682
00:36:58,483 --> 00:37:00,750
箭头。你可能想让它指向正确的方向。

683
00:37:00,819 --> 00:37:03,219
你可能想在一个小矩形中指出一点

684
00:37:03,288 --> 00:37:06,356
一个看法。你必须说出那是什么。您

685
00:37:06,424 --> 00:37:09,425
可能想要控制它如何适应iPhone，因为它

686
00:37:09,494 --> 00:37:10,260
确实适应。

687
00:37:10,328 --> 00:37:12,828
因为通常你在iPhone上没有弹出，但是

688
00:37:12,897 --> 00:37:15,565
你仍然想要像我们展示的单一代码

689
00:37:15,633 --> 00:37:18,101
alert和action sheet，这是popover的东西，和

690
00:37:18,169 --> 00:37:21,170
它只是适应并在iPhone上全屏。

691
00:37:21,239 --> 00:37:23,739
所以你可以用popover来控制它。就这样

692
00:37:23,808 --> 00:37:26,342
你所有这些都是通过内置的机制来完成的

693
00:37:26,411 --> 00:37:30,213
iOS称为演示控制器。所以，所有的阶段

694
00:37:30,282 --> 00:37:32,482
被称为演示控制器，

695
00:37:32,551 --> 00:37:34,951
我根本不会谈论。然而，

696
00:37:35,020 --> 00:37:38,387
你称为UIpopover演示文稿的弹出窗口控制器

697
00:37:38,456 --> 00:37:41,424
控制器是你想要达到的地方

698
00:37:41,493 --> 00:37:43,993
准备做这些事情，

699
00:37:44,061 --> 00:37:46,896
设置三角形，它指向的小箭头，

700
00:37:46,965 --> 00:37:51,134
对适应机制等做任何事情。所以

701
00:37:51,202 --> 00:37:52,868
让我们看看是什么样子。所以这里有一个准备

702
00:37:52,937 --> 00:37:56,705
为了一个popover，一切都是一样的

703
00:37:56,774 --> 00:37:59,542
在绿色代码上，一直到黄色的代码行。

704
00:37:59,611 --> 00:38:01,077
这就是事情变得不同的地方。和

705
00:38:01,146 --> 00:38:03,813
在这里我正在做的是我问视图控制器

706
00:38:03,882 --> 00:38:04,713
我正在介绍，

707
00:38:04,782 --> 00:38:08,284
因为它是popover演示控制器。这将是n，，

708
00:38:08,352 --> 00:38:11,187
如果这不是popover演示文稿，但是如果是

709
00:38:11,255 --> 00:38:14,123
popover演示文稿，然后我可以配置popover。

710
00:38:14,192 --> 00:38:16,793
例如，说允许的箭头方向或

711
00:38:16,861 --> 00:38:19,462
说，我想要的文本中的矩形。

712
00:38:19,530 --> 00:38:24,267
或者，你可以在这里看到，设置它是委托。所以

713
00:38:24,336 --> 00:38:28,304
设置委托是我们如何控制适应行为。

714
00:38:28,373 --> 00:38:33,142
iOS如何适应尝试呈现popover的方式

715
00:38:33,211 --> 00:38:37,813
在iPhone上。所以让我们来谈谈适应和

716
00:38:37,882 --> 00:38:41,717
这是如何工作的。这真的很棒，因为你可以

717
00:38:41,786 --> 00:38:44,320
然后编写你的代码来处理popovers和

718
00:38:44,389 --> 00:38:45,522
它只是自动在iPhone上工作，

719
00:38:45,590 --> 00:38:48,558
如果设备成语是iPad，则不必花费太多，

720
00:38:48,627 --> 00:38:54,363
然后做这个。所以这真的很好。那么会发生什么

721
00:38:54,432 --> 00:38:57,400
这里是当popover呈水平状态时

722
00:38:57,469 --> 00:39:00,002
紧凑的环境，你会知道这是哪一个。

723
00:39:00,071 --> 00:39:03,573
这是一款基本上处于风景或肖像的iPhone。

724
00:39:03,641 --> 00:39:06,809
iPhone +纵向。在那种环境中呢

725
00:39:06,878 --> 00:39:10,613
通过从popover切换到全屏来适应。但

726
00:39:10,682 --> 00:39:14,784
你可以通过设置委托来阻止它

727
00:39:14,852 --> 00:39:17,420
就像我在前一张幻灯片上展示的那样执行

728
00:39:17,489 --> 00:39:20,623
此代理方法称为适配器演示样式

729
00:39:20,691 --> 00:39:25,227
控制器特征收集及其控制。基本上要求

730
00:39:25,296 --> 00:39:28,531
你，问代表。我即将展示这件事

731
00:39:28,599 --> 00:39:31,734
与这个贸易集合。就像水平紧凑一样，

732
00:39:31,803 --> 00:39:35,805
对。而我，你会做什么样的表现

733
00:39:35,873 --> 00:39:39,309
像我这样做？我默认情况下，我会在iPad或iPad上做popover

734
00:39:39,377 --> 00:39:43,512
一个非水平紧凑的地方，然后我会做

735
00:39:43,581 --> 00:39:46,782
全屏幕，不超过屏幕，水平全屏

736
00:39:46,851 --> 00:39:49,352
紧凑，这是默认设置。那么，你可以在这里介绍一下，

737
00:39:49,421 --> 00:39:53,589
说不，不，不，我希望你不适应。换一种说法，

738
00:39:53,658 --> 00:39:57,860
不适应。当我说返回UIModalPresentationStyle.none时，

739
00:39:57,928 --> 00:40:00,363
它说在任何地方都不适应。

740
00:40:00,431 --> 00:40:04,333
这意味着，将其作为iPhone上的弹出窗口。所以

741
00:40:04,402 --> 00:40:06,168
这是你如何使它不适应和

742
00:40:06,237 --> 00:40:08,137
从而在iPhone上使用弹出窗口。

743
00:40:08,206 --> 00:40:11,073
如果popover有点小，那么你有时想要的

744
00:40:11,142 --> 00:40:14,844
将很好地适应，你会想要这个。作为备选

745
00:40:14,913 --> 00:40:19,015
对此，让我们假设你真的，这个popover很大，而且

746
00:40:19,083 --> 00:40:22,018
它不适合，那么你可以使用这个委托方法。和

747
00:40:22,086 --> 00:40:24,921
这个委托方法的作用是允许你

748
00:40:24,989 --> 00:40:30,527
返回不同的MVC来展示iPhone。

749
00:40:30,595 --> 00:40:33,463
现在你为什么要返回一个不同的MVC？

750
00:40:33,531 --> 00:40:35,531
这不是因为你想要一个不同的内容MVC。

751
00:40:35,600 --> 00:40:40,069
我仍然想要我的文档信息视图控制器。

752
00:40:40,137 --> 00:40:41,470
我仍然希望它在那里，但是

753
00:40:41,539 --> 00:40:43,973
也许我想将它包裹在导航控制器中，所以

754
00:40:44,042 --> 00:40:46,909
我可以在顶部放一个取消按钮。因为当它

755
00:40:46,978 --> 00:40:48,845
出现全屏，我必须能够取消它，

756
00:40:48,913 --> 00:40:51,815
不像popover。你看到区别？所以

757
00:40:51,883 --> 00:40:53,783
我可以有完全相同的视图控制器，

758
00:40:53,852 --> 00:40:56,652
我的文档信息视图控制器。从这里开始

759
00:40:56,721 --> 00:40:59,322
适配器演示样式的方法视图控制器，

760
00:40:59,390 --> 00:41:02,325
我要返回其根视图的导航控制器

761
00:41:02,394 --> 00:41:04,994
控制器是我的文档视图控制器，和

762
00:41:05,063 --> 00:41:08,864
我已经添加了一个取消按钮。合理？

763
00:41:08,933 --> 00:41:12,401
这是一种继续前进的方式，让它适应iPhone，但是

764
00:41:12,470 --> 00:41:16,372
参与一点，控制MVC是什么

765
00:41:16,441 --> 00:41:21,076
呈现。另一个重要的popover

766
00:41:21,145 --> 00:41:24,747
问题是它的大小。默认情况下，popover将会结束，

767
00:41:24,815 --> 00:41:27,450
出现在一种固定的大小。这是关于宽度

768
00:41:27,519 --> 00:41:31,120
一部iPhone，可能是大多数屏幕高度的三分之二，

769
00:41:31,188 --> 00:41:34,824
但它几乎不是你想要的。你想要popover

770
00:41:34,893 --> 00:41:37,226
上来越小越好，对，

771
00:41:37,295 --> 00:41:41,097
以适应您的用户界面。所以你用这个var来做到这一点

772
00:41:41,165 --> 00:41:43,466
在您的视图控制器中，正在呈现的视图控制器中，

773
00:41:43,535 --> 00:41:46,602
称为首选内容大小。它只是返回大小

774
00:41:46,670 --> 00:41:50,606
这个视图控制器喜欢。它想要的大小

775
00:41:50,675 --> 00:41:53,976
在流行。我将在演示中展示你

776
00:41:54,045 --> 00:41:58,414
这里我们如何使用auto来计算最小尺寸

777
00:41:58,482 --> 00:42:00,583
布局。因为这真的是我们真正想做的事情。

778
00:42:00,652 --> 00:42:06,021
我们想要使用自动布局来适应我们UI中的内容。

779
00:42:06,090 --> 00:42:09,658
所以这是一个非常重要的变量，可以设置或覆盖，

780
00:42:09,727 --> 00:42:10,693
非此即彼。

781
00:42:10,762 --> 00:42:12,895
好的，让我们来做。

782
00:42:12,964 --> 00:42:16,132
让我们继续，制作一个漂亮的小弹出版本。

783
00:42:16,201 --> 00:42:19,535
我，我要在这里做的是回到表情艺术和做

784
00:42:19,603 --> 00:42:23,773
这与我们以前做的完全一样，只有这一点

785
00:42:23,842 --> 00:42:27,309
出现的信息按钮，哎呀，在这里。但是我

786
00:42:27,378 --> 00:42:31,013
会添加另一个按钮，做同样的事情，相同的MVC，

787
00:42:31,082 --> 00:42:34,483
但在一个popover。所以你可以并排看到它们。和

788
00:42:34,552 --> 00:42:38,120
我要用完全相同的MVC来做到这一点。他们会

789
00:42:38,189 --> 00:42:42,291
完全分享代码。好，那我们该怎么做？

790
00:42:42,359 --> 00:42:44,860
真的很容易，我会去得到另一个变种按钮项目。

791
00:42:44,929 --> 00:42:47,930
把它放在检查旁边。我们会打这个

792
00:42:47,998 --> 00:42:51,633
检查，我们将它称为流行。因为它会流行起来

793
00:42:51,702 --> 00:42:54,571
我只是要控制从它拖到这个确切的MVC

794
00:42:54,639 --> 00:42:57,272
就在这儿。而不是现在的模态，

795
00:42:57,341 --> 00:43:01,276
我现在要做popover。在这里你可以看到

796
00:43:01,345 --> 00:43:03,345
我可以检查这个segue。这是旧的segue，

797
00:43:03,414 --> 00:43:06,282
显示文件信息。这是新的。你知道吗？

798
00:43:06,350 --> 00:43:09,485
这个popover，因为我可以告诉它是否是一个popover和

799
00:43:09,553 --> 00:43:12,488
准备，我会有完全相同的标识符。

800
00:43:12,557 --> 00:43:15,424
显示文档信息，它会做同样的准备。

801
00:43:15,493 --> 00:43:18,795
如果我们需要的话，我们会在这里放一点点

802
00:43:18,863 --> 00:43:21,330
去控制一些流行的东西。看，甚至一些

803
00:43:21,398 --> 00:43:24,800
这些东西像是哪个箭头方向是允许的

804
00:43:24,869 --> 00:43:27,203
像这样的东西可以在故事板中设置。

805
00:43:27,271 --> 00:43:30,106
你甚至不需要在准备中做到这一点。但

806
00:43:30,174 --> 00:43:31,774
代表我们正在调整的东西，

807
00:43:31,842 --> 00:43:34,177
我们需要去做，而且我会告诉你。

808
00:43:36,347 --> 00:43:38,548
所以这确实是我们需要做的。

809
00:43:38,617 --> 00:43:40,383
我们已经有了一个功能齐全的MVC。

810
00:43:40,451 --> 00:43:43,252
你已经可以看到，它不会很漂亮。

811
00:43:43,321 --> 00:43:45,654
看看这个popover会有多大。

812
00:43:45,723 --> 00:43:47,823
这不会很好。但让我们去看看，

813
00:43:47,892 --> 00:43:50,927
让我们在iPad上运行它，看看我们得到了什么。

814
00:43:57,669 --> 00:44:00,502
好的，我们的Apple Bee就在这里。

815
00:44:00,571 --> 00:44:02,405
这是我们的旧检查员，对吗？

816
00:44:02,473 --> 00:44:07,176
看起来不错，这里是我们的popover。看起来不太好，

817
00:44:07,245 --> 00:44:12,214
但看起来不那么糟糕。至少它在工作，但是

818
00:44:12,283 --> 00:44:15,184
我们不希望它变得这么大。我们希望它成为

819
00:44:15,253 --> 00:44:19,088
只是大到足以适应所有这些东西，好吗？所以

820
00:44:19,157 --> 00:44:21,124
要做到这一点，我们显然需要首选内容，

821
00:44:21,192 --> 00:44:23,125
设置首选的内容大小，那么让我们来做。

822
00:44:23,194 --> 00:44:26,295
让我们来看看我们的文档内幕控制器，并且

823
00:44:26,363 --> 00:44:30,333
它基本上设置了自己喜欢的内容大小。

824
00:44:30,401 --> 00:44:36,238
现在哪里可以设置自己的内容大小？

825
00:44:36,307 --> 00:44:39,041
viewDidLayoutSubviews中有一个好的地方

826
00:44:39,110 --> 00:44:42,211
因为请记住viewDidLayoutSubviews

827
00:44:42,280 --> 00:44:44,881
是一个我们确信的地方

828
00:44:44,949 --> 00:44:47,383
几何图形会起作用，对吧？这是我鼓励你的地方

829
00:44:47,452 --> 00:44:50,586
放置所有几何特定的代码。

830
00:44:50,655 --> 00:44:53,155
所以这是一个很好的地方放在这里。

831
00:44:53,224 --> 00:44:56,191
我们的首选尺寸可能实际上不取决于我们的尺寸

832
00:44:56,260 --> 00:44:57,893
几何非常多，

833
00:44:57,962 --> 00:45:00,563
因为我们只是在堆栈视图上进行自动布局

834
00:45:00,632 --> 00:45:04,033
并看看它们是如何适合的。但它不能伤害

835
00:45:04,102 --> 00:45:07,303
东西在这里。这可能是一个很好的地方。

836
00:45:07,372 --> 00:45:10,272
现在我该如何计算我喜欢的尺寸？

837
00:45:10,341 --> 00:45:14,476
那么，我其实会回到我的故事板。

838
00:45:14,545 --> 00:45:17,480
而我将要做的是我要取得这个顶级水平

839
00:45:17,548 --> 00:45:21,117
堆栈视图在这里。看到这个堆栈视图？我要走了

840
00:45:21,185 --> 00:45:25,087
问iOS，我会告诉你如何做到这一点。什么是

841
00:45:25,155 --> 00:45:28,024
你可以成为最小的，并且仍然适合所有这些东西，

842
00:45:28,092 --> 00:45:29,758
仍然服从所有的限制？

843
00:45:29,827 --> 00:45:31,360
所以这就是我要做的。所以要做到这一点，

844
00:45:31,428 --> 00:45:34,663
我实际上需要一个outlet到这个顶级视图。

845
00:45:34,732 --> 00:45:37,166
所以让我们继续并创建outlet。

846
00:45:37,234 --> 00:45:41,570
我们会在这里直接进入我们的outlet，

847
00:45:41,639 --> 00:45:46,409
按住Ctrl +拖动，将其称为我们的topLevelView。所以

848
00:45:46,477 --> 00:45:51,380
这里是topLevelView。而我要在这里做的，

849
00:45:51,449 --> 00:45:56,385
我必须在这里制作完整的代码大小。所以

850
00:45:56,454 --> 00:46:01,090
我要做的是我要用这个非常棒的用户界面视图

851
00:46:01,159 --> 00:46:06,362
称为尺寸的方法适合大小。所以

852
00:46:06,431 --> 00:46:08,397
这是你给它一个尺寸的方法

853
00:46:08,466 --> 00:46:12,001
它会告诉你什么尺寸最适合这个尺寸。和

854
00:46:12,070 --> 00:46:14,503
那么有两个非常酷的尺寸。

855
00:46:14,572 --> 00:46:17,039
一个尽可能小，另一个与...一样大

856
00:46:17,107 --> 00:46:20,009
可能。这些是你可以给我们的两种尺寸。

857
00:46:20,078 --> 00:46:23,512
所以我会用尽可能小的尺寸来做到这一点。

858
00:46:23,580 --> 00:46:27,549
所以这是它的工作原理。我会说如果我可以让

859
00:46:27,618 --> 00:46:32,888
fitSize等于我的topLevelView，

860
00:46:32,957 --> 00:46:36,592
那顶级堆栈视图的东西，

861
00:46:36,661 --> 00:46:40,596
sizeThatFits和sizeThatFits和

862
00:46:40,665 --> 00:46:46,869
最小的可能大小是UI布局，哇，

863
00:46:46,937 --> 00:46:51,773
那里，UILayout装配尺寸。你可以在这里看到

864
00:46:51,842 --> 00:46:54,610
有两个神奇的，扩大规模和

865
00:46:54,679 --> 00:46:58,547
压缩大小。所以压缩的大小是我想要的。和

866
00:46:58,616 --> 00:47:01,550
这基本上是说去做自动布局和

867
00:47:01,619 --> 00:47:05,087
看到你可能的最小尺寸。所以如果我是

868
00:47:05,156 --> 00:47:09,424
能够做到这一点，如果不是零，我可以做到这一点，

869
00:47:09,493 --> 00:47:13,362
如果我的outlet已经在这里设置。那我就把我的

870
00:47:13,431 --> 00:47:17,833
优选的内容大小等于宽度为的CG大小

871
00:47:17,901 --> 00:47:22,337
该装配尺寸加上一点填充。你懂，

872
00:47:22,406 --> 00:47:25,040
我想要一个小边框。我不想要我的popover

873
00:47:25,109 --> 00:47:28,710
被阻塞我的用户界面。我想多一点。

874
00:47:28,779 --> 00:47:31,680
当然，应该有一个不变的，但这是一个演示

875
00:47:31,749 --> 00:47:34,349
我们不会那样做。所以这里的高度是

876
00:47:34,418 --> 00:47:37,486
还有些镶边。

877
00:47:37,554 --> 00:47:39,021
所以我只想做一个不错的尺寸。

878
00:47:39,090 --> 00:47:41,757
所以这是我喜欢的尺寸，我会，

879
00:47:41,826 --> 00:47:44,026
如果我那么大，我觉得我会很好看。

880
00:47:44,094 --> 00:47:46,629
所以让我们看看我们运行时会发生什么。

881
00:47:50,701 --> 00:47:56,304
又是在这里。准备好了，因为

882
00:47:56,373 --> 00:47:59,408
有我们正常的，正确的，现在是流行的一个。

883
00:47:59,477 --> 00:48:02,711
呜呼，它看起来真的很好。这是很不错的，

884
00:48:02,780 --> 00:48:07,750
比整个A文件更好。和

885
00:48:07,819 --> 00:48:10,352
事实上，我们来看看。这是popover看起来很棒。

886
00:48:10,421 --> 00:48:13,455
让我们先看看它，看看它在iPhone上的外观

887
00:48:13,524 --> 00:48:16,792
只是真的很快。确保它在做适应性调整，我

888
00:48:16,860 --> 00:48:19,461
告诉你，水平紧凑，它会适应。

889
00:48:19,530 --> 00:48:23,265
所以让我们来做它应该做的事情吧。所以

890
00:48:23,334 --> 00:48:27,336
在这里，我们去，苹果蜂。这是我们的Apple Bees。我们去流行吧

891
00:48:27,404 --> 00:48:31,473
过度。它仍然有效。看起来不错。没有破坏任何东西

892
00:48:31,542 --> 00:48:34,076
我们改变了首选尺寸或类似的东西。

893
00:48:34,144 --> 00:48:36,979
它仍然很好，但是

894
00:48:37,048 --> 00:48:39,181
我们在这里确实存在一些问题。

895
00:48:39,249 --> 00:48:43,352
在这个世界上，所有的事情都不是非常棒，

896
00:48:43,420 --> 00:48:46,888
我们再来看看iPad上的这个。和

897
00:48:46,957 --> 00:48:50,092
我们会看到这一点，它看起来确实如此

898
00:48:50,161 --> 00:48:54,829
漂亮，它不是非常明智，因为我为什么

899
00:48:54,898 --> 00:48:59,234
有一个缩略图图像，当我可以看到那里的图像。

900
00:48:59,303 --> 00:49:01,436
这里有缩略图图像没有意义。

901
00:49:01,505 --> 00:49:04,640
在这种情况下，这是有道理的，好吧，

902
00:49:04,709 --> 00:49:06,442
这是有道理的，因为我阻止了图像，并且

903
00:49:06,511 --> 00:49:09,978
所以我想提醒自己这是哪一个。但在这儿，

904
00:49:10,047 --> 00:49:12,848
它并不在那里，所以我们不应该在这里。

905
00:49:12,917 --> 00:49:16,852
另外，返回到文档。是的，但如何

906
00:49:16,920 --> 00:49:19,922
只需点击这里，所以我不需要返回文档。

907
00:49:19,990 --> 00:49:22,191
这基本上是这个东西的取消按钮，

908
00:49:22,260 --> 00:49:24,726
所以我也不需要那样。最后，我不知道是否

909
00:49:24,795 --> 00:49:27,863
你可以通过屏幕分辨率看到这一点，

910
00:49:27,931 --> 00:49:30,732
但你看到我的三角形吗？实际上

911
00:49:30,801 --> 00:49:33,368
有点透明。这有点模糊背景，

912
00:49:33,437 --> 00:49:38,340
但后来我在这里坚强的白色背景。

913
00:49:38,409 --> 00:49:39,625
我想摆脱我坚硬的白色背景，并且

914
00:49:39,626 --> 00:49:40,842
我不希望那样，

915
00:49:40,911 --> 00:49:43,279
整个事情有点透明。

916
00:49:43,347 --> 00:49:46,114
它有点软，看起来好一些，

917
00:49:46,183 --> 00:49:49,585
这样做不那么苛刻。所以这种视图的背景

918
00:49:49,653 --> 00:49:52,254
控制器真的不应该宽，应该清楚，

919
00:49:52,323 --> 00:49:56,092
并让弹出窗口的模糊显示在后面。所以我想做

920
00:49:56,160 --> 00:49:59,695
这些更改在我的文档视图控制器中。

921
00:49:59,764 --> 00:50:02,564
所以我会在更新UI的末尾执行此操作。

922
00:50:02,633 --> 00:50:06,802
我只是想在这里说，如果我的演示控制器是

923
00:50:06,871 --> 00:50:09,204
一个，nope呈现控制器，

924
00:50:09,273 --> 00:50:12,541
那是把我拉起来的控制器。

925
00:50:12,610 --> 00:50:18,447
如果它是演示控制器上的UI弹出窗口，

926
00:50:18,516 --> 00:50:20,982
那么我会在这里做一些特定的东西流行。

927
00:50:21,051 --> 00:50:25,153
就像我将要隐藏缩略图图像视图一样

928
00:50:25,222 --> 00:50:29,191
=真。我会隐藏那张图片，我不想那样，而且

929
00:50:29,260 --> 00:50:30,792
我也要隐藏那个返回按钮。

930
00:50:30,861 --> 00:50:34,096
所以，让我们回到我们的故事板，然后制作

931
00:50:34,165 --> 00:50:36,999
另一个outlet。这个outlet将会是

932
00:50:37,067 --> 00:50:40,769
此处返回文档按钮。控制拖动，

933
00:50:40,838 --> 00:50:46,642
我会调用给我，我的returnToDocumentButton。

934
00:50:46,710 --> 00:50:50,278
回到这里。好吧，

935
00:50:50,347 --> 00:50:54,382
所以我要回到文档按钮。

936
00:50:54,451 --> 00:50:59,187
它也是隐藏的，我们来修复这个背景。

937
00:50:59,256 --> 00:51:04,860
我有我的view.backgroundColor = .clear。

938
00:51:04,928 --> 00:51:08,531
所以我在右边获得了很好的弹出效果模糊效果

939
00:51:08,599 --> 00:51:10,966
那里，对吗？让我们看看是否能够解决所有问题，

940
00:51:11,035 --> 00:51:15,037
那确实很简单。这有点奇怪

941
00:51:15,106 --> 00:51:17,339
自动布局，是我们只是隐藏这些东西和

942
00:51:17,408 --> 00:51:19,908
那么剩下的东西就要去了

943
00:51:19,977 --> 00:51:23,412
在它周围形成，并使用自动布局。所以我们走了，

944
00:51:23,480 --> 00:51:27,515
流行，看看那个。我不知道你是否可以看到模糊，

945
00:51:27,584 --> 00:51:30,252
在那里。所以苹果，和

946
00:51:30,321 --> 00:51:31,553
如果我把它改成蜜蜂，

947
00:51:31,622 --> 00:51:34,589
你会看到那里有点黄色。所以这很好，

948
00:51:34,658 --> 00:51:36,958
而且它使用的空间也非常小

949
00:51:37,027 --> 00:51:40,128
也给我没有任何需要的信息

950
00:51:40,197 --> 00:51:43,498
我不需要的东西，比如返回文档按钮。和

951
00:51:43,567 --> 00:51:47,303
让我们一起去看看iPhone上发生了什么，当我们这样做时

952
00:51:47,371 --> 00:51:52,341
虽然。有时你需要在改变时付钱。

953
00:51:56,046 --> 00:51:59,348
开始了。好，流行。

954
00:52:01,585 --> 00:52:05,820
这不好。那么，这里发生了什么？

955
00:52:05,889 --> 00:52:09,491
为什么这是完全黑色的？这是最糟糕的可能

956
00:52:09,560 --> 00:52:11,493
可能发生的事情，特别是在iPhone X中，

957
00:52:11,562 --> 00:52:14,296
因为整个屏幕是黑色的，而它是白色的。

958
00:52:14,365 --> 00:52:17,432
好吧，为什么会发生这种情况？好吧，我们改变了

959
00:52:17,501 --> 00:52:20,703
该清单的背景颜色要清楚。所以

960
00:52:20,771 --> 00:52:25,140
我们实际上正在寻找这里的空白。小心点

961
00:52:25,208 --> 00:52:26,975
不要靠近我们的设备，它可能会吸引我们，

962
00:52:27,044 --> 00:52:29,978
因为这是绝对无效的，那里没有任何东西。

963
00:52:30,046 --> 00:52:33,348
所以这不太好。所以我们改变了我们的popover。

964
00:52:33,417 --> 00:52:36,552
现在，我们可以去做采用的事情，

965
00:52:36,620 --> 00:52:40,356
我们在那里解决你在之前查看控制器的问题

966
00:52:40,424 --> 00:52:42,124
它提出了，但我会做别的。

967
00:52:42,193 --> 00:52:44,960
我要修改适应性，以便它显示弹出窗口

968
00:52:45,028 --> 00:52:47,929
iPhone，因为现在，我已经让这个popover变得更好，而且

969
00:52:47,998 --> 00:52:50,900
小巧，它会很适合iPhone。所以

970
00:52:50,968 --> 00:52:53,234
让我们去解决这个问题。让我们来适应，所以

971
00:52:53,303 --> 00:52:57,005
在iPhone上，它仍然显示弹出窗口。所以我会这样做的，

972
00:52:57,074 --> 00:53:00,176
但回到这里。这是我的准备工作。

973
00:53:00,244 --> 00:53:02,044
这是我为我的两个segue做好准备的地方，

974
00:53:02,113 --> 00:53:05,814
popover和其他segue。所以在这里，

975
00:53:05,883 --> 00:53:09,117
当我做我的准备工作时，我只需要抓住我的popover

976
00:53:09,186 --> 00:53:12,254
演示控制器，并将自己设置为其代表，如此

977
00:53:12,323 --> 00:53:13,988
我可以参与适应。

978
00:53:14,057 --> 00:53:16,658
所以我会说，如果我可以让我的popover演示

979
00:53:16,727 --> 00:53:20,395
控制器等于目标视图控制器

980
00:53:20,464 --> 00:53:22,631
popover演示控制器，再次，

981
00:53:22,699 --> 00:53:25,300
如果我们不是popover，这将是磨坊。所以它不会

982
00:53:25,368 --> 00:53:29,638
影响我们所拥有的摩尔。没有效果。这如果让不会

983
00:53:29,707 --> 00:53:34,242
发生。然后，我要设置popover控制器委托

984
00:53:34,311 --> 00:53:37,378
等于我自己。当然，只要我这样做，

985
00:53:37,447 --> 00:53:41,049
现在我需要说，是的，我是UIPopoverPresentationControll-

986
00:53:41,118 --> 00:53:44,385
erDelegate。那里的所有方法都是可选的，所以

987
00:53:44,454 --> 00:53:47,055
我成功实现了该协议。

988
00:53:47,124 --> 00:53:49,325
但我会选择一个来执行，

989
00:53:49,393 --> 00:53:50,793
这将在幻灯片中讨论，

990
00:53:50,861 --> 00:53:53,762
这是适应性演示风格

991
00:53:53,831 --> 00:53:58,334
控制器，traitCollection。所以你可以再次看到它

992
00:53:59,436 --> 00:54:03,872
这里。所以这再次，

993
00:54:03,940 --> 00:54:07,342
这将是一个popover PresentationController。

994
00:54:07,411 --> 00:54:09,912
它在给定的TraitCollection中看到。

995
00:54:09,980 --> 00:54:12,547
水平压缩，例如，无论如何。

996
00:54:12,616 --> 00:54:14,983
你希望我使用什么模式演示风格？

997
00:54:15,051 --> 00:54:19,287
默认情况下，对于紧凑宽度的全屏幕，

998
00:54:19,356 --> 00:54:21,356
这是默认设置。所以我会说，不，

999
00:54:21,425 --> 00:54:26,361
我希望你不要做任何事。演示风格无，

1000
00:54:26,430 --> 00:54:31,900
这意味着不适应。适应风格是没有的。

1001
00:54:31,969 --> 00:54:35,270
没有适应风格，因为我不想让你适应。

1002
00:54:35,339 --> 00:54:38,273
这会导致它继续使用popover，

1003
00:54:38,342 --> 00:54:39,841
因为它是演示风格。

1004
00:54:39,910 --> 00:54:42,011
所以让我们一起去看看，看看它是否在iPhone上得到了解决。

1005
00:54:49,819 --> 00:54:53,789
我们走了，然后流行。所有固定。

1006
00:54:53,857 --> 00:54:57,960
即使在横向模式下，这看起来也不错。

1007
00:55:00,931 --> 00:55:04,733
而这一切都没有打破这个检查员。尽管如此

1008
00:55:04,801 --> 00:55:06,802
使用完全相同的代码，这是因为没有

1009
00:55:06,871 --> 00:55:08,837
涉及到的popover presentation controller，

1010
00:55:08,906 --> 00:55:14,076
所以这些代码都没有任何影响。好吧，就是这样。

1011
00:55:14,144 --> 00:55:23,251
让我们回到我们的幻灯片。下一个segue

1012
00:55:23,320 --> 00:55:26,922
我们要谈论的方式是unwind。unwind segue。

1013
00:55:26,990 --> 00:55:31,126
这是iOS中唯一一个不会创建新的游戏

1014
00:55:31,194 --> 00:55:34,496
MVC。我只想提醒你，所有空荡荡的segue

1015
00:55:34,564 --> 00:55:37,566
我们之前已经讨论过，他们总是创建一个新的MVC。

1016
00:55:37,634 --> 00:55:40,001
即使在分割视图控制器中显示细节，

1017
00:55:40,070 --> 00:55:44,539
用新的MVC替换细节。当然，所有

1018
00:55:44,608 --> 00:55:46,708
另一个导航推入堆栈。

1019
00:55:46,776 --> 00:55:49,210
从表面上看，很明显，创建一个并提出来，但是

1020
00:55:49,279 --> 00:55:52,214
unwind不是，这是唯一一个这样做。和

1021
00:55:52,283 --> 00:55:54,683
这是因为，unwind的地方在于，

1022
00:55:54,752 --> 00:55:57,118
它延续到现有的视图控制器，

1023
00:55:57,187 --> 00:55:59,988
介绍了当前的视图控制器，

1024
00:56:00,056 --> 00:56:02,858
或者通过提出一些其他视图间接提出

1025
00:56:02,926 --> 00:56:06,361
控制器，提出这一个..那么这是什么东西

1026
00:56:06,430 --> 00:56:09,931
对吗？那么，真的有两件事。一，这很好

1027
00:56:10,000 --> 00:56:13,702
在导航中跳回不止一步

1028
00:56:13,770 --> 00:56:15,871
控制器。所以你有一个导航控制器，

1029
00:56:15,939 --> 00:56:17,973
你已经推出了一堆卡在堆栈上，

1030
00:56:18,041 --> 00:56:21,643
现在你想跳回三张或四张牌。

1031
00:56:21,712 --> 00:56:25,146
这对此很有帮助。另一件非常有用的事情

1032
00:56:25,215 --> 00:56:26,514
或者其他非常有用的东西

1033
00:56:26,583 --> 00:56:28,517
是，我们在第一张幻灯片中谈到了什么

1034
00:56:28,585 --> 00:56:32,287
今天正在传达回它的视图

1035
00:56:32,356 --> 00:56:36,391
控制器。因为通过回到它的

1036
00:56:36,459 --> 00:56:40,462
呈现视图控制器而不仅仅是解雇自己，

1037
00:56:40,531 --> 00:56:43,731
它给这个视图控制器一个机会

1038
00:56:43,800 --> 00:56:48,003
与它进行交互。好吧。那么整体如何呢？

1039
00:56:48,072 --> 00:56:52,106
东西有用吗？而不是控制拖动来创建此MVC

1040
00:56:52,175 --> 00:56:54,976
通过控制拖动到MVC你想回去

1041
00:56:55,045 --> 00:56:57,478
至。相反，你会按Ctrl拖动到这个小小的红色按钮

1042
00:56:57,547 --> 00:56:59,648
在MVC的顶部你可能以前看过这个，

1043
00:56:59,716 --> 00:57:01,082
你以前可能见过这个，

1044
00:57:01,151 --> 00:57:02,117
这个小右键，

1045
00:57:02,185 --> 00:57:04,119
你可能想知道这是什么东西？

1046
00:57:04,188 --> 00:57:07,588
当你连接到你会得到一些选择。

1047
00:57:07,657 --> 00:57:10,759
这些选择将成为一系列特殊方法

1048
00:57:10,827 --> 00:57:12,694
Xcode已在您的整个应用程序中找到。

1049
00:57:12,762 --> 00:57:15,163
所以它看起来在你的整个应用程序，并寻找

1050
00:57:15,232 --> 00:57:18,733
这些特殊的方法，并在这里列出它们。和

1051
00:57:18,802 --> 00:57:22,036
我们将讨论是什么让这个特别的以及你如何

1052
00:57:22,105 --> 00:57:25,940
指定这个特殊的东西。所以，你就是这样设置的

1053
00:57:26,009 --> 00:57:30,145
在线segue。那么，它从那里做的时候会发生什么？

1054
00:57:30,213 --> 00:57:34,383
Ctrl拖到那里，然后选择一个方法，

1055
00:57:34,451 --> 00:57:38,453
去找一些展示给我的MVC

1056
00:57:38,522 --> 00:57:41,089
提供给我的人，或者这条链上的所有人，谁

1057
00:57:41,158 --> 00:57:45,994
实现该方法。 IOS会看每一个

1058
00:57:46,062 --> 00:57:49,097
人，他们向你展示的每一个MVC，直到

1059
00:57:49,166 --> 00:57:52,133
它找到一个实现你选择的方法

1060
00:57:52,202 --> 00:57:55,670
控制拖到那个outlet。如果它找不到，

1061
00:57:55,739 --> 00:58:00,041
它不会Segue。就这样，这就是Unwind Segue的工作原理。

1062
00:58:00,110 --> 00:58:01,810
所以我们来看看这里涉及的方法。

1063
00:58:01,878 --> 00:58:04,646
这是特殊的方法。它期待

1064
00:58:04,715 --> 00:58:08,016
它将放入该菜单。它必须有两件事。

1065
00:58:08,085 --> 00:58:10,651
一次，即时IBAction，如果你不准时

1066
00:58:10,720 --> 00:58:12,453
在它前面的IBAction，它不会工作。

1067
00:58:12,522 --> 00:58:14,990
不会出现在列表中的小退出按钮。和

1068
00:58:15,059 --> 00:58:17,392
第二，它必须有一个，只有一个，

1069
00:58:17,460 --> 00:58:20,262
论证必须是UIStoryboardSegue类型的。

1070
00:58:20,330 --> 00:58:23,298
所以UistoryboardSegue和第一个完全一样

1071
00:58:23,366 --> 00:58:28,403
争取为segue做准备。它有目的地

1072
00:58:28,472 --> 00:58:31,473
视图控制器。它还具有源视图控制器

1073
00:58:31,542 --> 00:58:35,577
在unwind的情况下。所以它知道你从哪里解开，

1074
00:58:35,646 --> 00:58:37,846
这就是源头和你展开的地方，

1075
00:58:37,915 --> 00:58:41,583
那就是目的地。所以这是唯一的说法。

1076
00:58:41,652 --> 00:58:46,054
所以如果你创建了这个方法，它将会在任何VC中的任何地方

1077
00:58:46,122 --> 00:58:50,859
在你的应用程序中，它会出现在那里的退出菜单中。现在，

1078
00:58:50,928 --> 00:58:55,196
让我们在代码中讨论这两种方法。

1079
00:58:55,265 --> 00:58:59,234
你确实准备了一个Unwind Segue。你确实做到了

1080
00:58:59,302 --> 00:59:02,737
准备为所谓的segue，为你，你会，

1081
00:59:02,806 --> 00:59:06,341
也许以为你会想要得到目的地，

1082
00:59:06,410 --> 00:59:10,044
像你通常所做的那样，并将其称为公共API。但

1083
00:59:10,113 --> 00:59:12,814
我实际上建议不要这样。和

1084
00:59:12,883 --> 00:59:17,151
这是为什么？因为你提出的MVC

1085
00:59:17,220 --> 00:59:19,253
基本上是你的视图的一部分，而且

1086
00:59:19,322 --> 00:59:22,724
你真的不想知道他们的名字。你哪个

1087
00:59:22,793 --> 00:59:24,493
必须在这里，因为你必须说目的地，

1088
00:59:24,561 --> 00:59:28,963
作为一些MVC。所以我建议不要这样，

1089
00:59:29,032 --> 00:59:32,934
它有点违反MVC。所以你怎么样

1090
00:59:33,003 --> 00:59:37,672
展开的segue与提交它的MVC交谈？

1091
00:59:37,741 --> 00:59:40,575
那么，你做什么是你有一个提出它说话的人

1092
00:59:40,644 --> 00:59:44,912
到它。你可以通过这种特殊的方法做到这一点。

1093
00:59:44,981 --> 00:59:46,381
这是特殊的方法。

1094
00:59:46,449 --> 00:59:49,851
回去吧，以segue为参数。有IB行动。

1095
00:59:49,920 --> 00:59:52,054
在这里，我正在查看源代码

1096
00:59:52,122 --> 00:59:54,656
这是我们从哪里退出的地方

1097
00:59:54,725 --> 00:59:57,092
从这个公共API中获得一些东西。

1098
00:59:57,160 --> 01:00:01,129
所以如果是联系人的例子，这会问

1099
01:00:01,197 --> 01:00:05,534
添加联系人MVC，好的，你有什么联系？哪一个

1100
01:00:05,602 --> 01:00:08,303
完美服从MVC，因为当你呈现一些东西时，

1101
01:00:08,371 --> 01:00:12,674
你当然可以和你在场的人交谈。所以

1102
01:00:12,743 --> 01:00:16,244
这就是它的工作原理。请注意，当展开时，

1103
01:00:16,312 --> 01:00:18,613
提出的人被解雇了。

1104
01:00:18,681 --> 01:00:20,549
现在将离开堆。

1105
01:00:20,617 --> 01:00:25,119
这个特殊的方法完成后。好吧？所以

1106
01:00:25,188 --> 01:00:27,989
让我们去演示一下。我们要为此做些什么？

1107
01:00:28,057 --> 01:00:30,959
我要为我们的检查员添加一个关闭文档按钮。

1108
01:00:31,027 --> 01:00:33,628
好吧，所以我们正在检查文件，并且

1109
01:00:33,697 --> 01:00:35,163
如果我只想马上关闭它会怎么样？

1110
01:00:35,232 --> 01:00:37,565
现在，我必须返回到文档，然后完成。

1111
01:00:37,634 --> 01:00:40,769
但是，如果我只是在检查员说，呃，这很酷，

1112
01:00:40,837 --> 01:00:43,471
关闭这个文档，直接回到文档用户。

1113
01:00:43,540 --> 01:00:46,474
所以这就是我们要做的，我要去看我的故事板

1114
01:00:46,543 --> 01:00:48,910
就在这儿。而我只是会去，

1115
01:00:48,978 --> 01:00:51,446
只是为了让你知道我在这里做什么，

1116
01:00:51,515 --> 01:00:53,982
我正在拍一个按钮，我要把它放在这里。

1117
01:00:54,051 --> 01:00:57,785
这个按钮将被称为关闭文件。

1118
01:00:57,854 --> 01:01:01,756
我会把它变成红色，所以很明显它有点

1119
01:01:01,825 --> 01:01:05,293
破坏性的做到这一点。我想要这个人做什么，

1120
01:01:05,362 --> 01:01:07,495
是关闭文件。那么，我该怎么做？

1121
01:01:07,564 --> 01:01:09,731
那么，我会unwind地做，所以

1122
01:01:09,800 --> 01:01:12,934
这意味着我想要Ctrl拖动到这个小退出按钮

1123
01:01:13,003 --> 01:01:15,803
上面这儿。但是，如果我现在按Ctrl键拖动它，事实上，我们来做吧

1124
01:01:15,872 --> 01:01:18,640
你会发现没有选择。看，Ctrl拖动和

1125
01:01:18,708 --> 01:01:22,243
它甚至不会让我这样做，因为那里什么都没有。

1126
01:01:22,312 --> 01:01:24,412
那是因为我没有创造这些特别的东西

1127
01:01:24,481 --> 01:01:25,914
方法。所以

1128
01:01:25,983 --> 01:01:28,617
让我们继续阅读我们的EmojiArtViewController和

1129
01:01:28,685 --> 01:01:31,452
在这里创建这些特殊方法之一。我会调用

1130
01:01:31,521 --> 01:01:35,623
它，@Baction必须有它的一部分。我会调用

1131
01:01:35,692 --> 01:01:39,194
它，关闭（通过塞克，是什么，它会被称为和

1132
01:01:39,262 --> 01:01:42,364
它必须有UIStoryboardSeque）作为唯一的

1133
01:01:42,432 --> 01:01:45,901
参数在这里。这是特殊的方法和

1134
01:01:45,969 --> 01:01:49,137
这是一个func。我在这里面要做的是，

1135
01:01:49,206 --> 01:01:53,675
关。关闭自己。现在，我可以在这里做其他事情，

1136
01:01:53,744 --> 01:01:58,947
我可以通过Segue.source获得seg。

1137
01:01:59,016 --> 01:02:01,682
这是我从中解脱出来的MVC。

1138
01:02:01,751 --> 01:02:03,017
无论如何，我可以去谈谈它。

1139
01:02:03,086 --> 01:02:05,286
我不需要在这里，因为我只是要关闭，

1140
01:02:05,355 --> 01:02:08,456
就像点击一样。当然，接近这个方法

1141
01:02:08,525 --> 01:02:11,726
在这里。它将一个bar按钮项作为参数。

1142
01:02:11,794 --> 01:02:13,962
我会做这个可选的技巧

1143
01:02:14,030 --> 01:02:19,033
默认为零。这样我可以说close（）和

1144
01:02:19,102 --> 01:02:22,971
这将工作。现在我已经创建了这个特殊的方法。

1145
01:02:23,040 --> 01:02:25,406
现在，如果我回到我的故事板。和

1146
01:02:25,475 --> 01:02:30,412
Ctrl从这个文档按钮拖动。到这里。

1147
01:02:30,480 --> 01:02:32,814
呜呼，那里是closeBySegue。

1148
01:02:32,883 --> 01:02:35,183
注意它有点让这个名字变得很糟糕。

1149
01:02:35,252 --> 01:02:38,953
但在那里它已经closeBySegue。我要点击它。现在，

1150
01:02:39,022 --> 01:02:42,691
当我点击关闭按钮时，它会搜索谁的人

1151
01:02:42,759 --> 01:02:45,326
给我看这个。在这种情况下，

1152
01:02:45,395 --> 01:02:47,962
它会找到一些东西，因为当然，我们的表情符号

1153
01:02:48,031 --> 01:02:50,599
艺术品文件是介绍这位督察的人。

1154
01:02:57,407 --> 01:02:59,407
所以，我们走了。我们得到了苹果蜜蜂。对？

1155
01:02:59,476 --> 01:03:02,243
所以现在如果我们想关闭文档。

1156
01:03:02,311 --> 01:03:05,479
就在这儿。我们必须点击这里。然后点击完成。

1157
01:03:05,548 --> 01:03:09,084
把它带回来。但现在，我们可以说，关闭这个文件。

1158
01:03:10,753 --> 01:03:13,020
它解开了emoji视图控制器，

1159
01:03:13,089 --> 01:03:16,657
这封闭了自己。在这里工作的同样的东西，

1160
01:03:16,726 --> 01:03:20,095
对？unwind并注意unwind的效果

1161
01:03:20,163 --> 01:03:25,666
而且它也可以通过模式呈现。

1162
01:03:25,735 --> 01:03:28,603
好吧？这是unwind的，

1163
01:03:28,672 --> 01:03:31,706
这是一个非常简单的。让我们回到我们的幻灯片。

1164
01:03:39,349 --> 01:03:42,483
好吧，我们要谈的最后一个segue是，

1165
01:03:42,552 --> 01:03:45,820
嵌入segue，好吗？所以一个Embed Segue是

1166
01:03:45,889 --> 01:03:50,125
真的很酷Segue。它允许你采取self.view，

1167
01:03:50,193 --> 01:03:54,295
视图控制器中视图的顶部，并放置它

1168
01:03:54,364 --> 01:03:56,298
在另一个视图控制器的视图层次结构内。

1169
01:03:57,767 --> 01:04:00,568
所以它基本上嵌入了一个视图控制器

1170
01:04:00,637 --> 01:04:04,438
另一个。好吧，这真是一个强大的封装

1171
01:04:04,507 --> 01:04:07,108
技术能够做到这一点，因为你可以拥有

1172
01:04:07,177 --> 01:04:09,844
视图控制器内部非常复杂的视图，

1173
01:04:09,913 --> 01:04:13,147
完全由全视图控制器套件控制，

1174
01:04:13,216 --> 01:04:15,149
对？它有一个模型，它知道如何更新它的UI，

1175
01:04:15,218 --> 01:04:17,952
它有outlet，一切。它在那边

1176
01:04:18,021 --> 01:04:20,555
控制这个嵌入在另一个视图中的视图

1177
01:04:20,624 --> 01:04:23,791
控制器的视图层次。所以它超强大。

1178
01:04:23,860 --> 01:04:27,862
Xcode使这非常容易做到。你只需要去

1179
01:04:27,931 --> 01:04:30,731
你的工具窗口。同样的地方，你拖出一个按钮或

1180
01:04:30,800 --> 01:04:33,100
无论如何，你拖出了所谓的容器视图。

1181
01:04:33,169 --> 01:04:34,669
所以只需搜索容器和

1182
01:04:34,737 --> 01:04:37,939
你会找到它。你把它拖出来，当你这样做时，

1183
01:04:38,008 --> 01:04:41,142
它会自动创建这个嵌入segue。

1184
01:04:41,211 --> 01:04:44,512
你会看到它是如何让这个小S形的segue在那里，

1185
01:04:44,581 --> 01:04:46,314
到另一个视图控制器。和

1186
01:04:46,383 --> 01:04:48,283
那么你可以在视图控制器中做任何你想做的事情。

1187
01:04:48,352 --> 01:04:50,618
将其身份设置为无论在哪里放置UI，

1188
01:04:50,687 --> 01:04:52,453
连接outlet，做任何事情。

1189
01:04:52,522 --> 01:04:57,591
它完全是它自己的视图控制器。现在它只是工作

1190
01:04:57,660 --> 01:05:01,128
像其他segue一样，你可以为它做好准备，对吧？

1191
01:05:01,197 --> 01:05:03,498
所以你要准备继续，和

1192
01:05:03,566 --> 01:05:06,734
你会在那里设置segue标识符。

1193
01:05:06,803 --> 01:05:09,938
不过，有一点需要考虑的是嵌入式segue

1194
01:05:10,006 --> 01:05:14,509
那里的时间。就像其他segue一样，

1195
01:05:14,578 --> 01:05:18,112
你连接的东西没有设置。所以

1196
01:05:18,181 --> 01:05:20,448
你不能在那里更新它。所以

1197
01:05:20,517 --> 01:05:24,285
很多时候，我们继续嵌入segue，我们做了什么

1198
01:05:24,354 --> 01:05:28,355
在准备过程中，我们抓住嵌入式segue，或者

1199
01:05:28,424 --> 01:05:31,792
嵌入式MVC。我们抓住那个视图控制器的所有者，所以我们可以

1200
01:05:31,861 --> 01:05:34,529
稍后再谈，因为我们可能需要更新它或

1201
01:05:34,598 --> 01:05:37,932
随着时间的推移，设置一些关于这个模型的内容。

1202
01:05:38,000 --> 01:05:40,535
所以我们实际上通常有一个变种，我们抓住它，

1203
01:05:40,603 --> 01:05:43,270
我们稍后再谈。那我该怎么办

1204
01:05:43,339 --> 01:05:46,407
在我们的演示中做这个。演示结束后，我们完成了

1205
01:05:46,475 --> 01:05:49,076
本周，我们已经完成了很长一段时间

1206
01:05:49,145 --> 01:05:52,880
下周感恩节。但是我们会怎么做

1207
01:05:52,949 --> 01:05:56,484
这个演示是我要把检查员的东西

1208
01:05:56,553 --> 01:06:00,054
我们做了，我会把它嵌入我的小覆盖

1209
01:06:00,123 --> 01:06:02,456
EmojiArt文件。所以我可以看到

1210
01:06:02,525 --> 01:06:07,528
在任何时候我的文件的大小和创建日期。

1211
01:06:07,597 --> 01:06:09,496
我不必点击其中的任何一个按钮，

1212
01:06:09,565 --> 01:06:12,233
流行或检查，做到这一点。我将永远能够看到它

1213
01:06:12,302 --> 01:06:14,268
在底部。而现在，要做到这一点，当然，

1214
01:06:14,337 --> 01:06:17,372
每次我的文档保存时我都必须更新它，

1215
01:06:17,440 --> 01:06:19,607
对？因为它显示了文档的大小。

1216
01:06:19,675 --> 01:06:21,843
当它自动保存时，会发生改变。

1217
01:06:21,911 --> 01:06:22,910
所以我必须能够改变它。

1218
01:06:22,979 --> 01:06:26,047
所以我必须抓住这个嵌入式的东西

1219
01:06:26,116 --> 01:06:31,086
更新模型，因为我的模型基本上发生了变化。

1220
01:06:32,788 --> 01:06:36,390
好吧，让我们回到这里来做这件事。

1221
01:06:36,459 --> 01:06:37,792
那么我们需要做什么？

1222
01:06:37,861 --> 01:06:39,694
那么，我们只是要抓住那个容器视图。

1223
01:06:39,762 --> 01:06:42,563
我们来做吧，容器视图。这是，对吧？

1224
01:06:42,632 --> 01:06:44,232
我会在这里拖动它。

1225
01:06:44,301 --> 01:06:47,902
现在，这很难拖到你想要的地方。

1226
01:06:47,971 --> 01:06:50,671
我要把它结束，好吧，让我们滚动这个

1227
01:06:50,740 --> 01:06:53,474
你可以看到它更好。有点难以拖累这一点

1228
01:06:53,543 --> 01:06:54,975
这里因为当我尝试放弃这个时，

1229
01:06:55,044 --> 01:06:58,379
看，它总是试图把它放在我的拖放区或

1230
01:06:58,447 --> 01:07:00,247
在滚动视图中。看看它是如何说拖放区，

1231
01:07:00,316 --> 01:07:02,383
滚动视图？它试图把它放在那里。和

1232
01:07:02,452 --> 01:07:05,186
没有办法放弃它。我也不想要它

1233
01:07:05,254 --> 01:07:08,155
那些。我希望它和所有这些一样

1234
01:07:08,224 --> 01:07:11,392
其他视图，并覆盖一切。好吧，

1235
01:07:11,461 --> 01:07:14,429
我会放弃，只是把它放在这里。至少它

1236
01:07:14,497 --> 01:07:16,964
把它放在那里。你可以在这里看到的是一点点的看法

1237
01:07:17,033 --> 01:07:20,601
它为我创建的控制器。所以这里是我要去的地方

1238
01:07:20,670 --> 01:07:24,405
尽我所能，我要在这里基本上做这件事。

1239
01:07:24,474 --> 01:07:26,741
但是，让我们来解决这个问题，

1240
01:07:26,810 --> 01:07:28,142
看起来像我的拖放区或

1241
01:07:28,211 --> 01:07:30,878
一些东西。我们将用文档大纲来做到这一点。

1242
01:07:30,947 --> 01:07:33,748
我在这份文件之前提醒过你

1243
01:07:33,816 --> 01:07:36,517
概述是解决这类问题的好地方。所以

1244
01:07:36,586 --> 01:07:39,219
你可以看到它实际上添加了它作为一个子视图

1245
01:07:39,288 --> 01:07:43,290
我的滚动视图。但我希望它能达到同一水平

1246
01:07:43,359 --> 01:07:45,526
作为拖放区域和表情符号集合视图。

1247
01:07:45,595 --> 01:07:49,764
所以我只是要把它拖出来，不要再是那里的子视图了。

1248
01:07:49,833 --> 01:07:52,366
现在，放置区域，表情符号和容器视图都在

1249
01:07:52,435 --> 01:07:58,339
同一级别。现在我们需要做一些约束，因为

1250
01:07:58,408 --> 01:07:59,941
我不希望这件事在这里坐在中间。

1251
01:08:00,009 --> 01:08:01,542
我真的希望它在底部边缘。

1252
01:08:01,611 --> 01:08:04,879
所以我会这样做的。我会设置约束00。

1253
01:08:04,947 --> 01:08:08,482
我希望我最近的邻居是安全的地方，

1254
01:08:08,551 --> 01:08:11,285
让我们希望。也许是的，也许不是，我们会看到的。

1255
01:08:11,354 --> 01:08:13,354
现在它想知道宽度和

1256
01:08:13,423 --> 01:08:16,590
高度。这件事需要知道宽度和高度。所以

1257
01:08:16,659 --> 01:08:20,394
我将把我的宽度和高度设置为首选

1258
01:08:20,463 --> 01:08:23,397
我的视图的内容大小当然是对的，

1259
01:08:23,466 --> 01:08:26,968
与popover相同的尺寸。但要做到这一点，我会

1260
01:08:27,037 --> 01:08:29,236
必须在这里设置宽度和高度

1261
01:08:29,305 --> 01:08:32,473
像我们之前看到的那样有他们的outlet。看看那个？

1262
01:08:32,542 --> 01:08:36,177
它跳了起来，它看起来像是安全区域。我们看看吧。

1263
01:08:36,245 --> 01:08:38,746
就在那里，安全区域和固定的宽度和高度。

1264
01:08:38,815 --> 01:08:40,848
那么，我们当然不需要固定的宽度和高度。

1265
01:08:40,917 --> 01:08:42,916
我们希望有这些outlet，所以

1266
01:08:42,985 --> 01:08:47,421
让我们添加这些东西的outlet。把它放在这里。

1267
01:08:47,490 --> 01:08:51,159
我们将控制拖动，而不是从那里，从这里。

1268
01:08:52,461 --> 01:08:55,997
这是我们的嵌入式，

1269
01:08:56,066 --> 01:09:01,201
embeddedDockInfoHeight。和

1270
01:09:01,270 --> 01:09:09,210
这一个是我们的embeddedDocInfoWidth。

1271
01:09:09,279 --> 01:09:11,212
所以我们必须设置这个宽度和

1272
01:09:11,280 --> 01:09:16,283
高度是我们的文档信息的首选内容大小。

1273
01:09:16,352 --> 01:09:20,421
所以让我们回到我们的视图，或者回到我们的故事板，以及

1274
01:09:20,490 --> 01:09:24,058
做我们的UI。我们在这里有这个用户界面。首先，我们必须

1275
01:09:24,127 --> 01:09:28,029
将其身份设置为DocInfoViewController。这是

1276
01:09:28,098 --> 01:09:30,665
关于嵌入式的伟大之处在于我们将获得全部

1277
01:09:30,733 --> 01:09:33,667
我们写的代码的好处是做大小和

1278
01:09:33,736 --> 01:09:35,436
所创造的，以及所有的东西。

1279
01:09:35,505 --> 01:09:37,672
我们要在这里获得所有的好处

1280
01:09:37,740 --> 01:09:41,609
自由。现在，在这里，嵌入式，我不需要，显然，这

1281
01:09:41,678 --> 01:09:44,045
视图。而且我不需要关闭文档或返回文档。

1282
01:09:44,114 --> 01:09:45,412
所以我会做另一种棘手的事情，

1283
01:09:45,481 --> 01:09:52,019
我要在这里抓住整个Stack视图，

1284
01:09:52,088 --> 01:09:54,521
这是我认为的，是的。我会把这个拖过去

1285
01:09:54,590 --> 01:09:59,093
在这里复制并粘贴在这里。那我就是

1286
01:09:59,162 --> 01:10:04,265
将它置于中间。这样它的中心。

1287
01:10:04,333 --> 01:10:06,900
当然，我会把我的outlet连接到它。

1288
01:10:06,969 --> 01:10:10,604
所以让我们来做。我们过来吧。

1289
01:10:10,673 --> 01:10:15,342
到这里去我们的outlet。他们来了。

1290
01:10:15,411 --> 01:10:18,146
所以让我们，这是我们的，让我们放大一点

1291
01:10:18,214 --> 01:10:21,448
你可以在这里看到更好的。所以这是我们的尺寸标签，

1292
01:10:21,517 --> 01:10:25,720
让我们把它拖到那里。这里是我们创建的标签，就在这里。

1293
01:10:25,788 --> 01:10:29,824
而我们的顶层视图实际上是现在这个堆栈视图。

1294
01:10:29,893 --> 01:10:34,027
所以我们来做一个toplevelView。所以我们接线了

1295
01:10:34,096 --> 01:10:37,665
我们的用户界面。所有这些其他代码都会正常工作，因为

1296
01:10:37,734 --> 01:10:42,103
我们设置这个东西是一个doc.info视图控制器。

1297
01:10:42,171 --> 01:10:45,473
现在让我们回到我们的EmojiArtViewController，然后

1298
01:10:45,541 --> 01:10:46,874
我们需要准备它。

1299
01:10:46,943 --> 01:10:48,876
所以它需要自己的标识符cuz

1300
01:10:48,944 --> 01:10:52,113
我们希望为这个嵌入做一点准备

1301
01:10:52,182 --> 01:10:55,282
一。所以我会点击这个，并检查它。和

1302
01:10:55,351 --> 01:10:57,351
我唯一可以检查的是它的标识符。

1303
01:10:57,420 --> 01:11:01,923
所以我会把它称为我的嵌入文档信息segue。

1304
01:11:03,259 --> 01:11:07,328
我们回到这里。现在我要说，

1305
01:11:07,397 --> 01:11:13,500
如果是嵌入文档信息segue，

1306
01:11:13,569 --> 01:11:18,405
然后我会在这里继续做下去，

1307
01:11:18,474 --> 01:11:25,379
是我要抓住该文件的MVC。所以我会去的

1308
01:11:25,448 --> 01:11:29,049
在这里创建一个局部变量，我将调用private var。

1309
01:11:29,118 --> 01:11:33,921
我会调用给我，我在这里叫什么？

1310
01:11:33,990 --> 01:11:37,425
我称之为嵌入式文档信息，

1311
01:11:37,493 --> 01:11:41,428
embeddedDocInfo，我们会调用它。和

1312
01:11:41,497 --> 01:11:45,933
它是DocumentInfoViewController类型的。所以

1313
01:11:46,001 --> 01:11:51,705
这里我只是想说我的embeddedDoc，

1314
01:11:51,774 --> 01:11:57,177
DocInfo = segue.destination.contents

1315
01:11:57,246 --> 01:12:02,049
可能作为一个文档您的意思是InfoViewController。

1316
01:12:02,118 --> 01:12:03,584
如果它不是文档信息控制器，

1317
01:12:03,653 --> 01:12:06,988
我甚至不想设置这个栏。然后，我需要做的是，

1318
01:12:07,056 --> 01:12:08,723
每次我的文档自动保存时，

1319
01:12:08,792 --> 01:12:09,823
我需要更新这个东西。

1320
01:12:09,892 --> 01:12:12,793
所以让我们来看看我们知道自动保存的地方。

1321
01:12:12,862 --> 01:12:14,895
就在我们正在观察的地方。

1322
01:12:14,964 --> 01:12:17,031
这里是我们观察文档状态的地方，

1323
01:12:17,100 --> 01:12:18,565
状态，状态变化。所以，

1324
01:12:18,634 --> 01:12:21,535
每次文档状态变为正常时，

1325
01:12:21,604 --> 01:12:24,371
我要更新它。因为我们知道当它自动保存时，

1326
01:12:24,440 --> 01:12:26,574
它进入可用状态，然后回到正常状态

1327
01:12:26,642 --> 01:12:29,777
它在第一次打开文档时也会起作用。所以

1328
01:12:29,846 --> 01:12:34,848
我只是在这里说，如果self.document，

1329
01:12:34,917 --> 01:12:38,986
.documentState，状态==正常，

1330
01:12:39,055 --> 01:12:45,426
那么我会让docInfoVC =我的self.embeddedDocInfo，

1331
01:12:47,063 --> 01:12:51,832
embeddedDocInfo。所以我明白了。然后，我会

1332
01:12:51,900 --> 01:12:56,537
将我的docInfoVC的模型设置为我自己，以防万一

1333
01:12:56,606 --> 01:12:59,473
已经在那里设置。这也会导致它更新。

1334
01:12:59,542 --> 01:13:02,910
然后我也要设置它的宽度和高度

1335
01:13:02,978 --> 01:13:06,980
基于这些约束嵌入文档，好吗？

1336
01:13:07,049 --> 01:13:12,486
所以，这是self.embeddedDocInfoWidth

1337
01:13:12,555 --> 01:13:16,490
是.constant = docInfoVC的

1338
01:13:16,559 --> 01:13:22,930
.preferredContentSize.width。这里同样的事情，

1339
01:13:22,998 --> 01:13:27,334
这将嵌入DICInfoHeight.constant

1340
01:13:27,403 --> 01:13:31,038
= docInfoVC.preferredContentSiz-

1341
01:13:31,106 --> 01:13:36,611
e.height。人群在这里门外，

1342
01:13:36,679 --> 01:13:38,246
所以让我真正快速地向你展示。

1343
01:13:44,254 --> 01:13:46,821
我们在这里，Apple Bees，它就在那里。

1344
01:13:46,889 --> 01:13:49,790
现在看起来不太合适。它的大小合适，

1345
01:13:49,859 --> 01:13:51,792
但它有这个白色背景。

1346
01:13:51,860 --> 01:13:54,761
如果我把这个苹果放在这里，那么请注意这一点

1347
01:13:54,830 --> 01:13:56,664
然后我尝试挑选苹果，

1348
01:13:56,732 --> 01:14:00,067
不，我不能捡起来。所以即使它很清楚，

1349
01:14:00,136 --> 01:14:02,570
这将是一个问题。所以我需要两件事情，我需要修复。

1350
01:14:02,638 --> 01:14:05,339
我不希望这个白色，我不希望它

1351
01:14:05,407 --> 01:14:08,843
抓住任何手势。所以让我们看看我们如何做到这一点，

1352
01:14:08,911 --> 01:14:12,113
我们在这里前往我们的故事板。我们会做到的

1353
01:14:12,181 --> 01:14:15,282
通过只有这个视图控制器在这里清除了

1354
01:14:15,351 --> 01:14:18,786
一个清晰的背景。所以这是要说清楚的。和

1355
01:14:18,854 --> 01:14:22,756
那么我们会让它不会拦截手势

1356
01:14:22,825 --> 01:14:25,526
点击此按钮。看到它说用户交互

1357
01:14:25,595 --> 01:14:30,064
在这个嵌入式视图中启用？我要关掉它。和

1358
01:14:30,133 --> 01:14:30,831
这就是如此

1359
01:14:30,900 --> 01:14:33,533
它没有任何用户交互，所以当然是这样

1360
01:14:33,602 --> 01:14:39,606
将不会抓住任何手势的东西。我们走吧，看，

1361
01:14:39,675 --> 01:14:43,744
很明显。这不会，让我们把苹果放在那里。

1362
01:14:43,813 --> 01:14:46,880
我可以选择苹果，即使它在最上面也是如此

1363
01:14:46,949 --> 01:14:48,282
那很好。所以这一切都是固定的。

1364
01:14:48,351 --> 01:14:52,219
它在iPad上运行得非常漂亮。如果我们改变了

1365
01:14:52,288 --> 01:14:55,122
一些东西，我们做了，我们移动了苹果，但是我们补充一下

1366
01:14:55,191 --> 01:14:58,025
会改变尺寸的东西。所以我们去这里，

1367
01:14:58,094 --> 01:14:58,892
我会把这个。

1368
01:14:58,961 --> 01:15:01,394
我们必须等一会儿才能自动保存，而且

1369
01:15:01,463 --> 01:15:04,832
那么希望这个718字节将会变成别的东西，

1370
01:15:08,838 --> 01:15:13,540
在这些囤积物进来之前，

1371
01:15:13,609 --> 01:15:18,145
760字节。而且，最后一件事，它适用于iPhone。

1372
01:15:18,213 --> 01:15:20,948
这一切都可以在iPhone上运行，因为嵌入是继续的

1373
01:15:21,017 --> 01:15:23,951
完全独立于它所在的平台。

1374
01:15:29,959 --> 01:15:33,393
它在那里。此外，这些东西都还在工作。

1375
01:15:33,462 --> 01:15:36,997
关闭文档，选择工作，Space Dog，Pop Over，

1376
01:15:37,066 --> 01:15:41,668
所有仍然工作。这是segues。所以希望，

1377
01:15:41,737 --> 01:15:44,405
你会在你的最终项目中使用全部的segue。

1378
01:15:44,473 --> 01:15:48,175
那么祝你好运。我会看到你全部进来

1379
01:15:48,244 --> 01:15:51,044
几个星期。 >>更多信息，

1380
01:15:51,113 --> 01:15:54,815
请访问我们的stanford.edu。

